{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Dashboard del Administrador\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Datos del CSV:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Apellido\"), /*#__PURE__*/_createCommentVNode(\" Agrega más columnas según la estructura de tu CSV \")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_UploadForm = _resolveComponent(\"UploadForm\");\n  const _component_Footer = _resolveComponent(\"Footer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"div\", null, [_hoisted_1, _createVNode(_component_UploadForm, {\n    onFileParsed: _ctx.handleFileParsed\n  }, null, 8 /* PROPS */, [\"onFileParsed\"]), _ctx.participants.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"table\", null, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.participants, (row, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(row.nombre), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.apellido), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.bootcamp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.fro), 1 /* TEXT */), _createCommentVNode(\" Agrega más celdas según la estructura de tu CSV \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_Footer)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","key","_createCommentVNode","_createElementBlock","_Fragment","_createVNode","_component_Header","_hoisted_1","_component_UploadForm","onFileParsed","_ctx","handleFileParsed","participants","length","_hoisted_2","_hoisted_3","_hoisted_4","_renderList","row","index","_toDisplayString","nombre","apellido","email","bootcamp","fro","_component_Footer"],"sources":["/home/alumno/Escritorio/trabajo_fin/Frontend/hackathon-admin/src/Views/Dashboard.vue"],"sourcesContent":["<template>\n  <Header />\n  <div>\n    <h1>Dashboard del Administrador</h1>\n    <UploadForm @fileParsed=\"handleFileParsed\" />\n    <div v-if=\"participants.length > 0\">\n      <h3>Datos del CSV:</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <!-- Agrega más columnas según la estructura de tu CSV -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(row, index) in participants\" :key=\"index\">\n            <td>{{ row.nombre }}</td>\n            <td>{{ row.apellido }}</td>\n            <td>{{ row.email }}</td>\n            <td>{{ row.bootcamp }}</td>\n            <td>{{ row.fro }}</td>\n            \n            \n            \n\n            <!-- Agrega más celdas según la estructura de tu CSV -->\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <Footer />\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue';\nimport Header from '@/components/Header.vue';\nimport Footer from '@/components/Footer.vue';\nimport UploadForm from '@/components/UploadForm.vue';\n\nexport default defineComponent({\n  name: 'Dashboard',\n  components: {\n    Header,\n    Footer,\n    UploadForm,\n  },\n  setup() {\n    const participants = ref([]);\n\n    const handleFileParsed = (data) => {\n      participants.value = data;\n    };\n\n    return {\n      participants,\n      handleFileParsed,\n    };\n  },\n});\n</script>\n"],"mappings":";gCAGIA,mBAAA,CAAoC,YAAhC,6BAA2B;;EAHnCC,GAAA;AAAA;gCAMMD,mBAAA,CAAuB,YAAnB,gBAAc;gCAEhBA,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZE,mBAAA,uDAA0D,C;;;;;uBAZtEC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAUC,iBAAA,GACVN,mBAAA,CA6BM,cA5BJO,UAAoC,EACpCF,YAAA,CAA6CG,qBAAA;IAAhCC,YAAU,EAAEC,IAAA,CAAAC;EAAgB,2CAC9BD,IAAA,CAAAE,YAAY,CAACC,MAAM,Q,cAA9BV,mBAAA,CAyBM,OA9BVW,UAAA,GAMMC,UAAuB,EACvBf,mBAAA,CAsBQ,gBArBNgB,UAMQ,EACRhB,mBAAA,CAaQ,iB,kBAZNG,mBAAA,CAWKC,SAAA,QA3Bfa,WAAA,CAgBqCP,IAAA,CAAAE,YAAY,EAhBjD,CAgBsBM,GAAG,EAAEC,KAAK;yBAAtBhB,mBAAA,CAWK;MAXqCF,GAAG,EAAEkB;IAAK,IAClDnB,mBAAA,CAAyB,YAAAoB,gBAAA,CAAlBF,GAAG,CAACG,MAAM,kBACjBrB,mBAAA,CAA2B,YAAAoB,gBAAA,CAApBF,GAAG,CAACI,QAAQ,kBACnBtB,mBAAA,CAAwB,YAAAoB,gBAAA,CAAjBF,GAAG,CAACK,KAAK,kBAChBvB,mBAAA,CAA2B,YAAAoB,gBAAA,CAApBF,GAAG,CAACM,QAAQ,kBACnBxB,mBAAA,CAAsB,YAAAoB,gBAAA,CAAfF,GAAG,CAACO,GAAG,kBAKdvB,mBAAA,qDAAwD,C;0CA1BpEA,mBAAA,e,GAgCEG,YAAA,CAAUqB,iBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}