{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9fcd9f84\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Revise los grupos generados.\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Si está de acuerdo con estos grupos puede descargarlos en formato CSV para su posterior utilización en el siguiente botón\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"grid md:grid-cols-2 gap-6 mb-6\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    class: \"button-view\",\n    onClick: $setup.fetchGroups\n  }, \"Mostrar Grupos\"), $setup.groups.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _createElementVNode(\"button\", {\n    class: \"button-view\",\n    onClick: $setup.downloadCSV\n  }, \"Descargar Grupos en .CSV\"), _createElementVNode(\"div\", _hoisted_6, [_createVNode($setup[\"VaInput\"], {\n    modelValue: $setup.filter,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filter = $event),\n    placeholder: \"Filter...\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode($setup[\"VaSelect\"], {\n    modelValue: $setup.filterByFields,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filterByFields = $event),\n    placeholder: \"Select filter fields\",\n    options: $setup.columnsWithName,\n    \"value-by\": \"value\",\n    multiple: \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), $setup.flattenedGroups.length ? (_openBlock(), _createBlock($setup[\"VaDataTable\"], {\n    key: 0,\n    items: $setup.flattenedGroups,\n    columns: $setup.columns,\n    filter: $setup.filter,\n    \"filter-method\": $setup.customFilteringFn,\n    onFiltered: _cache[2] || (_cache[2] = $event => $setup.filteredCount = $event.items.length)\n  }, null, 8 /* PROPS */, [\"items\", \"filter\"])) : _createCommentVNode(\"v-if\", true), $setup.filteredCount !== null ? (_openBlock(), _createBlock($setup[\"VaAlert\"], {\n    key: 1,\n    class: \"!mt-6\",\n    color: \"info\",\n    outline: \"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Number of filtered items: \"), _createVNode($setup[\"VaChip\"], null, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.filteredCount), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementVNode","class","_createElementBlock","onClick","$setup","fetchGroups","groups","length","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","downloadCSV","_hoisted_6","_createVNode","modelValue","filter","_cache","$event","placeholder","filterByFields","options","columnsWithName","multiple","flattenedGroups","_createBlock","items","columns","customFilteringFn","onFiltered","filteredCount","_createCommentVNode","color","outline","default","_withCtx","_createTextVNode","_toDisplayString","_"],"sources":["/home/alumno/Escritorio/HackatonF5/Frontend/hackathon-admin/src/components/TeamDetail.vue"],"sourcesContent":["<template>\n  <div>\n    <button class=\"button-view\" @click=\"fetchGroups\">Mostrar Grupos</button>\n\n    <div v-if=\"groups.length\">\n      <br>\n      <h4>Revise los grupos generados.</h4>\n      <h4>Si está de acuerdo con estos grupos puede descargarlos en formato CSV para su posterior utilización en el siguiente botón</h4>\n      <br>\n      <button class=\"button-view\" @click=\"downloadCSV\">Descargar Grupos en .CSV</button>\n\n      <div class=\"grid md:grid-cols-2 gap-6 mb-6\">\n        <VaInput v-model=\"filter\" placeholder=\"Filter...\" class=\"w-full\" />\n        <VaSelect\n          v-model=\"filterByFields\"\n          placeholder=\"Select filter fields\"\n          :options=\"columnsWithName\"\n          value-by=\"value\"\n          multiple\n        />\n      </div>\n\n      <VaDataTable\n        v-if=\"flattenedGroups.length\"\n        :items=\"flattenedGroups\"\n        :columns=\"columns\"\n        :filter=\"filter\"\n        :filter-method=\"customFilteringFn\"\n        @filtered=\"filteredCount = $event.items.length\"\n      />\n\n      <VaAlert v-if=\"filteredCount !== null\" class=\"!mt-6\" color=\"info\" outline>\n        Number of filtered items:\n        <VaChip>{{ filteredCount }}</VaChip>\n      </VaAlert>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport axios from 'axios';\nimport { VaInput, VaSelect, VaDataTable, VaAlert, VaChip } from 'vuestic-ui';\n\nconst groups = ref([]);\nconst filter = ref(\"\");\nconst filterByFields = ref([]);\nconst filteredCount = ref(null);\n\nconst fetchGroups = async () => {\n  try {\n    const response = await axios.get('http://localhost:4000/api/grupos');\n    groups.value = response.data;\n  } catch (error) {\n    console.error('Error fetching groups:', error);\n  }\n};\n\nconst downloadCSV = async () => {\n  try {\n    let csvContent = 'data:text/csv;charset=utf-8,';\n    groups.value.forEach((group, groupIndex) => {\n      csvContent += `Grupo ${groupIndex + 1}\\n`;\n      csvContent += 'Nombre,Apellido,Email,Front,Back,Bootcamp\\n';\n      group.forEach(person => {\n        csvContent += `${person.nombre},${person.apellido},${person.email},${person.front},${person.back},${person.bootcamp}\\n`;\n      });\n      csvContent += '\\n';\n    });\n\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement('a');\n    link.setAttribute('href', encodedUri);\n    link.setAttribute('download', 'grupos.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  } catch (error) {\n    console.error('Error al descargar el archivo CSV:', error);\n  }\n};\n\nconst flattenedGroups = computed(() => {\n  return groups.value.flatMap((group, groupIndex) => {\n    return group.map(person => ({ ...person, groupIndex: groupIndex + 1 }));\n  });\n});\n\nconst columns = [\n  { key: \"groupIndex\", label: \"Group\", sortable: true },\n  { key: \"nombre\", label: \"Nombre\", sortable: true },\n  { key: \"apellido\", label: \"Apellido\", sortable: true },\n  { key: \"email\", label: \"Email\", sortable: true },\n  { key: \"front\", label: \"Front\", sortable: true },\n  { key: \"back\", label: \"Back\", sortable: true },\n  { key: \"bootcamp\", label: \"Bootcamp\", sortable: true }\n];\n\nconst columnsWithName = [\n  { value: \"groupIndex\", text: \"Group\" },\n  { value: \"nombre\", text: \"Nombre\" },\n  { value: \"apellido\", text: \"Apellido\" },\n  { value: \"email\", text: \"Email\" },\n  { value: \"front\", text: \"Front\" },\n  { value: \"back\", text: \"Back\" },\n  { value: \"bootcamp\", text: \"Bootcamp\" }\n];\n\nconst customFilteringFn = (source, cellData) => {\n  if (!filter.value) {\n    return true;\n  }\n  if (filterByFields.value.length >= 1) {\n    const searchInCurrentRow = filterByFields.value.some(\n      (field) => cellData.column.key === field\n    );\n    if (!searchInCurrentRow) return false;\n  }\n  const filterRegex = new RegExp(filter.value, \"i\");\n  return filterRegex.test(source);\n};\n</script>\n\n<style scoped>\n.grid {\n  display: grid;\n}\n.button-view {\n  background-color: #09ea51; \n  border: none;\n  color: white;\n  padding: 0.625rem 1.25rem;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  margin: 0.25rem 0.125rem;\n  cursor: pointer;\n  border-radius: 0.25rem;\n}\n</style>\n"],"mappings":";;;EAAAA,GAAA;AAAA;gEAKMC,mBAAA,CAAI;gEACJA,mBAAA,CAAqC,YAAjC,8BAA4B;gEAChCA,mBAAA,CAAkI,YAA9H,2HAAyH;gEAC7HA,mBAAA,CAAI;;EAGCC,KAAK,EAAC;AAAgC;;uBAV/CC,mBAAA,CAmCM,cAlCJF,mBAAA,CAAwE;IAAhEC,KAAK,EAAC,aAAa;IAAEE,OAAK,EAAEC,MAAA,CAAAC;KAAa,gBAAc,GAEpDD,MAAA,CAAAE,MAAM,CAACC,MAAM,I,cAAxBL,mBAAA,CA+BM,OAnCVM,UAAA,GAKMC,UAAI,EACJC,UAAqC,EACrCC,UAAkI,EAClIC,UAAI,EACJZ,mBAAA,CAAkF;IAA1EC,KAAK,EAAC,aAAa;IAAEE,OAAK,EAAEC,MAAA,CAAAS;KAAa,0BAAwB,GAEzEb,mBAAA,CASM,OATNc,UASM,GARJC,YAAA,CAAmEX,MAAA;IAZ3EY,UAAA,EAY0BZ,MAAA,CAAAa,MAAM;IAZhC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAY0Bf,MAAA,CAAAa,MAAM,GAAAE,MAAA;IAAEC,WAAW,EAAC,WAAW;IAACnB,KAAK,EAAC;2CACxDc,YAAA,CAMEX,MAAA;IAnBVY,UAAA,EAcmBZ,MAAA,CAAAiB,cAAc;IAdjC,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcmBf,MAAA,CAAAiB,cAAc,GAAAF,MAAA;IACvBC,WAAW,EAAC,sBAAsB;IACjCE,OAAO,EAAElB,MAAA,CAAAmB,eAAe;IACzB,UAAQ,EAAC,OAAO;IAChBC,QAAQ,EAAR;6CAKIpB,MAAA,CAAAqB,eAAe,CAAClB,MAAM,I,cAD9BmB,YAAA,CAOEtB,MAAA;IA7BRL,GAAA;IAwBS4B,KAAK,EAAEvB,MAAA,CAAAqB,eAAe;IACtBG,OAAO,EAAExB,MAAA,CAAAwB,OAAO;IAChBX,MAAM,EAAEb,MAAA,CAAAa,MAAM;IACd,eAAa,EAAEb,MAAA,CAAAyB,iBAAiB;IAChCC,UAAQ,EAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEf,MAAA,CAAA2B,aAAa,GAAGZ,MAAM,CAACQ,KAAK,CAACpB,MAAM;kDA5BtDyB,mBAAA,gBA+BqB5B,MAAA,CAAA2B,aAAa,a,cAA5BL,YAAA,CAGUtB,MAAA;IAlChBL,GAAA;IA+B6CE,KAAK,EAAC,OAAO;IAACgC,KAAK,EAAC,MAAM;IAACC,OAAO,EAAP;;IA/BxEC,OAAA,EAAAC,QAAA,CA+BgF,MAExE,CAjCRC,gBAAA,CA+BgF,6BAExE,GAAAtB,YAAA,CAAoCX,MAAA;MAjC5C+B,OAAA,EAAAC,QAAA,CAiCgB,MAAmB,CAjCnCC,gBAAA,CAAAC,gBAAA,CAiCmBlC,MAAA,CAAA2B,aAAa,iB;MAjChCQ,CAAA;;IAAAA,CAAA;QAAAP,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}