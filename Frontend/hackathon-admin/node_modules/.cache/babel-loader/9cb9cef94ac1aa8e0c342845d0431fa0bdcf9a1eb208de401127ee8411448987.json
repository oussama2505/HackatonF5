{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9fcd9f84\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"bg-blue grid md:grid-cols-2 gap-6 mb-6\"\n};\nconst _hoisted_5 = {\n  class: \"group-title\"\n};\nexport function render(_ctx, _cache) {\n  const _component_VaInput = _resolveComponent(\"VaInput\");\n  const _component_VaSelect = _resolveComponent(\"VaSelect\");\n  const _component_VaDataTable = _resolveComponent(\"VaDataTable\");\n  const _component_VaCard = _resolveComponent(\"VaCard\");\n  const _component_VaChip = _resolveComponent(\"VaChip\");\n  const _component_VaAlert = _resolveComponent(\"VaAlert\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    class: \"button-view\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.fetchGroups && _ctx.fetchGroups(...args))\n  }, _toDisplayString(_ctx.$t('buttons.showGroups')), 1 /* TEXT */), _ctx.groups.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"h4\", null, _toDisplayString(_ctx.$t('buttons.revision_P1')), 1 /* TEXT */), _createElementVNode(\"h4\", null, _toDisplayString(_ctx.$t('buttons.revision_P2')), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"button\", {\n    class: \"button-view\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.downloadCSV && _ctx.downloadCSV(...args))\n  }, _toDisplayString(_ctx.$t('buttons.downloadGroups')), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_VaInput, {\n    modelValue: _ctx.filter,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.filter = $event),\n    placeholder: \"Filter...\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_VaSelect, {\n    modelValue: _ctx.filterByFields,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.filterByFields = $event),\n    placeholder: \"Select filter fields\",\n    options: _ctx.columnsWithName,\n    \"value-by\": \"value\",\n    multiple: \"\",\n    style: {\n      'z-index': '999'\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredGroupsByCard, (group, groupIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: groupIndex\n    }, [_createVNode(_component_VaCard, {\n      class: \"mb-4 border-b-2\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"h3\", _hoisted_5, \"Grupo \" + _toDisplayString(groupIndex + 1), 1 /* TEXT */), group.length ? (_openBlock(), _createBlock(_component_VaDataTable, {\n        key: 0,\n        items: group,\n        columns: _ctx.translatedColumns,\n        filter: _ctx.filter,\n        \"filter-method\": _ctx.customFilteringFn,\n        onFiltered: _cache[4] || (_cache[4] = $event => _ctx.filteredCount = $event.items.length)\n      }, null, 8 /* PROPS */, [\"items\", \"columns\", \"filter\", \"filter-method\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _ctx.filteredCount !== null ? (_openBlock(), _createBlock(_component_VaAlert, {\n    key: 0,\n    class: \"!mt-6\",\n    color: \"info\",\n    outline: \"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Number of filtered items: \"), _createVNode(_component_VaChip, null, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.filteredCount), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementVNode","class","_createElementBlock","onClick","_cache","args","_ctx","fetchGroups","$t","groups","length","_hoisted_1","_hoisted_2","_toDisplayString","_hoisted_3","downloadCSV","_hoisted_4","_createVNode","_component_VaInput","modelValue","filter","$event","placeholder","_component_VaSelect","filterByFields","options","columnsWithName","multiple","style","_Fragment","_renderList","filteredGroupsByCard","group","groupIndex","_component_VaCard","default","_withCtx","_hoisted_5","_createBlock","_component_VaDataTable","items","columns","translatedColumns","customFilteringFn","onFiltered","filteredCount","_createCommentVNode","_","_component_VaAlert","color","outline","_createTextVNode","_component_VaChip"],"sources":["/home/alumno/Escritorio/PruebaClone/HackatonF5/Frontend/hackathon-admin/src/components/TeamDetail.vue"],"sourcesContent":["<template>\n  <div>\n    <button class=\"button-view\" @click=\"fetchGroups\">{{ $t('buttons.showGroups') }}</button>\n\n    <div v-if=\"groups.length\">\n      <br>\n      <h4>{{ $t('buttons.revision_P1') }}</h4>\n      <h4>{{ $t('buttons.revision_P2') }}</h4>\n      <br>\n      <button class=\"button-view\" @click=\"downloadCSV\">{{ $t('buttons.downloadGroups') }}</button>\n\n      <div class=\"bg-blue grid md:grid-cols-2 gap-6 mb-6\">\n        <VaInput v-model=\"filter\" placeholder=\"Filter...\" class=\"w-full\" />\n        <VaSelect\n          v-model=\"filterByFields\"\n          placeholder=\"Select filter fields\"\n          :options=\"columnsWithName\"\n          value-by=\"value\"\n          multiple\n          :style=\"{ 'z-index': '999' }\"\n        />\n      </div>\n\n        <div v-for=\"(group, groupIndex) in filteredGroupsByCard\" :key=\"groupIndex\">\n          <VaCard class=\"mb-4 border-b-2\">\n            <h3 class=\"group-title\">Grupo {{ groupIndex + 1 }}</h3>\n            <VaDataTable\n              v-if=\"group.length\"\n              :items=\"group\"\n              :columns=\"translatedColumns\"\n              :filter=\"filter\"\n              :filter-method=\"customFilteringFn\"\n              @filtered=\"filteredCount = $event.items.length\"\n            />\n          </VaCard>\n        </div>\n\n      <VaAlert v-if=\"filteredCount !== null\" class=\"!mt-6\" color=\"info\" outline>\n        Number of filtered items:\n        <VaChip>{{ filteredCount }}</VaChip>\n      </VaAlert>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport axios from 'axios';\nimport { VaInput, VaSelect, VaDataTable, VaAlert, VaChip, VaCard } from 'vuestic-ui';\nimport { useI18n } from 'vue-i18n';\n\nconst { t } = useI18n();\n\nconst groups = ref([]);\nconst filter = ref(\"\");\nconst filterByFields = ref([]);\nconst filteredCount = ref(null);\n\nconst fetchGroups = async () => {\n  try {\n    const response = await axios.get('http://localhost:4000/api/grupos');\n    groups.value = response.data;\n  } catch (error) {\n    console.error('Error fetching groups:', error);\n  }\n};\n\nconst downloadCSV = async () => {\n  try {\n    let csvContent = 'data:text/csv;charset=utf-8,';\n    groups.value.forEach((group, groupIndex) => {\n      csvContent += `Grupo ${groupIndex + 1}\\n`;\n      csvContent += 'Nombre,Apellido,Email,Front,Back,Bootcamp\\n';\n      group.forEach(person => {\n        csvContent +=    <div v-for=\"(group, groupIndex) in filteredGroupsByCard\" :key=\"groupIndex\">\n          <VaCard class=\"mb-4 border-b-2\">\n            <h3 class=\"group-title\">Grupo {{ groupIndex + 1 }}</h3>\n            <VaDataTable\n              v-if=\"group.length\"\n              :items=\"group\"\n              :columns=\"translatedColumns\"\n              :filter=\"filter\"\n              :filter-method=\"customFilteringFn\"\n              @filtered=\"filteredCount = $event.items.length\"\n            />\n          </VaCard>\n        </div.nombre},${person.apellido},${person.email},${person.front},${person.back},${person.bootcamp}\\n`;\n      });\n      csvContent += '\\n';\n    });\n\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement('a');\n    link.setAttribute('href', encodedUri);\n    link.setAttribute('download', 'grupos.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  } catch (error) {\n    console.error('Error al descargar el archivo CSV:', error);\n  }\n};\n\nconst flattenedGroups = computed(() => {\n  return groups.value.flatMap((group, groupIndex) => {\n    return group.map(person => ({ ...person, groupIndex: groupIndex + 1 }));\n  });\n});\n\nconst filteredGroupsByCard = computed(() => {\n  return groups.value.map(group => {\n    return group.filter(person => customFilteringFn(person, { column: { key: filterByFields.value.join() }}));\n  });\n});\n\nconst columns = [\n  { key: \"groupIndex\", label: \"table.group\" },\n  { key: \"nombre\", label: \"table.name\" },\n  { key: \"apellido\", label: \"table.surname\" },\n  { key: \"email\", label: \"table.email\" },\n  { key: \"front\", label: \"table.front\" },\n  { key: \"back\", label: \"table.back\" },\n  { key: \"bootcamp\", label: \"table.bootcamp\" }\n];\n\nconst translatedColumns = computed(() => {\n  return columns.map(column => ({\n    ...column,\n    label: t(column.label)\n  }));\n});\n\nconst columnsWithName = [\n  { value: \"groupIndex\", text: t(\"table.group\") },\n  { value: \"nombre\", text: t(\"table.nombre\") },\n  { value: \"apellido\", text: t(\"table.apellido\") },\n  { value: \"email\", text: t(\"table.email\") },\n  { value: \"front\", text: t(\"table.front\") },\n  { value: \"back\", text: t(\"table.back\") },\n  { value: \"bootcamp\", text: t(\"table.bootcamp\") }\n];\n\nconst customFilteringFn = (source, cellData) => {\n  if (!filter.value) {\n    return true;\n  }\n  if (filterByFields.value.length >= 1) {\n    const searchInCurrentRow = filterByFields.value.some(\n      (field) => cellData.column.key === field\n    );\n    if (!searchInCurrentRow) return false;\n  }\n  const filterRegex = new RegExp(filter.value, \"i\");\n  return filterRegex.test(source);\n};\n</script>\n\n<style scoped>\n.grid {\n  display: grid;\n}\n.button-view {\n  background-color: #09ea51; \n  border: none;\n  color: white;\n  padding: 0.625rem 1.25rem;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  margin: 0.25rem 0.125rem;\n  cursor: pointer;\n  border-radius: 0.25rem;\n}\n.group-title {\n  font-size: 1.25rem;\n  font-weight: bold;\n  margin-bottom: 1rem;\n}\n.va-select-wrapper {\n  position: relative; /* Establecer posición relativa */\n  z-index: 1; /* Asegurar que el VaSelect esté en un nivel superior */\n  overflow: visible; /* Permitir que el VaSelect despliegue fuera de su contenedor */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}