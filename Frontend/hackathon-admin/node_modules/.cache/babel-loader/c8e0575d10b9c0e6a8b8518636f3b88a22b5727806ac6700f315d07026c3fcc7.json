{"ast":null,"code":"import { defineComponent, ref } from 'vue';\nimport Header from '@/components/Header.vue';\nimport Footer from '@/components/Footer.vue';\nimport UploadForm from '@/components/UploadForm.vue';\nexport default defineComponent({\n  name: 'Dashboard',\n  components: {\n    Header,\n    Footer,\n    UploadForm\n  },\n  setup() {\n    const participants = ref([]);\n    const handleFileParsed = data => {\n      participants.value = data;\n    };\n    return {\n      participants,\n      handleFileParsed\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","Header","Footer","UploadForm","name","components","setup","participants","handleFileParsed","data","value"],"sources":["/home/alumno/Escritorio/trabajo_fin/Frontend/hackathon-admin/src/Views/Dashboard.vue"],"sourcesContent":["<template>\n  <Header />\n  <div>\n    <h1>Dashboard del Administrador</h1>\n    <UploadForm @fileParsed=\"handleFileParsed\" />\n    <div v-if=\"participants.length > 0\">\n      <h3>Datos del CSV:</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <!-- Agrega más columnas según la estructura de tu CSV -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(row, index) in participants\" :key=\"index\">\n            <td>{{ row.nombre }}</td>\n            <td>{{ row.apellido }}</td>\n            <td>{{ row.email }}</td>\n            <td>{{ row.apellido }}</td>\n            \n            \n\n            <!-- Agrega más celdas según la estructura de tu CSV -->\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <Footer />\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue';\nimport Header from '@/components/Header.vue';\nimport Footer from '@/components/Footer.vue';\nimport UploadForm from '@/components/UploadForm.vue';\n\nexport default defineComponent({\n  name: 'Dashboard',\n  components: {\n    Header,\n    Footer,\n    UploadForm,\n  },\n  setup() {\n    const participants = ref([]);\n\n    const handleFileParsed = (data) => {\n      participants.value = data;\n    };\n\n    return {\n      participants,\n      handleFileParsed,\n    };\n  },\n});\n</script>\n"],"mappings":"AAkCA,SAASA,eAAe,EAAEC,GAAE,QAAS,KAAK;AAC1C,OAAOC,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,UAAS,MAAO,6BAA6B;AAEpD,eAAeJ,eAAe,CAAC;EAC7BK,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVJ,MAAM;IACNC,MAAM;IACNC;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,YAAW,GAAIP,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMQ,gBAAe,GAAKC,IAAI,IAAK;MACjCF,YAAY,CAACG,KAAI,GAAID,IAAI;IAC3B,CAAC;IAED,OAAO;MACLF,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}