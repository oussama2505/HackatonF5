{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: []\n    };\n  },\n  computed: {\n    groupedUsers() {\n      // Agrupa usuarios con un tamaño de 7 (modificar según sea necesario)\n      return this.users.length ? chunk(this.users, 7) : [];\n    }\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.get('http://localhost:4000/api/personas');\n        this.users = response.data;\n      } catch (error) {\n        console.error('Error al obtener usuarios:', error);\n      }\n    }\n  }\n};\n\n// Función auxiliar para dividir una matriz (opcional)\nfunction chunk(array, size) {\n  const chunked = [];\n  for (let i = 0; i < array.length; i += size) {\n    const chunk = array.slice(i, i + size);\n    chunked.push(chunk);\n  }\n  return chunked;\n}","map":{"version":3,"names":["axios","data","users","computed","groupedUsers","length","chunk","methods","fetchUsers","response","get","error","console","array","size","chunked","i","slice","push"],"sources":["/home/elias_riquelme/HackatonF5/Frontend/hackathon-admin/src/components/GroupsButton.vue"],"sourcesContent":["<!-- <template>\n    <div>\n      <button @click=\"fetchGroups\">Mostrar Grupos</button>\n      <div v-if=\"groups.length\">\n        <h3>Grupos</h3>\n        <div v-for=\"(group, index) in groups\" :key=\"index\" class=\"group\">\n          <h4>Grupo {{ index + 1 }}</h4>\n          <ul>\n            <li v-for=\"person in group\" :key=\"person.id\">\n              {{ person.nombre }} {{ person.apellido }} - Front: {{ person.front }}, Back: {{ person.back }}, Email: {{ person.email }}, Bootcamp: {{ person.bootcamp }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        groups: []\n      };\n    },\n    methods: {\n      async fetchGroups() {\n        try {\n          const response = await axios.get('http://localhost:4000/api/grupos');\n          this.groups = response.data;\n        } catch (error) {\n          console.error('Error fetching groups:', error);\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style>\n  .group {\n    margin-bottom: 20px;\n  }\n  </style>\n  \n   -->\n\n   <template>\n    <div>\n      <button @click=\"fetchUsers\">Mostrar Usuarios</button>\n      <div v-if=\"users.length\">\n        <h3>Usuarios</h3>\n        <div v-for=\"(group, index) in groupedUsers\" :key=\"index\" class=\"group\">\n          <h4>Grupo {{ index + 1 }}</h4>\n          <ul>\n            <li v-for=\"person in group\" :key=\"person.id\">\n              {{ person.nombre }} {{ person.apellido }} - Front: {{ person.front }}, Back: {{ person.back }}, Email: {{ person.email }}, Bootcamp: {{ person.bootcamp }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        users: [],\n      };\n    },\n    computed: {\n      groupedUsers() {\n        // Agrupa usuarios con un tamaño de 7 (modificar según sea necesario)\n        return this.users.length ? chunk(this.users, 7) : [];\n      },\n    },\n    methods: {\n      async fetchUsers() {\n        try {\n          const response = await axios.get('http://localhost:4000/api/personas');\n          this.users = response.data;\n        } catch (error) {\n          console.error('Error al obtener usuarios:', error);\n        }\n      },\n    },\n  };\n  \n  // Función auxiliar para dividir una matriz (opcional)\n  function chunk(array, size) {\n    const chunked = [];\n    for (let i = 0; i < array.length; i += size) {\n      const chunk = array.slice(i, i + size);\n      chunked.push(chunk);\n    }\n    return chunked;\n  }\n  </script>\n  \n  <style>\n  .group {\n    margin-bottom: 20px;\n  }\n  </style>"],"mappings":"AAiEE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb;MACA,OAAO,IAAI,CAACF,KAAK,CAACG,MAAK,GAAIC,KAAK,CAAC,IAAI,CAACJ,KAAK,EAAE,CAAC,IAAI,EAAE;IACtD;EACF,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,oCAAoC,CAAC;QACtE,IAAI,CAACR,KAAI,GAAIO,QAAQ,CAACR,IAAI;MAC5B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF;AACF,CAAC;;AAED;AACA,SAASL,KAAKA,CAACO,KAAK,EAAEC,IAAI,EAAE;EAC1B,MAAMC,OAAM,GAAI,EAAE;EAClB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIH,KAAK,CAACR,MAAM,EAAEW,CAAA,IAAKF,IAAI,EAAE;IAC3C,MAAMR,KAAI,GAAIO,KAAK,CAACI,KAAK,CAACD,CAAC,EAAEA,CAAA,GAAIF,IAAI,CAAC;IACtCC,OAAO,CAACG,IAAI,CAACZ,KAAK,CAAC;EACrB;EACA,OAAOS,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}