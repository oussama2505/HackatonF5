import { defineComponent, openBlock, createElementBlock, renderSlot } from "vue";
import { u as useAccordion } from "./hooks/useAccordion.js";
import { u as useStatefulProps, a as useStatefulEmits, b as useStateful } from "../../composables/useStateful.js";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
const _hoisted_1 = { class: "va-accordion" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaAccordion"
  },
  __name: "VaAccordion",
  props: {
    ...useStatefulProps,
    ...useComponentPresetProp,
    modelValue: { type: Array, default: () => [] },
    multiple: { type: Boolean, default: false },
    inset: { type: Boolean, default: false },
    stateful: { type: Boolean, default: true },
    popout: { type: Boolean, default: false }
  },
  emits: [...useStatefulEmits],
  setup(__props, { expose: __expose, emit: __emit }) {
    const props = __props;
    const emit = __emit;
    const { valueComputed } = useStateful(props, emit, "modelValue");
    const { items } = useAccordion(props, valueComputed);
    const collapses = items;
    const value = valueComputed;
    __expose({
      collapses,
      value
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        renderSlot(_ctx.$slots, "default")
      ]);
    };
  }
});
export {
  _sfc_main as _
};

import '../../../VaAccordion.css';
//# sourceMappingURL=VaAccordion.vue_vue_type_script_setup_true_lang.js.map
