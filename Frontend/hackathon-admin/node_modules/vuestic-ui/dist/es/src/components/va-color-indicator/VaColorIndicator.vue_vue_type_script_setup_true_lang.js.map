{"version":3,"file":"VaColorIndicator.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-color-indicator/VaColorIndicator.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-color-indicator\"\n    :class=\"computedClass\"\n    :style=\"[computedStyle, `--va-border-radius-computed: ${String(borderRadiusComputed)}`]\"\n    @click=\"toggleModelValue\"\n    @keydown.enter=\"toggleModelValue\"\n    @keydown.space=\"toggleModelValue\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"computedStyle\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nimport {\n  useColors,\n  useStateful,\n  useStatefulProps,\n  useStatefulEmits,\n  useKeyboardOnlyFocus,\n  useComponentPresetProp,\n} from '../../composables'\n\ndefineOptions({\n  name: 'VaColorIndicator',\n})\n\nconst props = defineProps({\n  ...useStatefulProps,\n  ...useComponentPresetProp,\n  modelValue: { type: Boolean, default: null },\n  color: { type: String, default: '' },\n  square: { type: Boolean, default: false },\n  size: { type: String, default: '1rem' },\n})\n\nconst emit = defineEmits([...useStatefulEmits])\n\nconst { valueComputed } = useStateful(props, emit)\nconst { getColor } = useColors()\nconst { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\nconst colorComputed = computed(() => getColor(props.color))\nconst borderRadiusComputed = computed(() => props.square ? '0px' : '50%')\n\nconst computedStyle = computed(() => ({\n  backgroundColor: colorComputed.value,\n  height: props.size,\n  width: props.size,\n}))\n\nconst computedClass = computed(() => ({\n  'va-color-indicator--selected': valueComputed.value,\n  'va-color-indicator--on-keyboard-focus': hasKeyboardFocus.value,\n}))\n\nconst toggleModelValue = () => { valueComputed.value = !valueComputed.value }\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: var(--va-border-radius-computed);\n  text-align: center;\n  background-color: var(--va-background-element);\n  border: 0.125rem solid var(--va-background-border);\n  box-sizing: border-box;\n  overflow: hidden;\n\n  &__core {\n    border-radius: var(--va-border-radius-computed);\n  }\n\n  &--selected {\n    background-color: var(--va-primary);\n    border-color: var(--va-primary);\n  }\n\n  &--on-keyboard-focus {\n    @include focus-outline(var(--va-border-radius-computed));\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAiCA,UAAM,QAAQ;AASd,UAAM,OAAO;AAEb,UAAM,EAAE,cAAkB,IAAA,YAAY,OAAO,IAAI;AAC3C,UAAA,EAAE,aAAa;AACrB,UAAM,EAAE,kBAAkB,uBAAuB,IAAI,qBAAqB;AAE1E,UAAM,gBAAgB,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC;AAC1D,UAAM,uBAAuB,SAAS,MAAM,MAAM,SAAS,QAAQ,KAAK;AAElE,UAAA,gBAAgB,SAAS,OAAO;AAAA,MACpC,iBAAiB,cAAc;AAAA,MAC/B,QAAQ,MAAM;AAAA,MACd,OAAO,MAAM;AAAA,IACb,EAAA;AAEI,UAAA,gBAAgB,SAAS,OAAO;AAAA,MACpC,gCAAgC,cAAc;AAAA,MAC9C,yCAAyC,iBAAiB;AAAA,IAC1D,EAAA;AAEF,UAAM,mBAAmB,MAAM;AAAgB,oBAAA,QAAQ,CAAC,cAAc;AAAA,IAAA;;;;;;;;;;;;;;;;;;;"}