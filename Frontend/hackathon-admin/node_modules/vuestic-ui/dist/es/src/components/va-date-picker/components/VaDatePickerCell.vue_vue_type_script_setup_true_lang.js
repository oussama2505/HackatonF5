import { defineComponent, computed, openBlock, createElementBlock, normalizeStyle, unref, normalizeClass, withKeys, withModifiers, renderSlot } from "vue";
import { u as useColors } from "../../../composables/useColors.js";
import { u as useTextColor } from "../../../composables/useTextColor.js";
const _hoisted_1 = ["onKeypress"];
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaDatePickerCell"
  },
  __name: "VaDatePickerCell",
  props: {
    otherMonth: { type: Boolean, default: false },
    today: { type: Boolean, default: false },
    inRange: { type: Boolean, default: false },
    disabled: { type: Boolean, default: false },
    selected: { type: Boolean, default: false },
    weekend: { type: Boolean, default: false },
    hidden: { type: Boolean, default: false },
    focused: { type: Boolean, default: false },
    highlightWeekend: { type: Boolean, default: false },
    highlightToday: { type: Boolean, default: false },
    readonly: { type: Boolean, default: false },
    color: { type: String, default: "primary" }
  },
  emits: ["click"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emit = __emit;
    const onClick = () => {
      if (!props.disabled) {
        emit("click");
      }
    };
    const { getColor } = useColors();
    const bg = computed(() => getColor(props.color));
    const { textColorComputed } = useTextColor(bg);
    return (_ctx, _cache) => {
      return __props.hidden ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: "va-date-picker-cell va-date-picker-cell_clear",
        style: normalizeStyle(`--va-bg: ${String(bg.value)};--va-text-color-computed: ${String(unref(textColorComputed))}`)
      }, null, 4)) : (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(["va-date-picker-cell", {
          "va-date-picker-cell_other-month": __props.otherMonth,
          "va-date-picker-cell_today": __props.highlightToday && __props.today,
          "va-date-picker-cell_in-range": __props.inRange,
          "va-date-picker-cell_disabled": __props.disabled,
          "va-date-picker-cell_highlighted-weekend": __props.highlightWeekend && __props.weekend,
          "va-date-picker-cell_selected": __props.selected,
          "va-date-picker-cell_focused": __props.focused,
          "va-date-picker-cell_readonly": __props.readonly
        }]),
        onClick,
        onKeypress: withKeys(withModifiers(onClick, ["prevent", "stop"]), ["space", "enter"]),
        style: normalizeStyle(`--va-bg: ${String(bg.value)};--va-text-color-computed: ${String(unref(textColorComputed))}`)
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 46, _hoisted_1));
    };
  }
});
export {
  _sfc_main as _
};

import '../../../../VaDatePickerCell.css';
//# sourceMappingURL=VaDatePickerCell.vue_vue_type_script_setup_true_lang.js.map
