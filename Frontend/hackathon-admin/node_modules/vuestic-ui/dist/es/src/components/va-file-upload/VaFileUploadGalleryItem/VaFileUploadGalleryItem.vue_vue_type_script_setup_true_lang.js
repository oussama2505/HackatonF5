import { defineComponent, ref, computed, onMounted, watch, toRef, openBlock, createBlock, unref, normalizeClass, withCtx, createVNode, createElementBlock, createCommentVNode, createElementVNode, normalizeStyle, toDisplayString } from "vue";
import { V as VaFileUploadKey } from "../types.js";
import { u as useTextColor } from "../../../composables/useTextColor.js";
import { V as VaFileUploadUndo } from "../VaFileUploadUndo/index.js";
import { d as colorToRgba } from "../../../services/color/utils.js";
import { V as VaListItem, a as VaListItemSection } from "../../va-list/index.js";
import { a as useTranslationProp, u as useTranslation } from "../../../composables/useTranslation.js";
import { u as useStrictInject } from "../../../composables/useStrictInject.js";
import { u as useFocus } from "../../../composables/useFocus.js";
import { u as useBem } from "../../../composables/useBem.js";
import { V as VaButton } from "../../va-button/index.js";
const _hoisted_1 = ["src", "alt"];
const _hoisted_2 = { class: "va-file-upload-gallery-item__overlay" };
const _hoisted_3 = ["title"];
const INJECTION_ERROR_MESSAGE = "The VaFileUploadGalleryItem component should be used in the context of VaFileUpload component";
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaFileUploadGalleryItem"
  },
  __name: "VaFileUploadGalleryItem",
  props: {
    file: { type: Object, default: null },
    color: { type: String, default: "success" },
    ariaRemoveFileLabel: useTranslationProp("$t:removeFile")
  },
  emits: ["remove"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emit = __emit;
    const {
      undo,
      disabled,
      undoDuration
    } = useStrictInject(VaFileUploadKey, INJECTION_ERROR_MESSAGE);
    const { isFocused, onFocus, onBlur } = useFocus();
    const previewImage = ref("");
    const removed = ref(false);
    const overlayStylesComputed = computed(() => ({
      backgroundColor: colorToRgba(props.color, 0.7)
    }));
    const classesComputed = useBem("va-file-upload-gallery-item", () => ({
      notImage: !previewImage.value,
      focused: isFocused.value,
      undo: removed.value
    }));
    const removeImage = () => {
      if (undo.value) {
        removed.value = true;
        setTimeout(() => {
          if (!removed.value) {
            return;
          }
          emit("remove");
          removed.value = false;
        }, undoDuration.value ?? 0);
      } else {
        emit("remove");
        removed.value = false;
      }
    };
    const recoverImage = () => {
      removed.value = false;
    };
    const convertToImg = () => {
      if (!props.file.name || !props.file.image) {
        return;
      }
      if (props.file.image.url) {
        previewImage.value = props.file.image.url;
      } else if (props.file.image instanceof File) {
        const reader = new FileReader();
        reader.readAsDataURL(props.file.image);
        reader.onload = (e) => {
          var _a, _b;
          if (((_a = e.target) == null ? void 0 : _a.result).includes("image")) {
            previewImage.value = (_b = e.target) == null ? void 0 : _b.result;
          }
        };
      }
    };
    onMounted(convertToImg);
    watch(() => props.file, convertToImg);
    const { t, tp } = useTranslation();
    const { textColorComputed } = useTextColor(toRef(props, "color"));
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(VaListItem), {
        class: normalizeClass(["va-file-upload-gallery-item", unref(classesComputed)]),
        tabindex: "-1",
        disabled: unref(disabled),
        "aria-disabled": unref(disabled),
        onFocus: unref(onFocus),
        onBlur: unref(onBlur)
      }, {
        default: withCtx(() => [
          removed.value && unref(undo) ? (openBlock(), createBlock(unref(VaListItemSection), { key: 0 }, {
            default: withCtx(() => [
              createVNode(unref(VaFileUploadUndo), {
                vertical: "",
                onRecover: recoverImage
              })
            ]),
            _: 1
          })) : (openBlock(), createBlock(unref(VaListItemSection), { key: 1 }, {
            default: withCtx(() => [
              previewImage.value ? (openBlock(), createElementBlock("img", {
                key: 0,
                src: previewImage.value,
                alt: __props.file.name || "",
                class: "va-file-upload-gallery-item__image"
              }, null, 8, _hoisted_1)) : createCommentVNode("", true),
              createElementVNode("div", _hoisted_2, [
                createElementVNode("div", {
                  class: "va-file-upload-gallery-item__overlay-background",
                  style: normalizeStyle(overlayStylesComputed.value)
                }, null, 4),
                __props.file && __props.file.name ? (openBlock(), createElementBlock("div", {
                  key: 0,
                  class: "va-file-upload-gallery-item__name",
                  title: __props.file.name,
                  style: normalizeStyle({ color: unref(textColorComputed) })
                }, toDisplayString(__props.file.name), 13, _hoisted_3)) : createCommentVNode("", true),
                !unref(disabled) ? (openBlock(), createBlock(unref(VaButton), {
                  key: 1,
                  flat: "",
                  color: "danger",
                  icon: "va-delete",
                  class: "va-file-upload-gallery-item__delete",
                  "aria-label": unref(tp)(_ctx.$props.ariaRemoveFileLabel),
                  onClick: removeImage,
                  onFocus: unref(onFocus),
                  onBlur: unref(onBlur)
                }, null, 8, ["aria-label", "onFocus", "onBlur"])) : createCommentVNode("", true)
              ])
            ]),
            _: 1
          }))
        ]),
        _: 1
      }, 8, ["class", "disabled", "aria-disabled", "onFocus", "onBlur"]);
    };
  }
});
export {
  _sfc_main as _
};

import '../../../../VaFileUploadGalleryItem.css';
//# sourceMappingURL=VaFileUploadGalleryItem.vue_vue_type_script_setup_true_lang.js.map
