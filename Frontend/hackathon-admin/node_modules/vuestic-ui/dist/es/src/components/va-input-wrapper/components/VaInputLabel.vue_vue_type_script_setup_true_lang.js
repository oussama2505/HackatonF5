import { defineComponent, openBlock, createElementBlock, normalizeStyle, unref, renderSlot, normalizeProps, guardReactiveProps, createTextVNode, toDisplayString, createCommentVNode } from "vue";
import { u as useColors } from "../../../composables/useColors.js";
const _hoisted_1 = {
  key: 0,
  class: "va-input-label__required-mark"
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaInputLabel"
  },
  __name: "VaInputLabel",
  props: {
    label: {
      type: String,
      default: ""
    },
    requiredMark: {
      type: Boolean,
      default: false
    },
    color: {
      type: String,
      default: "primary"
    }
  },
  setup(__props) {
    const { getColor } = useColors();
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("label", {
        "aria-hidden": "true",
        class: "va-input-label",
        style: normalizeStyle({ color: unref(getColor)(_ctx.$props.color, void 0, true) })
      }, [
        renderSlot(_ctx.$slots, "default", normalizeProps(guardReactiveProps({ label: __props.label, requiredMark: __props.requiredMark, color: unref(getColor)(_ctx.$props.color) })), () => [
          createTextVNode(toDisplayString(__props.label) + " ", 1),
          __props.requiredMark ? (openBlock(), createElementBlock("span", _hoisted_1, " * ")) : createCommentVNode("", true)
        ])
      ], 4);
    };
  }
});
export {
  _sfc_main as _
};

import '../../../../VaInputLabel.css';
//# sourceMappingURL=VaInputLabel.vue_vue_type_script_setup_true_lang.js.map
