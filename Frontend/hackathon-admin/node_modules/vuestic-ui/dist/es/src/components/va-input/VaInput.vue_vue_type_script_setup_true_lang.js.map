{"version":3,"file":"VaInput.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-input/VaInput.vue"],"sourcesContent":["<template>\n  <va-input-wrapper\n    v-bind=\"{\n      ...fieldListeners,\n      ...wrapperProps,\n    }\"\n    class=\"va-input\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    :loading=\"$props.loading || isLoading\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n    :counter-value=\"valueLengthComputed\"\n    @click=\"onFieldClick\"\n  >\n    <!-- Simply proxy slots to VaInputWrapper -->\n    <template\n      v-for=\"name in filterSlots\"\n      :key=\"name\"\n      v-slot:[name]=\"slotScope\"\n    >\n      <slot :name=\"name\" v-bind=\"slotScope\" />\n    </template>\n\n    <template #icon=\"slotScope\">\n      <va-icon\n        v-if=\"canBeCleared\"\n        role=\"button\"\n        :aria-label=\"tp($props.ariaResetLabel)\"\n        v-bind=\"clearIconProps\"\n        @click.stop=\"reset\"\n        @keydown.enter.stop=\"reset\"\n        @keydown.space.stop=\"reset\"\n      />\n      <slot name=\"icon\" v-bind=\"slotScope\" />\n    </template>\n\n    <input\n      v-if=\"!$slots.content\"\n      ref=\"input\"\n      class=\"va-input__content__input\"\n      v-bind=\"{ ...computedInputAttributes, ...inputEvents }\"\n      :value=\"computedValue\"\n    >\n  </va-input-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, InputHTMLAttributes, shallowRef, toRefs, useAttrs, useSlots, watch, PropType } from 'vue'\nimport omit from 'lodash/omit.js'\nimport pick from 'lodash/pick.js'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nimport {\n  useComponentPresetProp,\n  useFormFieldProps,\n  useValidation, useValidationProps, useValidationEmits,\n  useEmitProxy,\n  useClearable, useClearableProps, useClearableEmits,\n  useTranslation, useTranslationProp,\n  useStateful, useStatefulProps, useStatefulEmits, useDeprecatedCondition,\n  useFocusable, useFocusableProps, useEvent,\n} from '../../composables'\nimport type { ValidationProps } from '../../composables/useValidation'\nimport { useCleave, useCleaveProps } from './hooks/useCleave'\n\nimport type { AnyStringPropType } from '../../utils/types/prop-type'\n\nimport { VaInputWrapper } from '../va-input-wrapper'\nimport { VaIcon } from '../va-icon'\nimport { combineFunctions } from '../../utils/combine-functions'\n\nconst VaInputWrapperProps = extractComponentProps(VaInputWrapper)\n\nconst { createEmits: createInputEmits, createListeners: createInputListeners } = useEmitProxy(\n  ['change', 'keyup', 'keypress', 'keydown', 'focus', 'blur', 'input'],\n)\n\nconst { createEmits: createFieldEmits, createListeners: createFieldListeners } = useEmitProxy([\n  'click',\n  'click-prepend',\n  'click-append',\n  'click-prepend-inner',\n  'click-append-inner',\n])\n</script>\n\n<script lang=\"ts\" setup>\n\ndefineOptions({\n  name: 'VaInput',\n  inheritAttrs: false,\n})\n\nconst props = defineProps({\n  ...VaInputWrapperProps,\n  ...useFormFieldProps,\n  ...useFocusableProps,\n  ...useValidationProps as ValidationProps<string>,\n  ...useClearableProps,\n  ...useCleaveProps,\n  ...useComponentPresetProp,\n  ...useStatefulProps,\n\n    // input\n  placeholder: { type: String, default: '' },\n  tabindex: { type: [String, Number], default: 0 },\n  modelValue: { type: [Number, String, null] as PropType<number | string | null>, default: '' },\n  type: { type: String as AnyStringPropType<'text' | 'password'>, default: 'text' },\n  inputClass: { type: String, default: '' },\n  pattern: { type: String },\n  inputmode: { type: String, default: 'text' },\n  counter: { type: Boolean, default: false },\n\n    // style\n  ariaResetLabel: useTranslationProp('$t:reset'),\n\n    /** Set value to input when model value is updated */\n  strictBindInputValue: { type: Boolean, default: false },\n})\n\nconst emit = defineEmits([\n  'update:modelValue',\n  ...useValidationEmits,\n  ...useClearableEmits,\n  ...createInputEmits(),\n  ...createFieldEmits(),\n  ...useStatefulEmits,\n])\n\nuseDeprecatedCondition([\n  () => props.type !== 'textarea' || 'Use VaTextarea component instead of VaInput with type=\"textarea\"',\n])\n\nconst input = shallowRef<HTMLInputElement>()\n\nconst { valueComputed } = useStateful(props, emit, 'modelValue')\n\nconst reset = () => withoutValidation(() => {\n  valueComputed.value = props.clearValue\n  emit('clear')\n  resetValidation()\n})\n\nconst { focus, blur } = useFocusable(input, props)\n\nconst slots = useSlots()\n\nconst filterSlots = computed(() => {\n  const iconSlot = ['icon']\n  return Object.keys(slots).filter(slot => !iconSlot.includes(slot))\n})\n\nconst { tp } = useTranslation()\n\nconst {\n  isValid,\n  isTouched,\n  isDirty,\n  computedError,\n  computedErrorMessages,\n  listeners: { onBlur },\n  validationAriaAttributes,\n  isLoading,\n  withoutValidation,\n  resetValidation,\n} = useValidation(props, emit, { reset, focus, value: valueComputed })\n\nconst { modelValue } = toRefs(props)\nconst {\n  canBeCleared,\n  clearIconProps,\n} = useClearable(props, modelValue, input, computedError)\n\nconst { computedValue, onInput } = useCleave(input, props, valueComputed)\n\nconst inputListeners = createInputListeners(emit)\n\nconst inputEvents = {\n  ...inputListeners,\n  onBlur: combineFunctions(onBlur, inputListeners.onBlur),\n  onInput: combineFunctions(onInput, inputListeners.onInput),\n}\n\nconst setInputValue = (newValue: string) => {\n  if (!props.strictBindInputValue) {\n    return\n  }\n\n  const target = input.value\n\n  if (!target) {\n    return\n  }\n\n  // Similar to cleave solution\n  // When user types, we update input value according to computedValue, if value is different\n  // This causes cursor to move to the end of the input\n  // To prevent this, we save cursor position and restore it after value is updated\n  const selectionStart = target.selectionStart || 0\n  const selectionEnd = target.selectionEnd || 0\n\n  if (target.value !== newValue) {\n    target.value = String(newValue)\n  }\n  target.setSelectionRange(selectionStart, selectionEnd)\n}\n\nwatch(computedValue, (newValue) => {\n  setInputValue(String(newValue))\n}, { immediate: true })\n\nuseEvent('input', () => {\n  setInputValue(String(valueComputed.value))\n}, input)\n\nconst tabIndexComputed = computed(() => props.disabled ? -1 : props.tabindex)\n\nconst attrs = useAttrs()\n\nconst computedChildAttributes = computed(() => (({\n  'aria-label': props.inputAriaLabel || props.label,\n  'aria-labelledby': props.inputAriaLabelledby,\n  'aria-required': props.requiredMark,\n  tabindex: tabIndexComputed.value,\n  class: props.inputClass,\n  'aria-disabled': props.disabled,\n  'aria-readonly': props.readonly,\n  ...validationAriaAttributes.value,\n  ...omit(attrs, ['class', 'style']),\n}) as InputHTMLAttributes))\n\nconst computedInputAttributes = computed(() => (({\n  ...computedChildAttributes.value,\n  ...pick(props, ['type', 'disabled', 'readonly', 'placeholder', 'pattern', 'inputmode', 'minlength', 'maxlength', 'name']),\n}) as InputHTMLAttributes))\n\nconst valueLengthComputed = computed(() =>\n  props.counter && typeof computedValue.value === 'string' ? computedValue.value.length : undefined,\n)\n\nconst onFieldClick = (e: MouseEvent) => {\n  if (!e.target || !('tagName' in e.target)) {\n    return\n  }\n\n  if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {\n    return\n  }\n\n  focus()\n}\n\nconst wrapperProps = filterComponentProps(VaInputWrapperProps)\nconst fieldListeners = createFieldListeners(emit)\n\ndefineExpose({\n  isValid,\n  isDirty,\n  isTouched,\n  isLoading,\n  computedError,\n  computedErrorMessages,\n  reset,\n  focus,\n  blur,\n  value: valueComputed,\n  withoutValidation,\n  resetValidation,\n})\n</script>\n"],"names":[],"mappings":"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"}