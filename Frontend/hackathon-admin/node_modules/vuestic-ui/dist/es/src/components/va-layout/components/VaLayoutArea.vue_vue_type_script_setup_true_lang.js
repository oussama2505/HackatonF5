import { defineComponent, computed, openBlock, createElementBlock, Fragment, createBlock, normalizeStyle, withCtx, createElementVNode, normalizeClass, renderSlot, createVNode, Transition, createCommentVNode } from "vue";
import { V as VaLayoutAbsoluteWrapper } from "./VaLayoutAbsoluteWrapper.js";
import { _ as _sfc_main$1 } from "./VaLayoutFixedWrapper.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaLayoutArea"
  },
  __name: "VaLayoutArea",
  props: {
    area: { type: String, required: true },
    config: { type: Object, required: true }
  },
  emits: ["overlay-click"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const absolute = computed(() => props.config.absolute || false);
    const fixed = computed(() => props.config.fixed || false);
    const overlay = computed(() => props.config.overlay || false);
    const zIndex = computed(() => (props.config.order || 0) + 1);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(Fragment, null, [
        absolute.value ? (openBlock(), createBlock(VaLayoutAbsoluteWrapper, {
          key: 0,
          style: normalizeStyle(`--va-props-area: ${String(_ctx.$props.area)};--va-z-index: ${String(zIndex.value)};--va-z-index-1: ${String(zIndex.value - 1)}`)
        }, {
          default: withCtx(() => [
            createElementVNode("div", {
              class: normalizeClass(`va-layout-area va-layout__area va-layout__area--${__props.area}`)
            }, [
              fixed.value ? (openBlock(), createBlock(_sfc_main$1, {
                key: 0,
                area: __props.area
              }, {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "default")
                ]),
                _: 3
              }, 8, ["area"])) : renderSlot(_ctx.$slots, "default", { key: 1 })
            ], 2)
          ]),
          _: 3
        }, 8, ["style"])) : (openBlock(), createElementBlock("div", {
          key: 1,
          class: normalizeClass(`va-layout-area va-layout__area va-layout__area--${__props.area}`),
          style: normalizeStyle(`--va-props-area: ${String(_ctx.$props.area)};--va-z-index: ${String(zIndex.value)};--va-z-index-1: ${String(zIndex.value - 1)}`)
        }, [
          fixed.value ? (openBlock(), createBlock(_sfc_main$1, {
            key: 0,
            area: __props.area
          }, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }, 8, ["area"])) : renderSlot(_ctx.$slots, "default", { key: 1 })
        ], 6)),
        createVNode(Transition, {
          style: normalizeStyle(`--va-props-area: ${String(_ctx.$props.area)};--va-z-index: ${String(zIndex.value)};--va-z-index-1: ${String(zIndex.value - 1)}`)
        }, {
          default: withCtx(() => [
            overlay.value ? (openBlock(), createElementBlock("div", {
              key: 0,
              class: normalizeClass(["va-layout-area__overlay", { "va-layout-area__overlay--fixed": fixed.value }]),
              onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("overlay-click"))
            }, null, 2)) : createCommentVNode("", true)
          ]),
          _: 1
        }, 8, ["style"])
      ], 64);
    };
  }
});
export {
  _sfc_main as _
};

import '../../../../VaLayoutArea.css';
//# sourceMappingURL=VaLayoutArea.vue_vue_type_script_setup_true_lang.js.map
