{"version":3,"file":"VaLayoutArea.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../src/components/va-layout/components/VaLayoutArea.vue"],"sourcesContent":["<template>\n  <VaLayoutAbsoluteWrapper v-if=\"absolute\" :style=\"`--va-props-area: ${String($props.area)};--va-z-index: ${String(zIndex)};--va-z-index-1: ${String(zIndex - 1)}`\">\n    <div :class=\"`va-layout-area va-layout__area va-layout__area--${area}`\">\n      <VaLayoutFixedWrapper v-if=\"fixed\" :area=\"area\">\n        <slot />\n      </VaLayoutFixedWrapper>\n      <slot v-else />\n    </div>\n  </VaLayoutAbsoluteWrapper>\n\n  <div v-else :class=\"`va-layout-area va-layout__area va-layout__area--${area}`\" :style=\"`--va-props-area: ${String($props.area)};--va-z-index: ${String(zIndex)};--va-z-index-1: ${String(zIndex - 1)}`\">\n    <VaLayoutFixedWrapper v-if=\"fixed\" :area=\"area\">\n      <slot />\n    </VaLayoutFixedWrapper>\n    <slot v-else />\n  </div>\n\n  <Transition :style=\"`--va-props-area: ${String($props.area)};--va-z-index: ${String(zIndex)};--va-z-index-1: ${String(zIndex - 1)}`\">\n    <div\n      v-if=\"overlay\"\n      class=\"va-layout-area__overlay\"\n      :class=\"{ 'va-layout-area__overlay--fixed': fixed }\"\n      @click=\"$emit('overlay-click')\"\n    />\n  </Transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport VaLayoutAbsoluteWrapper from './VaLayoutAbsoluteWrapper.vue'\nimport VaLayoutFixedWrapper from './VaLayoutFixedWrapper.vue'\nimport { PropType, computed } from 'vue'\nimport { AreaName } from '../hooks/useGridTemplateArea'\nimport { AreaConfig } from '../hooks/useLayout'\n\ndefineOptions({\n  name: 'VaLayoutArea',\n})\n\nconst props = defineProps({\n  area: { type: String as PropType<AreaName>, required: true },\n  config: { type: Object as PropType<AreaConfig>, required: true },\n})\n\nconst emit = defineEmits(['overlay-click'])\n\nconst absolute = computed(() => props.config.absolute || false)\nconst fixed = computed(() => props.config.fixed || false)\nconst overlay = computed(() => props.config.overlay || false)\nconst zIndex = computed(() => (props.config.order || 0) + 1)\n</script>\n\n<style lang=\"scss\">\n.va-layout {\n  &__area {\n    grid-area: var(--va-props-area);\n    z-index: var(--va-z-index);\n  }\n\n  &__absolute-area-wrapper {\n    z-index: var(--va-z-index);\n  }\n}\n\n.va-layout-area {\n  display: flex;\n\n  &__overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--va-layout-overlay-color);\n    z-index: var(--va-z-index-1);\n\n    &.v-enter-active,\n    &.v-leave-active {\n      transition: opacity 0.5s ease;\n    }\n\n    &.v-enter-from,\n    &.v-leave-to {\n      opacity: 0;\n    }\n\n    &--fixed {\n      position: fixed;\n    }\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAsCA,UAAM,QAAQ;AAOd,UAAM,WAAW,SAAS,MAAM,MAAM,OAAO,YAAY,KAAK;AAC9D,UAAM,QAAQ,SAAS,MAAM,MAAM,OAAO,SAAS,KAAK;AACxD,UAAM,UAAU,SAAS,MAAM,MAAM,OAAO,WAAW,KAAK;AAC5D,UAAM,SAAS,SAAS,OAAO,MAAM,OAAO,SAAS,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}