import { defineComponent, openBlock, createElementBlock, normalizeStyle, unref, toDisplayString } from "vue";
import { u as useVaRatingColorsProps, a as useVaRatingColors } from "../hooks/useVaRatingColors.js";
import { u as useSizeProps, a as useSize } from "../../../composables/useSize.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaRatingItemNumberButton"
  },
  __name: "VaRatingItemNumberButton",
  props: {
    ...useVaRatingColorsProps,
    ...useSizeProps,
    itemNumber: { type: Number, required: true },
    modelValue: { type: Number, required: true }
  },
  setup(__props) {
    const props = __props;
    const {
      textColorComputed,
      backgroundComputed
    } = useVaRatingColors(props);
    const {
      sizeComputed,
      fontSizeComputed,
      fontSizeInRem
    } = useSize(props, "VaRating");
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("button", {
        class: "va-rating__number-item",
        tabindex: "-1",
        "aria-hidden": "true",
        style: normalizeStyle({
          background: unref(backgroundComputed),
          color: unref(textColorComputed),
          width: unref(sizeComputed),
          height: unref(sizeComputed),
          fontSize: unref(fontSizeComputed),
          borderRadius: `${parseInt(unref(fontSizeComputed)) * 0.125}rem`
        })
      }, toDisplayString(__props.itemNumber), 5);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaRatingItemNumberButton.vue_vue_type_script_setup_true_lang.js.map
