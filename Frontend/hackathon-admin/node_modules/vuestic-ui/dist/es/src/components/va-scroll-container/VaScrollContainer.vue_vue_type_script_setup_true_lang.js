import { defineComponent, computed, openBlock, createElementBlock, normalizeStyle, createElementVNode, renderSlot } from "vue";
import { u as useSizeProps, a as useSize } from "../../composables/useSize.js";
import { u as useColors } from "../../composables/useColors.js";
const _hoisted_1 = { class: "va-scroll-container__content" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaScrollContainer"
  },
  __name: "VaScrollContainer",
  props: {
    ...useSizeProps,
    vertical: { type: Boolean, default: false },
    horizontal: { type: Boolean, default: false },
    color: { type: String, default: "secondary" },
    rtl: { type: Boolean, default: false },
    gradient: { type: Boolean, default: false },
    sizesConfig: {
      type: Object,
      default: () => ({
        defaultSize: 4,
        sizes: { small: 4, medium: 6, large: 8 }
      })
    },
    size: {
      type: String,
      default: "small",
      validator: (v) => ["small", "medium", "large"].includes(v)
    }
  },
  setup(__props) {
    const props = __props;
    const { getColor } = useColors();
    const { sizeComputed } = useSize(props);
    const overflowX = computed(() => props.horizontal ? "auto" : "hidden");
    const overflowY = computed(() => props.vertical ? "auto" : "hidden");
    const scrollColor = computed(() => {
      const color = getColor(props.color);
      return props.gradient ? `linear-gradient(0deg, var(--va-scroll-container-scrollbar-gradient-to) 0%, ${color} 100%)` : color;
    });
    const scrollbarSize = computed(() => sizeComputed.value);
    const scrollbarPosition = computed(() => props.rtl ? "rtl" : "ltr");
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: "va-scroll-container",
        style: normalizeStyle(`--va-scroll-color: ${String(scrollColor.value)};--va-scrollbar-size: ${String(scrollbarSize.value)};--va-overflow-x: ${String(overflowX.value)};--va-overflow-y: ${String(overflowY.value)};--va-scrollbar-position: ${String(scrollbarPosition.value)}`)
      }, [
        createElementVNode("div", _hoisted_1, [
          renderSlot(_ctx.$slots, "default")
        ])
      ], 4);
    };
  }
});
export {
  _sfc_main as _
};

import '../../../VaScrollContainer.css';
//# sourceMappingURL=VaScrollContainer.vue_vue_type_script_setup_true_lang.js.map
