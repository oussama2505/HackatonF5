{"version":3,"file":"VaSidebar.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-sidebar/VaSidebar.vue"],"sourcesContent":["<template>\n  <aside\n    ref=\"rootElement\"\n    class=\"va-sidebar\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div v-show=\"doShowMenu\" class=\"va-sidebar__menu\" ref=\"menu\" :style=\"{\n      width: menuWidth,\n      minWidth: menuWidth,\n    }\">\n      <va-config :components=\"{ VaSidebarItem: vaSidebarItemProps }\">\n        <slot />\n      </va-config>\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref, shallowRef, watchEffect } from 'vue'\n\nimport { VaConfig } from '../va-config'\nimport { getGradientBackground } from '../../services/color'\nimport { useColors, useTextColor, useBem, useClickOutside, useElementWidth } from '../../composables'\nimport { useSidebar } from './hooks/useSidebar'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\ndefineOptions({\n  name: 'VaSidebar',\n})\n\nconst props = defineProps({\n  ...useComponentPresetProp,\n  activeColor: { type: String, default: 'primary' },\n  hoverColor: { type: String, default: undefined },\n  hoverOpacity: {\n    type: [Number, String],\n    default: 0.2,\n    validator: (v: number | string) => Number(v) >= 0 && Number(v) <= 1,\n  },\n  borderColor: { type: String, default: undefined },\n  color: { type: String, default: 'background-element' },\n  textColor: { type: String },\n  gradient: { type: Boolean, default: false },\n  minimized: { type: Boolean, default: false },\n  hoverable: { type: Boolean, default: false },\n  width: { type: String, default: '16rem' },\n  minimizedWidth: { type: String, default: '4rem' },\n  modelValue: { type: Boolean, default: true },\n  animated: { type: [Boolean, String], default: true },\n  closeOnClickOutside: { type: Boolean, default: false },\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst { getColor } = useColors()\nuseSidebar(props)\n\nconst isHovered = ref(false)\n\nconst isMinimized = computed(() => props.minimized || (props.hoverable && !isHovered.value))\n\nconst menu = ref<HTMLElement>()\nconst currentMenuWidth = useElementWidth(menu)\n// Display: none for menu if it closed\n// Otherwise sidebar items will be focusable when sidebar is hidden\nconst doShowMenu = computed(() => {\n  // Always show menu if sidebar is visible\n  if (props.modelValue === true) {\n    return true\n  }\n\n  // If menu is not rendered yet, ignore and show it\n  if (currentMenuWidth.value === null) {\n    return true\n  }\n\n  return currentMenuWidth.value > 0\n})\n\nconst sidebarWidth = ref()\n\nconst getSidebarWidth = () => {\n  if (!props.modelValue) {\n    return 0\n  }\n\n  return isMinimized.value ? props.minimizedWidth : props.width\n}\n\nconst menuWidth = computed(() => isMinimized.value ? props.minimizedWidth : props.width)\n\nwatchEffect(() => {\n  const width = getSidebarWidth()\n  // Set width after doShowMenu is applied, so transition is executed after menu is displayed\n  setTimeout(() => {\n    sidebarWidth.value = width\n  })\n})\n\nconst backgroundColorComputed = computed(() => getColor(props.color))\nconst { textColorComputed } = useTextColor(backgroundColorComputed)\n\nconst computedStyle = computed(() => {\n  const backgroundColor = getColor(backgroundColorComputed.value)\n\n  const color = textColorComputed.value\n\n  return {\n    color,\n    backgroundColor,\n    backgroundImage: props.gradient ? getGradientBackground(backgroundColor) : undefined,\n    overflowX: currentMenuWidth.value === sidebarWidth.value ? undefined : 'hidden' as const,\n    width: sidebarWidth.value,\n    minWidth: sidebarWidth.value,\n  }\n})\n\nconst computedClass = useBem('va-sidebar', () => ({\n  minimized: isMinimized.value,\n  animated: Boolean(props.animated),\n  'animated-right': props.animated === 'right',\n  'animated-left': props.animated === 'left' || props.animated === true,\n}))\n\nconst updateHoverState = (newHoverState: boolean) => {\n  isHovered.value = props.hoverable && newHoverState\n}\n\nconst rootElement = shallowRef<HTMLElement>()\n\nuseClickOutside([rootElement], () => {\n  if (props.closeOnClickOutside && props.modelValue) {\n    setTimeout(() => {\n      emit('update:modelValue', false)\n    }, 0)\n  }\n})\n\nconst vaSidebarItemProps = computed(() => ({\n  textColor: props.textColor,\n  activeColor: props.activeColor,\n  hoverColor: props.hoverColor,\n  borderColor: props.borderColor,\n  hoverOpacity: props.hoverOpacity,\n}))\n\ndefineExpose({\n  isMinimized,\n  isHovered,\n  updateHoverState,\n  rootElement,\n  menu,\n  doShowMenu,\n  menuWidth,\n  sidebarWidth,\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n  display: inline-flex;\n  box-sizing: border-box;\n  position: relative;\n  top: 0;\n\n  &__menu {\n    display: flex;\n    flex-direction: column;\n    min-width: 100%;\n    flex: 1;\n    height: 100%;\n    right: 0;\n    max-height: var(--va-sidebar-menu-max-height);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n    margin-left: auto;\n\n    @include va-scroll(var(--va-secondary));\n  }\n\n  &--animated {\n    transition: var(--va-sidebar-transition);\n\n    .va-sidebar__menu {\n      transition: var(--va-sidebar-transition);\n    }\n  }\n\n  &--animated-right {\n    justify-content: flex-end;\n  }\n\n  &--animated-left {\n    justify-content: flex-start;\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar__title {\n      display: none;\n    }\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,UAAM,QAAQ;AAsBd,UAAM,OAAO;AAEP,UAAA,EAAE,aAAa;AACrB,eAAW,KAAK;AAEV,UAAA,YAAY,IAAI,KAAK;AAErB,UAAA,cAAc,SAAS,MAAM,MAAM,aAAc,MAAM,aAAa,CAAC,UAAU,KAAM;AAE3F,UAAM,OAAO;AACP,UAAA,mBAAmB,gBAAgB,IAAI;AAGvC,UAAA,aAAa,SAAS,MAAM;AAE5B,UAAA,MAAM,eAAe,MAAM;AACtB,eAAA;AAAA,MACT;AAGI,UAAA,iBAAiB,UAAU,MAAM;AAC5B,eAAA;AAAA,MACT;AAEA,aAAO,iBAAiB,QAAQ;AAAA,IAAA,CACjC;AAED,UAAM,eAAe;AAErB,UAAM,kBAAkB,MAAM;AACxB,UAAA,CAAC,MAAM,YAAY;AACd,eAAA;AAAA,MACT;AAEA,aAAO,YAAY,QAAQ,MAAM,iBAAiB,MAAM;AAAA,IAAA;AAGpD,UAAA,YAAY,SAAS,MAAM,YAAY,QAAQ,MAAM,iBAAiB,MAAM,KAAK;AAEvF,gBAAY,MAAM;AAChB,YAAM,QAAQ;AAEd,iBAAW,MAAM;AACf,qBAAa,QAAQ;AAAA,MAAA,CACtB;AAAA,IAAA,CACF;AAED,UAAM,0BAA0B,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC;AACpE,UAAM,EAAE,kBAAA,IAAsB,aAAa,uBAAuB;AAE5D,UAAA,gBAAgB,SAAS,MAAM;AAC7B,YAAA,kBAAkB,SAAS,wBAAwB,KAAK;AAE9D,YAAM,QAAQ,kBAAkB;AAEzB,aAAA;AAAA,QACL;AAAA,QACA;AAAA,QACA,iBAAiB,MAAM,WAAW,sBAAsB,eAAe,IAAI;AAAA,QAC3E,WAAW,iBAAiB,UAAU,aAAa,QAAQ,SAAY;AAAA,QACvE,OAAO,aAAa;AAAA,QACpB,UAAU,aAAa;AAAA,MAAA;AAAA,IACzB,CACD;AAEK,UAAA,gBAAgB,OAAO,cAAc,OAAO;AAAA,MAChD,WAAW,YAAY;AAAA,MACvB,UAAU,QAAQ,MAAM,QAAQ;AAAA,MAChC,kBAAkB,MAAM,aAAa;AAAA,MACrC,iBAAiB,MAAM,aAAa,UAAU,MAAM,aAAa;AAAA,IACjE,EAAA;AAEI,UAAA,mBAAmB,CAAC,kBAA2B;AACzC,gBAAA,QAAQ,MAAM,aAAa;AAAA,IAAA;AAGvC,UAAM,cAAc;AAEJ,oBAAA,CAAC,WAAW,GAAG,MAAM;AAC/B,UAAA,MAAM,uBAAuB,MAAM,YAAY;AACjD,mBAAW,MAAM;AACf,eAAK,qBAAqB,KAAK;AAAA,WAC9B,CAAC;AAAA,MACN;AAAA,IAAA,CACD;AAEK,UAAA,qBAAqB,SAAS,OAAO;AAAA,MACzC,WAAW,MAAM;AAAA,MACjB,aAAa,MAAM;AAAA,MACnB,YAAY,MAAM;AAAA,MAClB,aAAa,MAAM;AAAA,MACnB,cAAc,MAAM;AAAA,IACpB,EAAA;AAEW,aAAA;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}