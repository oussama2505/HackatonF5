{"version":3,"file":"VaSkeleton.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-skeleton/VaSkeleton.vue"],"sourcesContent":["<template>\n  <component\n    class=\"va-skeleton\"\n    role=\"status\"\n    aria-live=\"polite\"\n    :aria-label=\"tp($props.ariaLabel)\"\n    aria-atomic=\"true\"\n    :class=\"classes\"\n    :is=\"tag\"\n   :style=\"`--va-color-computed: ${String(colorComputed)};--va-height-computed: ${String(heightComputed)};--va-width-computed: ${String(widthComputed)};--va-border-radius: ${String(borderRadius)};--va-line-gap: ${String(lineGap)};--va-last-line-width: ${String(lastLineWidth)}`\">\n    <slot />\n    <div class=\"va-skeleton__wave\" v-if=\"animation === 'wave'\" />\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onMounted, ref, computed, PropType, onBeforeUnmount, useAttrs, ComputedRef } from 'vue'\nimport { useBem, useColors, useNumericProp, useTranslation, useTranslationProp } from '../../composables'\n\ndefineOptions({\n  name: 'VaSkeleton',\n})\n\nconst props = defineProps({\n  color: { type: String, default: 'backgroundElement' },\n  delay: { type: [Number, String], default: 100 },\n\n  tag: { type: String, default: 'div' },\n\n  animation: { type: String as PropType<'pulse' | 'wave' | 'none'>, default: 'pulse' },\n\n  lines: { type: [String, Number], default: 1 },\n  height: { type: [String], default: '5em' },\n  width: { type: [String], default: '100%' },\n  lineGap: { type: String, default: '8px' },\n  lastLineWidth: { type: [String], default: '75%' },\n\n  variant: { type: String as PropType<'text' | 'circle' | 'rounded' | 'squared'>, default: 'squared' },\n  ariaLabel: useTranslationProp('$t:loading'),\n})\n\nconst doShow = ref(false)\nconst delayComputed = useNumericProp('delay') as ComputedRef<number>\n\nlet timeoutId: ReturnType<typeof setTimeout>\nonMounted(() => {\n  clearTimeout(timeoutId)\n  setTimeout(() => {\n    doShow.value = true\n  }, delayComputed.value)\n})\nonBeforeUnmount(() => {\n  clearTimeout(timeoutId)\n})\n\nconst heightComputed = computed(() => {\n  if (props.variant === 'text') {\n    return `${props.lines}em`\n  }\n\n  return props.height\n})\nconst widthComputed = computed(() => {\n  if (props.variant === 'circle') {\n    return heightComputed.value\n  }\n\n  return props.width\n})\n\nconst { getColor } = useColors()\n\nconst colorComputed = computed(() => getColor(props.color))\nconst negativeLineGap = computed(() => `-${props.lineGap}`)\n\nconst bem = useBem('va-skeleton', () => ({\n  lines: Number(props.lines) > 1,\n  text: props.variant === 'text',\n  circle: props.variant === 'circle',\n  hidden: !doShow.value,\n  pulse: props.animation === 'pulse',\n  wave: props.animation === 'wave',\n}))\n\nconst borderRadius = computed(() => {\n  if (props.variant === 'circle') { return '50%' }\n  if (props.variant === 'rounded') { return `var(--va-skeleton-border-radius, calc(${heightComputed.value} / 5))` }\n\n  return '0px'\n})\n\nconst { tp } = useTranslation()\nconst attrs = useAttrs()\n\nconst classes = computed(() => [\n  ...Object.keys(bem),\n  (attrs as { class: string }).class,\n])\n</script>\n\n<style lang=\"scss\">\n@import 'variables.scss';\n\n@keyframes pulse {\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(1);\n  }\n\n  75% {\n    filter: brightness(0.9);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n}\n\n@keyframes wave {\n  0% {\n    left: -100%;\n  }\n\n  100% {\n    left: 100%;\n  }\n}\n\n.va-skeleton {\n  $line-height: 1em;\n\n  background: var(--va-color-computed);\n  height: var(--va-height-computed);\n  width: var(--va-width-computed);\n  border-radius: var(--va-border-radius);\n  cursor: wait;\n\n  &--pulse {\n    animation: var(--va-skeleton-animation-duration) ease-in-out 0s infinite normal none running pulse;\n  }\n\n  &--wave {\n    mask-image: -webkit-radial-gradient(white, black);\n\n    .va-skeleton__wave {\n      position: absolute;\n      overflow: hidden;\n      left: 0;\n      height: 100%;\n      width: 100%;\n\n      &::after {\n        display: block;\n        position: relative;\n        content: '';\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        opacity: var(--va-skeleton-wave-opacity, 0.5);\n        background: linear-gradient(90deg, transparent, var(--va-skeleton-wave-color), transparent);\n        animation: var(--va-skeleton-animation-duration) linear 0s infinite normal none running wave;\n      }\n    }\n  }\n\n  &--hidden {\n    // Hide visually and from screen readers\n    position: absolute;\n    overflow: hidden;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    width: 1px;\n    margin: -1px;\n    padding: 0;\n    border: 0;\n  }\n\n  &--lines {\n    background:\n      repeating-linear-gradient(\n        180deg,\n        var(--va-color-computed),\n        var(--va-color-computed) calc($line-height - var(--va-line-gap) / 2),\n        transparent calc($line-height - var(--va-line-gap) / 2),\n        transparent $line-height,\n      );\n\n    .va-skeleton__wave::after {\n      mask-image:\n        repeating-linear-gradient(\n          180deg,\n          black,\n          black calc($line-height - var(--va-line-gap) / 2),\n          transparent calc($line-height - var(--va-line-gap) / 2),\n          transparent $line-height,\n        );\n    }\n  }\n\n  &--text {\n    width: 100%;\n    clip-path:\n      polygon(\n        0% 0%,\n        0% 100%,\n        var(--va-last-line-width) 100%,\n        var(--va-last-line-width) calc(100% - $line-height),\n        100% calc(100% - $line-height),\n        100% 100%,\n        $line-height 100%,\n        var(--va-last-line-width) 100%,\n        100% 100%,\n        100% 0%\n      );\n  }\n\n  &--circle {\n    min-width: var(--va-width-computed);\n    min-height: var(--va-height-computed);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,UAAM,QAAQ;AAkBR,UAAA,SAAS,IAAI,KAAK;AAClB,UAAA,gBAAgB,eAAe,OAAO;AAExC,QAAA;AACJ,cAAU,MAAM;AACd,mBAAa,SAAS;AACtB,iBAAW,MAAM;AACf,eAAO,QAAQ;AAAA,MAAA,GACd,cAAc,KAAK;AAAA,IAAA,CACvB;AACD,oBAAgB,MAAM;AACpB,mBAAa,SAAS;AAAA,IAAA,CACvB;AAEK,UAAA,iBAAiB,SAAS,MAAM;AAChC,UAAA,MAAM,YAAY,QAAQ;AACrB,eAAA,GAAG,MAAM,KAAK;AAAA,MACvB;AAEA,aAAO,MAAM;AAAA,IAAA,CACd;AACK,UAAA,gBAAgB,SAAS,MAAM;AAC/B,UAAA,MAAM,YAAY,UAAU;AAC9B,eAAO,eAAe;AAAA,MACxB;AAEA,aAAO,MAAM;AAAA,IAAA,CACd;AAEK,UAAA,EAAE,aAAa;AAErB,UAAM,gBAAgB,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC;AAClC,aAAS,MAAM,IAAI,MAAM,OAAO,EAAE;AAEpD,UAAA,MAAM,OAAO,eAAe,OAAO;AAAA,MACvC,OAAO,OAAO,MAAM,KAAK,IAAI;AAAA,MAC7B,MAAM,MAAM,YAAY;AAAA,MACxB,QAAQ,MAAM,YAAY;AAAA,MAC1B,QAAQ,CAAC,OAAO;AAAA,MAChB,OAAO,MAAM,cAAc;AAAA,MAC3B,MAAM,MAAM,cAAc;AAAA,IAC1B,EAAA;AAEI,UAAA,eAAe,SAAS,MAAM;AAC9B,UAAA,MAAM,YAAY,UAAU;AAAS,eAAA;AAAA,MAAM;AAC3C,UAAA,MAAM,YAAY,WAAW;AAAS,eAAA,yCAAyC,eAAe,KAAK;AAAA,MAAS;AAEzG,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,EAAE,OAAO;AACf,UAAM,QAAQ;AAER,UAAA,UAAU,SAAS,MAAM;AAAA,MAC7B,GAAG,OAAO,KAAK,GAAG;AAAA,MACjB,MAA4B;AAAA,IAAA,CAC9B;;;;;;;;;;;;;;;;;;;"}