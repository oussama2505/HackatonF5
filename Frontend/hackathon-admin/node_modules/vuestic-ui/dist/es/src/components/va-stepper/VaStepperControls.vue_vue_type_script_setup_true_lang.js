import { defineComponent, computed, openBlock, createElementBlock, createVNode, unref, withCtx, createTextVNode, toDisplayString, createBlock, createCommentVNode } from "vue";
import { V as VaButton } from "../va-button/index.js";
import { u as unFunction } from "../../utils/un-function.js";
import { u as useTranslation } from "../../composables/useTranslation.js";
const _hoisted_1 = { class: "va-stepper__default-controls" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaStepperControls"
  },
  __name: "VaStepperControls",
  props: {
    modelValue: { type: [Number, String], required: true },
    steps: {
      type: Array,
      required: true
    },
    nextDisabled: { type: Boolean, required: true },
    stepControls: { type: Object, required: true },
    finishButtonHidden: { type: Boolean, default: false }
  },
  setup(__props) {
    const props = __props;
    const { t } = useTranslation();
    const isLoading = computed(() => {
      const currentStep = props.steps[Number(props.modelValue)];
      return unFunction(currentStep.isLoading) || false;
    });
    const isLastStep = computed(() => {
      const lastEnabledStepIndex = props.steps.length - 1;
      return Number(props.modelValue) >= lastEnabledStepIndex;
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        createVNode(unref(VaButton), {
          preset: "primary",
          disabled: Number(_ctx.$props.modelValue) <= 0,
          loading: isLoading.value,
          onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$props.stepControls.prevStep())
        }, {
          default: withCtx(() => [
            createTextVNode(toDisplayString(unref(t)("back")), 1)
          ]),
          _: 1
        }, 8, ["disabled", "loading"]),
        !isLastStep.value ? (openBlock(), createBlock(unref(VaButton), {
          key: 0,
          onClick: _cache[1] || (_cache[1] = ($event) => _ctx.$props.stepControls.nextStep()),
          disabled: _ctx.$props.nextDisabled,
          loading: isLoading.value
        }, {
          default: withCtx(() => [
            createTextVNode(toDisplayString(unref(t)("next")), 1)
          ]),
          _: 1
        }, 8, ["disabled", "loading"])) : !_ctx.$props.finishButtonHidden ? (openBlock(), createBlock(unref(VaButton), {
          key: 1,
          onClick: _cache[2] || (_cache[2] = ($event) => _ctx.$props.stepControls.finish()),
          loading: isLoading.value
        }, {
          default: withCtx(() => [
            createTextVNode(toDisplayString(unref(t)("finish")), 1)
          ]),
          _: 1
        }, 8, ["loading"])) : createCommentVNode("", true)
      ]);
    };
  }
});
export {
  _sfc_main as _
};

import '../../../VaStepperControls.css';
//# sourceMappingURL=VaStepperControls.vue_vue_type_script_setup_true_lang.js.map
