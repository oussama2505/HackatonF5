{"version":3,"file":"VaTimeInput.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-time-input/VaTimeInput.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    v-model=\"doShowDropdown\"\n    class=\"va-time-input\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    v-bind=\"dropdownPropsComputed\"\n  >\n    <template #anchor>\n      <va-input-wrapper\n        class=\"va-time-input__anchor\"\n        ref=\"input\"\n        :style=\"cursorStyleComputed\"\n        v-bind=\"{ ...computedInputWrapperProps, ...validationAriaAttributes, ...computedInputListeners }\"\n        @change=\"onInputTextChanged\"\n      >\n        <template\n          v-for=\"name in filteredSlots\"\n          :key=\"name\"\n          v-slot:[name]=\"slotScope\"\n        >\n          <slot\n            :name=\"name\"\n            v-bind=\"{ ...slotScope, toggleDropdown, showDropdown, hideDropdown, isOpen: isOpenSync, focus }\"\n          />\n        </template>\n\n        <template #prependInner=\"slotScope\" v-if=\"$slots.prependInner || $props.leftIcon\">\n          <slot\n            name=\"prependInner\"\n            v-bind=\"{ ...slotScope, toggleDropdown, showDropdown, hideDropdown, isOpen: isOpenSync, focus }\"\n          />\n          <va-icon\n            v-if=\"$props.leftIcon\"\n            class=\"va-time-input__left-button va-time-input__side-button\"\n            :aria-label=\"tp($props.ariaToggleDropdownLabel)\"\n            v-bind=\"iconProps\"\n          />\n        </template>\n\n        <template #icon>\n          <va-icon\n            v-if=\"canBeClearedComputed\"\n            class=\"va-time-input__clear-button\"\n            v-bind=\"{ ...iconProps, ...clearIconProps }\"\n            :aria-label=\"tp($props.ariaResetLabel)\"\n            @click.stop=\"reset\"\n            @keydown.enter.stop=\"reset\"\n            @keydown.space.stop=\"reset\"\n          />\n          <va-icon\n            v-if=\"!$props.leftIcon && $props.icon\"\n            class=\"va-time-input__right-button va-time-input__side-button\"\n            :aria-label=\"tp($props.ariaToggleDropdownLabel)\"\n            v-bind=\"iconProps\"\n          />\n        </template>\n      </va-input-wrapper>\n    </template>\n\n    <va-dropdown-content\n      no-padding\n      @keydown.esc.prevent=\"hideDropdown\"\n      @keydown.enter.prevent=\"hideDropdown\"\n    >\n      <va-time-picker\n        ref=\"timePicker\"\n        v-bind=\"timePickerProps\"\n        v-model=\"valueComputed\"\n      />\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { computed, PropType, shallowRef, nextTick, useSlots, useAttrs, watch } from 'vue'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\nimport {\n  useComponentPresetProp,\n  useValidation, useValidationEmits, useValidationProps, ValidationProps,\n  useClearable, useClearableEmits, useClearableProps,\n  useFocus, useFocusEmits,\n  useStateful, useStatefulEmits, useStatefulProps,\n  useTranslation, useTranslationProp,\n  useDropdownable, useDropdownableProps, useDropdownableEmits, useLongPressKey,\n} from '../../composables'\nimport { useTimeParser } from './hooks/time-text-parser'\nimport { useTimeFormatter } from './hooks/time-text-formatter'\n\nimport { VaInputWrapper } from '../va-input-wrapper'\nimport { VaIcon } from '../va-icon'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport VaTimePicker from '../va-time-picker/VaTimePicker.vue'\n\nconst VaInputWrapperProps = extractComponentProps(VaInputWrapper, ['focused', 'maxLength', 'counterValue'])\n</script>\n\n<script lang=\"ts\" setup>\ndefineOptions({\n  name: 'VaTimeInput',\n  inheritAttrs: false,\n})\n\nconst props = defineProps({\n  ...VaInputWrapperProps,\n  ...useDropdownableProps,\n  ...useComponentPresetProp,\n  ...useClearableProps,\n  ...extractComponentProps(VaTimePicker),\n  ...useValidationProps as ValidationProps<Date>,\n  ...useStatefulProps,\n\n  closeOnContentClick: { type: Boolean, default: false },\n  offset: { ...useDropdownableProps.offset, default: () => [2, 0] },\n  placement: { ...useDropdownableProps.placement, default: 'bottom-end' },\n  modelValue: { type: Date, default: undefined },\n  clearValue: { type: Date, default: null },\n  format: { type: Function as PropType<(date?: Date) => string> },\n  parse: { type: Function as PropType<(input: string) => Date> },\n  manualInput: { type: Boolean, default: false },\n  leftIcon: { type: Boolean, default: false },\n  icon: { type: String, default: 'schedule' },\n\n  ariaLabel: useTranslationProp('$t:selectedTime'),\n  ariaResetLabel: useTranslationProp('$t:resetTime'),\n  ariaToggleDropdownLabel: useTranslationProp('$t:toggleDropdown'),\n})\n\nconst emit = defineEmits([\n  ...useFocusEmits,\n  ...useValidationEmits,\n  ...useClearableEmits,\n  ...useStatefulEmits,\n  ...useDropdownableEmits,\n  'update:modelValue',\n])\n\nconst input = shallowRef<HTMLInputElement>()\nconst timePicker = shallowRef<typeof VaTimePicker>()\n\nconst { isOpenSync, dropdownProps } = useDropdownable(props, emit, {\n  defaultCloseOnValueUpdate: computed(() => Array.isArray(props.view) && props.view.length === 1),\n})\nconst { valueComputed } = useStateful<Date>(props, emit)\n\nconst { parse, isValid } = useTimeParser(props)\nconst { format } = useTimeFormatter(props)\n\nconst valueText = computed<string>(() => format(valueComputed.value || props.clearValue))\n\nconst doShowDropdown = computed({\n  get () {\n    if (props.disabled || props.readonly) { return false }\n\n    return isOpenSync.value\n  },\n  set (v: boolean) {\n    isOpenSync.value = v\n\n    if (v) {\n      nextTick(() => timePicker.value?.focus())\n    } else {\n      nextTick(() => input.value?.focus())\n    }\n  },\n})\n\nconst { isFocused, focus, blur, onFocus: focusListener, onBlur: blurListener } = useFocus(input)\n\nconst onInputTextChanged = (e: Event) => {\n  if (props.disabled) { return }\n\n  const val = (e.target as HTMLInputElement)?.value\n  if (!val) {\n    return reset()\n  }\n\n  const v = parse(val)\n\n  if (isValid.value && v) {\n    valueComputed.value = v\n  } else {\n    valueComputed.value = undefined\n    isValid.value = true\n  }\n}\n\n// --- not used yet ---\n// const changePeriod = (isPM: boolean) => {\n//   if (!valueComputed.value) { return }\n\n//   const halfDayPeriod = 12\n//   const h = valueComputed.value.getHours()\n\n//   if (isPM && h <= halfDayPeriod) {\n//     valueComputed.value = new Date(valueComputed.value.setHours(h + halfDayPeriod))\n//   } else if (!isPM && h >= halfDayPeriod) {\n//     valueComputed.value = new Date(valueComputed.value.setHours(h - halfDayPeriod))\n//   }\n// }\n\n// const changePeriodToPm = () => changePeriod(true)\n// const changePeriodToAm = () => changePeriod(false)\n\nconst reset = () => withoutValidation(() => {\n  emit('update:modelValue', props.clearValue)\n  emit('clear')\n  resetValidation()\n  hideDropdown()\n})\n\nconst {\n  computedError,\n  computedErrorMessages,\n  listeners,\n  validationAriaAttributes,\n  withoutValidation,\n  resetValidation,\n  isDirty,\n  isTouched,\n} = useValidation(props, emit, { reset, focus, value: valueComputed })\n\nwatch(doShowDropdown, (v) => {\n  if (!v) {\n    isTouched.value = true\n  }\n})\n\nconst {\n  canBeCleared,\n  clearIconProps,\n  onFocus,\n  onBlur,\n} = useClearable(props, valueText)\n\nconst canBeClearedComputed = computed(() => (\n  canBeCleared.value && valueText.value !== format(props.clearValue)\n))\n\nconst filteredWrapperProps = filterComponentProps(VaInputWrapperProps)\nconst computedInputWrapperProps = computed(() => ({\n  ...filteredWrapperProps.value,\n  focused: isFocused.value,\n  error: computedError.value,\n  errorMessages: computedErrorMessages.value,\n  readonly: props.readonly || !props.manualInput,\n  modelValue: valueText.value,\n}))\n\nconst viewToNumber = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n}\n\nconst onKeyPress = (e: KeyboardEvent | FocusEvent) => {\n  if (!('key' in e)) { return }\n\n  if (e.key === 'ArrowDown') {\n    valueComputed.value = new Date(Number(valueComputed.value) - viewToNumber[props.view])\n    e.preventDefault()\n  }\n  if (e.key === 'ArrowUp') {\n    valueComputed.value = new Date(Number(valueComputed.value) + viewToNumber[props.view])\n    e.preventDefault()\n  }\n}\n\nuseLongPressKey(input, {\n  onStart: onKeyPress,\n  onUpdate: onKeyPress,\n})\n\nconst computedInputListeners = ({\n  onFocus: () => {\n    if (props.disabled) { return }\n\n    focusListener()\n\n    if (props.readonly) { return }\n    onFocus()\n  },\n  onBlur: () => {\n    if (props.disabled) { return }\n\n    blurListener()\n\n    if (props.readonly) { return }\n    onBlur()\n    listeners.onBlur()\n  },\n})\n\nconst slots = useSlots()\n\nconst filteredSlots = computed(() => {\n  const slotsWithIcons = [\n    props.leftIcon && 'prependInner',\n    (!props.leftIcon || props.clearable) && 'icon',\n  ]\n  return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot))\n})\n\nconst hideDropdown = () => {\n  doShowDropdown.value = false\n}\n\nconst showDropdown = (event?: KeyboardEvent, cancel?: boolean, prevent?: boolean) => {\n  doShowDropdown.value = true\n}\n\nconst checkProhibitedDropdownOpening = (e?: KeyboardEvent) => {\n  if (isOpenSync.value) { return false }\n  if (props.disabled || props.readonly) { return true }\n  if (e === undefined) { return false }\n  return props.manualInput && e?.code !== 'Space'\n}\n\nconst toggleDropdown = (event: Event | KeyboardEvent) => {\n  if (checkProhibitedDropdownOpening(event instanceof KeyboardEvent ? event : undefined)) { return }\n\n  doShowDropdown.value = !doShowDropdown.value\n}\n\nconst cursorStyleComputed = computed(() => {\n  if (props.disabled) { return {} }\n  if (props.manualInput) { return { cursor: 'text' } }\n  return { cursor: 'pointer' }\n})\n\nconst iconTabindexComputed = computed(() => {\n  if (!props.manualInput) { return -1 }\n\n  return props.disabled || props.readonly ? -1 : 0\n})\n\nconst iconProps = computed(() => ({\n  role: 'button',\n  'aria-hidden': false,\n  name: props.icon,\n  color: 'secondary',\n  tabindex: iconTabindexComputed.value,\n}))\n\nconst { tp } = useTranslation()\n\nconst attrs = useAttrs()\n\nconst dropdownPropsComputed = computed(() => ({\n  ...dropdownProps.value,\n  innerAnchorSelector: '.va-input-wrapper__field',\n  trigger: ['click', 'right-click', 'space', 'enter'] as const,\n}))\n\nconst timePickerProps = filterComponentProps(extractComponentProps(VaTimePicker))\n\ndefineExpose({\n  isFocused,\n  isValid,\n  value: valueComputed,\n  isDirty,\n  isTouched,\n  focus,\n  blur,\n  reset,\n  withoutValidation,\n  resetValidation,\n  toggleDropdown,\n  showDropdown,\n  hideDropdown,\n})\n</script>\n"],"names":["VaTimePicker"],"mappings":"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"}