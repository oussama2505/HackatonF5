import { watch, onMounted, onBeforeUnmount, unref } from "vue";
const useResizeObserver = (elementsList, cb) => {
  let resizeObserver;
  const observeAll = (elementsList2) => {
    elementsList2.forEach((element) => {
      const unrefedElement = unref(element);
      unrefedElement && (resizeObserver == null ? void 0 : resizeObserver.observe(unrefedElement));
    });
  };
  watch(elementsList, (newValue) => {
    resizeObserver == null ? void 0 : resizeObserver.disconnect();
    observeAll(Array.isArray(newValue) ? newValue : [newValue]);
  });
  onMounted(() => {
    resizeObserver = new ResizeObserver(cb);
    observeAll(Array.isArray(elementsList) ? elementsList : [elementsList]);
  });
  onBeforeUnmount(() => resizeObserver == null ? void 0 : resizeObserver.disconnect());
  return resizeObserver;
};
export {
  useResizeObserver as u
};
//# sourceMappingURL=useResizeObserver.js.map
