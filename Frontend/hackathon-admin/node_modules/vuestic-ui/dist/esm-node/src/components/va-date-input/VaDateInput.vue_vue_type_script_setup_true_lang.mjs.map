{"version":3,"file":"VaDateInput.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../src/components/va-date-input/VaDateInput.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    v-model=\"isOpenSync\"\n    class=\"va-date-input\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    v-bind=\"dropdownPropsComputed\"\n    @open=\"focusDatePicker\"\n    role=\"none\"\n  >\n    <template #anchor>\n      <slot name=\"input\" v-bind=\"{ valueText, inputAttributes: inputAttributesComputed, inputWrapperProps, inputListeners }\">\n        <va-input-wrapper\n          class=\"va-date-input__anchor\"\n          :style=\"cursorStyleComputed\"\n          v-bind=\"inputWrapperProps\"\n          v-on=\"inputListeners\"\n          :model-value=\"valueText\"\n          @change=\"onInputTextChanged\"\n        >\n          <template\n            v-for=\"name in filterSlots\"\n            :key=\"name\"\n            v-slot:[name]=\"slotScope\"\n          >\n            <slot :name=\"name\" v-bind=\"slotScope\" />\n          </template>\n\n          <template #prependInner=\"slotScope\" v-if=\"$slots.prependInner || $props.leftIcon\">\n            <slot name=\"prependInner\" v-bind=\"slotScope\" />\n            <va-icon\n              v-if=\"$props.leftIcon\"\n              :aria-label=\"tp($props.ariaToggleDropdownLabel)\"\n              v-bind=\"iconProps\"\n            />\n          </template>\n\n          <template #icon>\n            <va-icon\n              v-if=\"canBeCleared\"\n              :aria-label=\"tp($props.ariaResetLabel)\"\n              v-bind=\"{ ...iconProps, ...clearIconProps }\"\n              @click.stop=\"reset\"\n              @keydown.enter.stop=\"reset\"\n              @keydown.space.stop=\"reset\"\n            />\n            <va-icon\n              v-if=\"!$props.leftIcon && $props.icon\"\n              :aria-label=\"tp($props.ariaToggleDropdownLabel)\"\n              v-bind=\"iconProps\"\n            />\n          </template>\n        </va-input-wrapper>\n      </slot>\n    </template>\n\n    <va-dropdown-content class=\"va-date-input__dropdown-content\" @keydown.esc=\"focus()\" role=\"dialog\">\n      <va-date-picker\n        ref=\"datePicker\"\n        v-bind=\"datePickerProps\"\n        v-model=\"valueWithoutText\"\n        @click:day=\"$emit('click:day', $event)\"\n        @click:month=\"$emit('click:month', $event)\"\n        @click:year=\"$emit('click:year', $event)\"\n        @hover:day=\"$emit('hover:day', $event)\"\n        @hover:month=\"$emit('hover:month', $event)\"\n        @hover:year=\"$emit('hover:year', $event)\"\n        @update:view=\"($event) => { $nextTick(() => trapFocus()); $emit('update:view', $event) }\"\n      >\n        <template\n          v-for=\"(_, name) in $slots\"\n          :key=\"name\"\n          v-slot:[name]=\"bind\"\n        >\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-date-picker>\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { computed, PropType, toRef, toRefs, watch, ref, shallowRef, nextTick, Ref, useAttrs, useSlots } from 'vue'\nimport omit from 'lodash/omit'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/component-options'\nimport {\n  useComponentPresetProp,\n  useClearable, useClearableEmits, useClearableProps,\n  useValidation, useValidationEmits, useValidationProps, ValidationProps,\n  useStateful, useStatefulEmits,\n  useDropdownable,\n  useDropdownableProps,\n  useDropdownableEmits,\n  useFocus, useFocusEmits, useTranslation, useTranslationProp, useFocusDeep, useTrapFocus,\n} from '../../composables'\nimport { useRangeModelValueGuard } from './hooks/range-model-value-guard'\nimport { useDateParser } from './hooks/input-text-parser'\nimport { useDateInputModelValue } from './hooks/model-value'\n\nimport { isRange, isSingleDate, isDates } from '../va-date-picker/utils/date-utils'\n\nimport type { DateInputModelValue, DateInputValue } from './types'\n\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport VaDatePicker from '../va-date-picker/VaDatePicker.vue'\nimport { VaInputWrapper } from '../va-input-wrapper'\nimport { VaIcon } from '../va-icon'\nimport { unwrapEl } from '../../utils/unwrapEl'\n\nconst VaInputWrapperPropsDeclaration = extractComponentProps(VaInputWrapper, ['focused', 'maxLength', 'counterValue'])\nconst VaDatePickerPropsDeclaration = extractComponentProps(VaDatePicker)\n</script>\n\n<script lang=\"ts\" setup>\ndefineOptions({\n  name: 'VaDateInput',\n})\n\nconst props = defineProps({\n  ...useDropdownableProps,\n  ...useClearableProps,\n  ...VaInputWrapperPropsDeclaration,\n  ...VaDatePickerPropsDeclaration,\n  ...useValidationProps as ValidationProps<DateInputModelValue>,\n  ...useComponentPresetProp,\n\n  clearValue: { type: undefined as unknown as PropType<any>, default: undefined },\n  modelValue: { type: [Date, Array, Object, String, Number] as PropType<DateInputModelValue> },\n\n  resetOnClose: { type: Boolean, default: true },\n  closeOnContentClick: { type: Boolean, default: false },\n  offset: { ...useDropdownableProps.offset, default: () => [2, 0] },\n\n  format: { type: Function as PropType<(date: DateInputModelValue) => string> },\n  formatDate: { type: Function as PropType<(date: Date) => string>, default: (d: Date) => d.toLocaleDateString() },\n  /** Force model value to string instead of date */\n  formatValue: { type: Function as PropType<(date: DateInputModelValue) => string> },\n  parse: { type: Function as PropType<(input: string) => DateInputValue> },\n  parseDate: { type: Function as PropType<(input: string) => Date> },\n\n  delimiter: { type: String, default: ', ' },\n  rangeDelimiter: { type: String, default: ' ~ ' },\n  manualInput: { type: Boolean, default: false },\n\n  color: { type: String, default: 'primary' },\n  leftIcon: { type: Boolean, default: false },\n  icon: { type: String, default: 'va-calendar' },\n\n  ariaToggleDropdownLabel: useTranslationProp('$t:toggleDropdown'),\n  ariaResetLabel: useTranslationProp('$t:resetDate'),\n  ariaSelectedDateLabel: useTranslationProp('$t:selectedDate'),\n})\n\nconst emit = defineEmits([\n  ...useFocusEmits,\n  ...extractComponentEmits(VaDatePicker),\n  ...useClearableEmits,\n  ...useValidationEmits,\n  ...useStatefulEmits,\n  ...useDropdownableEmits,\n  'update:text',\n])\n\nconst input = shallowRef<HTMLInputElement>()\nconst datePicker = ref<typeof VaDatePicker>()\n\nconst { resetOnClose } = toRefs(props)\nconst { trapFocusIn, freeFocus } = useTrapFocus()\n\nconst trapFocus = () => {\n  const el = unwrapEl(datePicker.value)\n  if (!el) {\n    freeFocus()\n    return\n  }\n\n  trapFocusIn(el)\n}\n\nwatch([datePicker], () => {\n  trapFocus()\n})\n\nconst { valueComputed: statefulValue } = useStateful(props, emit)\nconst { isOpenSync, dropdownProps } = useDropdownable(props, emit, {\n  defaultCloseOnValueUpdate: computed(() => {\n    if (Array.isArray(valueComputed.value)) {\n      return false\n    }\n\n    if (isRange(valueComputed.value) && valueComputed.value.end === null) {\n      return false\n    }\n\n    return true\n  }),\n})\n\nconst isRangeModelValueGuardDisabled = computed(() => !resetOnClose.value)\n\nconst {\n  valueComputed,\n  reset: resetInvalidRange,\n} = useRangeModelValueGuard(statefulValue, isRangeModelValueGuardDisabled)\n\nwatch(isOpenSync, (isOpened) => {\n  if (!isOpened && !isRangeModelValueGuardDisabled.value) { resetInvalidRange() }\n})\n\nconst { isFocused: isInputFocused, focus, blur, onFocus: focusListener, onBlur: blurListener } = useFocus(input)\nconst isPickerFocused = useFocusDeep(datePicker)\n\nconst dateOrNothing = (date: Date | undefined | null) => date ? props.formatDate(date) : '...'\n\nconst { parseDateInputValue, isValid } = useDateParser(props)\n\nwatch(valueComputed, () => {\n  isValid.value = true\n})\n\nconst modelValueToString = (value: DateInputModelValue): string => {\n  if (props.format) {\n    return props.format(valueComputed.value)\n  }\n\n  if (isDates(value)) {\n    return value.map((d) => props.formatDate(d)).join(props.delimiter)\n  }\n  if (isSingleDate(value)) {\n    return props.formatDate(value)\n  }\n  if (isRange(value)) {\n    return dateOrNothing(value.start) + props.rangeDelimiter + dateOrNothing(value.end)\n  }\n\n  if (value === null || value === undefined) {\n    return ''\n  }\n\n  return ''\n}\n\nconst {\n  text,\n  normalized: valueWithoutText,\n} = useDateInputModelValue(valueComputed, toRef(props, 'mode'), parseDateInputValue, modelValueToString, props.formatValue)\n\nconst valueText = computed(() => {\n  if (!isValid.value) {\n    return ''\n  }\n\n  if (!valueComputed.value) {\n    if (!props.clearValue) { return '' }\n    return modelValueToString(props.clearValue)\n  }\n\n  return text.value\n})\n\nconst onInputTextChanged = ({ target }: Event) => {\n  if (props.disabled) { return }\n\n  const inputValue = (target as HTMLInputElement).value\n\n  if (isValid.value) {\n    valueComputed.value = inputValue === '' ? props.clearValue : parseDateInputValue(inputValue)\n  }\n}\n\nconst reset = () => withoutValidation(() => {\n  statefulValue.value = props.clearValue\n  emit('clear')\n  resetValidation()\n})\n\nconst hideAndFocus = (): void => {\n  isOpenSync.value = false\n  focus()\n}\n\nconst focusDatePicker = (): void => {\n  nextTick(() => datePicker.value?.focusCurrentPicker())\n}\n\nconst focusInputOrPicker = () => {\n  isOpenSync.value ? focusDatePicker() : focus()\n}\n\nconst checkProhibitedDropdownOpening = (e?: KeyboardEvent) => {\n  if (isOpenSync.value) { return false }\n  if (props.disabled || props.readonly) { return true }\n  if (e === undefined) { return false }\n  return props.manualInput && e?.code !== 'Space'\n}\n\nconst toggleDropdown = (event: Event | KeyboardEvent) => {\n  if (checkProhibitedDropdownOpening(event instanceof KeyboardEvent ? event : undefined)) { return }\n\n  isOpenSync.value = !isOpenSync.value\n  nextTick(focusInputOrPicker)\n}\n\n// icon interaction\nconst showDropdown = () => {\n  if (props.disabled || props.readonly) { return }\n\n  isOpenSync.value = true\n  nextTick(focusDatePicker)\n}\n\nconst {\n  isDirty,\n  isTouched,\n  computedError,\n  computedErrorMessages,\n  listeners,\n  validationAriaAttributes,\n  validate,\n  withoutValidation,\n  resetValidation,\n} = useValidation(props, emit, { reset, focus, value: valueComputed })\n\nwatch(isOpenSync, (isOpen) => {\n  if (!isOpen) {\n    isTouched.value = true\n  }\n})\n\nconst hasError = computed(() => (!isValid.value && valueComputed.value !== props.clearValue) || computedError.value)\n\nconst slots = useSlots()\nconst filterSlots = computed(() => {\n  const slotsWithIcons = [\n    props.leftIcon && 'prependInner',\n    (!props.leftIcon || props.clearable) && 'icon',\n  ]\n  return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot))\n})\n\nconst {\n  canBeCleared,\n  clearIconProps,\n  onFocus,\n  onBlur,\n} = useClearable(props, valueComputed)\n\nconst cursorStyleComputed = computed(() => {\n  if (props.disabled) { return {} }\n  if (props.manualInput) { return { cursor: 'text' } }\n  return { cursor: 'pointer' }\n})\n\nconst iconTabindexComputed = computed(() => {\n  if (!props.manualInput) { return -1 }\n\n  return props.disabled || props.readonly ? -1 : 0\n})\n\nconst iconProps = computed(() => ({\n  role: iconTabindexComputed.value === 0 ? 'button' : 'none',\n  ariaHidden: iconTabindexComputed.value === -1,\n  name: props.icon,\n  color: 'secondary',\n  tabindex: iconTabindexComputed.value,\n}))\n\nconst filteredWrapperProps = filterComponentProps(VaInputWrapperPropsDeclaration)\nconst computedInputWrapperProps = computed(() => ({\n  ...filteredWrapperProps.value,\n  focused: isInputFocused.value || isPickerFocused.value,\n  error: hasError.value,\n  errorMessages: computedErrorMessages.value,\n  readonly: props.readonly || !props.manualInput,\n}))\n\nconst computedInputListeners = computed(() => ({\n  focus: () => {\n    if (props.disabled) { return }\n\n    focusListener()\n\n    if (props.readonly) { return }\n    onFocus()\n  },\n  blur: () => {\n    if (props.disabled) { return }\n\n    blurListener()\n\n    if (props.readonly) { return }\n    onBlur()\n    listeners.onBlur()\n  },\n}))\n\nconst { tp } = useTranslation()\n\nconst attrs = useAttrs()\n\nconst inputAttributesComputed = computed(() => ({\n  readonly: props.readonly || !props.manualInput,\n  disabled: props.disabled,\n  tabindex: props.disabled ? -1 : 0,\n  placeholder: props.placeholder,\n  value: valueText.value,\n  ariaLabel: props.label || tp(props.ariaSelectedDateLabel),\n  ariaRequired: props.requiredMark,\n  ariaDisabled: props.disabled,\n  ariaReadOnly: props.readonly,\n  ...validationAriaAttributes.value,\n  ...omit(attrs, ['class', 'style']),\n}))\n\nconst dropdownPropsComputed = computed(() => ({\n  ...dropdownProps.value,\n  stateful: false,\n  innerAnchorSelector: '.va-input-wrapper__field',\n  trigger: ['click', 'right-click', 'enter', 'space'] as const,\n}))\n\nconst inputWrapperProps = computedInputWrapperProps\nconst inputListeners = computedInputListeners\nconst datePickerProps = filterComponentProps(VaDatePickerPropsDeclaration)\n\ndefineExpose({\n  valueText,\n  valueWithoutText,\n  valueDate: valueWithoutText,\n  focus,\n  blur,\n  reset,\n  validate,\n  showDropdown,\n  hideAndFocus,\n  toggleDropdown,\n  focusDatePicker,\n  isDirty,\n  isTouched,\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-date-input {\n  --va-date-picker-cell-size: 28px;\n\n  font-family: var(--va-font-family);\n\n  &__anchor {\n    flex: 1;\n  }\n\n  &__input {\n    &:read-only {\n      cursor: pointer;\n    }\n  }\n\n  &__dropdown-content {\n    display: flex;\n    justify-content: center;\n  }\n}\n</style>\n"],"names":["VaDatePicker"],"mappings":"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"}