{"version":3,"file":"VaDayPicker.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"$props.readonly\"\n        :color=\"color\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { computed, toRefs, PropType, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\ndefineOptions({\n  name: 'VaDayPicker',\n})\n\ntype CaseInsensitive<T extends string> = T | Lowercase<T>\n\nconst props = defineProps({\n  monthNames: { type: Array as PropType<string[]>, required: true },\n  weekdayNames: { type: Array as PropType<string[]>, required: true },\n  firstWeekday: { type: String as PropType<CaseInsensitive<'Monday' | 'Sunday'>>, default: 'Sunday' },\n  hideWeekDays: { type: Boolean, default: false },\n  view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'day' }) },\n  modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n  mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n  showOtherMonths: { type: Boolean, default: false },\n  allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n  weekends: { type: Function as PropType<(date: Date) => boolean> },\n  highlightWeekend: { type: Boolean, default: false },\n  highlightToday: { type: Boolean, default: false },\n  readonly: { type: Boolean, default: false },\n  color: { type: String, default: 'primary' },\n})\n\nconst emit = defineEmits(['update:modelValue', 'hover:day', 'click:day'])\n\nconst { firstWeekday, weekdayNames, view } = toRefs(props)\n\nconst { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\nconst weekdayNamesComputed = computed(() => {\n  return firstWeekday.value.toLowerCase() === 'sunday'\n    ? weekdayNames.value\n    : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n})\n\nconst {\n  hoveredIndex,\n  onClick,\n  isToday,\n  isSelected,\n  isInRange,\n} = useDatePicker('day', calendarDates, props, emit)\n\nconst gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\nconst gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\nconst {\n  focusedCellIndex, containerAttributes,\n} = useGridKeyboardNavigation({\n  rowSize: 7,\n  start: gridStartIndex,\n  end: gridEndIndex,\n  onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n})\n\nwatch(focusedCellIndex, (index) => { hoveredIndex.value = index })\nwatch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\nconst isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\nconst isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\nconst isDateWeekend = (date: Date) => {\n  if (props.weekends === undefined) {\n    return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n  }\n\n  return props.weekends(date)\n}\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr); // 7 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    height: var(--va-date-picker-cell-size);\n    color: var(--va-secondary);\n    text-align: center;\n    font-size: var(--va-date-picker-weekday-font-size);\n    font-weight: bold;\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,UAAM,QAAQ;AAiBd,UAAM,OAAO;AAEb,UAAM,EAAE,cAAc,cAAc,KAAK,IAAI,OAAO,KAAK;AAEnD,UAAA,EAAE,eAAe,wBAAwB,qBAAA,IAAyB,wBAAwB,MAAM,EAAE,aAAA,CAAc;AAEhH,UAAA,uBAAuB,SAAS,MAAM;AAC1C,aAAO,aAAa,MAAM,YAAA,MAAkB,WACxC,aAAa,QACb,CAAC,GAAG,aAAa,MAAM,MAAM,CAAC,GAAG,aAAa,MAAM,CAAC,CAAC;AAAA,IAAA,CAC3D;AAEK,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACE,IAAA,cAAc,OAAO,eAAe,OAAO,IAAI;AAEnD,UAAM,iBAAiB,SAAS,MAAM,MAAM,kBAAkB,IAAI,uBAAuB,KAAK;AACxF,UAAA,eAAe,SAAS,MAAM,MAAM,kBAAkB,cAAc,MAAM,SAAS,qBAAqB,KAAK;AAE7G,UAAA;AAAA,MACJ;AAAA,MAAkB;AAAA,QAChB,0BAA0B;AAAA,MAC5B,SAAS;AAAA,MACT,OAAO;AAAA,MACP,KAAK;AAAA,MACL,YAAY,CAAC,kBAAkB,QAAQ,cAAc,MAAM,aAAa,CAAC;AAAA,IAAA,CAC1E;AAEK,UAAA,kBAAkB,CAAC,UAAU;AAAE,mBAAa,QAAQ;AAAA,IAAA,CAAO;AAC3D,UAAA,cAAc,CAAC,UAAU;AAAE,uBAAiB,QAAQ;AAAA,IAAA,CAAO;AAEjE,UAAM,eAAe,CAAC,SAAe,MAAM,KAAK,UAAU,KAAK;AACzD,UAAA,iBAAiB,CAAC,SAAe,MAAM,gBAAgB,SAAY,QAAQ,CAAC,MAAM,YAAY,IAAI;AAClG,UAAA,gBAAgB,CAAC,SAAe;AAChC,UAAA,MAAM,aAAa,QAAW;AAChC,eAAO,KAAK,aAAa,KAAK,KAAK,OAAa,MAAA;AAAA,MAClD;AAEO,aAAA,MAAM,SAAS,IAAI;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}