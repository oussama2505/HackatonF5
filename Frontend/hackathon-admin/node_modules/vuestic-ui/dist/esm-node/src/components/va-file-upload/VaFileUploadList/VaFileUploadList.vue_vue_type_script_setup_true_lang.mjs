import { defineComponent, computed, openBlock, createBlock, unref, normalizeClass, withCtx, createElementBlock, Fragment, renderList, mergeProps, createCommentVNode } from "vue";
import { V as VaFileUploadListItem } from "../VaFileUploadListItem/index.mjs";
import { V as VaFileUploadGalleryItem } from "../VaFileUploadGalleryItem/index.mjs";
import { V as VaFileUploadSingleItem } from "../VaFileUploadSingleItem/index.mjs";
import { b as VaList } from "../../va-list/index.mjs";
import { e as extractComponentProps } from "../../../utils/component-options/extract-component-options.mjs";
import { f as filterComponentProps } from "../../../utils/component-options/filter-props.mjs";
const VaFileUploadGalleryItemProps = extractComponentProps(VaFileUploadGalleryItem);
const VaFileUploadListItemProps = extractComponentProps(VaFileUploadListItem);
const VaFileUploadSingleItemProps = extractComponentProps(VaFileUploadSingleItem);
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaFileUploadList"
  },
  __name: "VaFileUploadList",
  props: {
    type: { type: String, default: "" },
    files: { type: Array, default: null },
    ...VaFileUploadGalleryItemProps,
    ...VaFileUploadListItemProps,
    ...VaFileUploadSingleItemProps
  },
  emits: ["remove", "removeSingle"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const filesList = computed(() => props.files.map(convertFile));
    const convertFile = (file) => ({
      name: file.name || file.url || "",
      size: formatSize(file.size),
      date: formatDate(/* @__PURE__ */ new Date()),
      image: file
    });
    const formatSize = (bytes) => {
      if (bytes === 0) {
        return "0 Bytes";
      }
      if (!bytes) {
        return "";
      }
      const k = 1024;
      const sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i];
    };
    const formatDate = (date = /* @__PURE__ */ new Date()) => {
      return date.toLocaleDateString("en-US", {
        hour: "2-digit",
        minute: "2-digit",
        month: "short",
        day: "numeric",
        year: "numeric"
      });
    };
    const galleryItemProps = filterComponentProps(VaFileUploadGalleryItemProps);
    const itemProps = filterComponentProps(VaFileUploadListItemProps);
    const singleItemProps = filterComponentProps(VaFileUploadSingleItemProps);
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(VaList), {
        class: normalizeClass(["va-file-upload-list", `va-file-upload-list--${__props.type}`]),
        role: __props.type !== "single" ? "list" : void 0
      }, {
        default: withCtx(() => [
          __props.type === "list" ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(filesList.value, (file, index) => {
            return openBlock(), createBlock(unref(VaFileUploadListItem), mergeProps({
              key: file.name
            }, unref(itemProps), {
              file,
              role: "listitem",
              onRemove: ($event) => _ctx.$emit("remove", index)
            }), null, 16, ["file", "onRemove"]);
          }), 128)) : createCommentVNode("", true),
          __props.type === "gallery" ? (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(filesList.value, (file, index) => {
            return openBlock(), createBlock(unref(VaFileUploadGalleryItem), mergeProps(unref(galleryItemProps), {
              key: file.name,
              file,
              role: "listitem",
              onRemove: ($event) => _ctx.$emit("remove", index)
            }), null, 16, ["file", "onRemove"]);
          }), 128)) : createCommentVNode("", true),
          __props.type === "single" && filesList.value.length ? (openBlock(), createBlock(unref(VaFileUploadSingleItem), mergeProps({ key: 2 }, unref(singleItemProps), {
            file: filesList.value[filesList.value.length - 1],
            onRemove: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("removeSingle"))
          }), null, 16, ["file"])) : createCommentVNode("", true)
        ]),
        _: 1
      }, 8, ["role", "class"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaFileUploadList.vue_vue_type_script_setup_true_lang.mjs.map
