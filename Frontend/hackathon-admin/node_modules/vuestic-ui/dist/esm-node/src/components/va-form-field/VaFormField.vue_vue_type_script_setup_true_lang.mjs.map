{"version":3,"file":"VaFormField.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../src/components/va-form-field/VaFormField.vue"],"sourcesContent":["<template>\n  <VaMessageList\n    :model-value=\"messagesComputed\"\n    :has-error=\"!isValid\"\n    :color=\"messagesColor\"\n  >\n    <template v-for=\"name in ['message', 'messages']\" :key=\"name\" v-slot:[name]=\"slotScope\">\n      <slot :name=\"name\" v-bind=\"slotScope\" />\n    </template>\n\n    <template #default=\"{ ariaAttributes, attrs }\">\n      <slot v-bind=\"{\n        error: computedError,\n        errorMessages: messagesComputed,\n        messages: messagesComputed,\n        validate,\n        isDirty,\n        isLoading,\n        isValid,\n        resetValidation,\n        validationAriaAttributes,\n        ...listeners,\n        value: makeSlotRef(),\n        modelValue: makeSlotRef(),\n        ariaAttributes,\n        bind: {\n          ...attrs,\n          ...ariaAttributes,\n          ...listeners,\n        }\n      }\" />\n    </template>\n  </VaMessageList>\n</template>\n\n<script setup lang=\"ts\" generic=\"T\">\nimport { computed, ref, watchEffect } from 'vue'\nimport { VaMessageList } from '../va-message-list'\nimport { useValidation, useStateful } from '../../composables'\nimport { ValidationProps, validationPropsDefaults, ValidationEmits } from '../../composables/useValidation.props'\nimport { StatefulProps, statefulPropsDefaults, StatefulEmits } from '../../composables/useStateful.props'\n\ntype Props = StatefulProps<T> & ValidationProps<T> & {\n  clearValue?: T\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  ...statefulPropsDefaults,\n  ...validationPropsDefaults,\n})\n\nconst emit = defineEmits<ValidationEmits & StatefulEmits<T>>()\n\nconst { valueComputed } = useStateful(props, emit, 'modelValue')\n\nconst reset = () => {\n  valueComputed.value = (props.clearValue as any)\n}\n\nconst focus = () => {\n  //\n}\n\nconst {\n  computedError,\n  computedErrorMessages,\n  validate,\n  isDirty,\n  isLoading,\n  isValid,\n  resetValidation,\n  validationAriaAttributes,\n  listeners,\n} = useValidation(props, emit, {\n  reset,\n  focus,\n  value: valueComputed,\n})\n\nconst messagesComputed = computed(() => computedError.value ? computedErrorMessages.value : props.messages)\nconst messagesColor = computed(() => {\n  if (!isValid.value) { return 'danger' }\n  if (props.success) { return 'success' }\n\n  return ''\n})\n\nconst innerValue = ref(valueComputed.value)\n\nwatchEffect(() => {\n  innerValue.value = valueComputed.value as unknown as any\n})\n\nconst makeSlotRef = () => {\n  return new Proxy(innerValue, {\n    get (v, key) {\n      if (key === 'ref') {\n        return innerValue.value\n      }\n\n      return Reflect.get(v, key)\n    },\n    set (_, key, value) {\n      if (key === 'ref') {\n        innerValue.value = value\n        valueComputed.value = value\n        return true\n      }\n\n      return Reflect.set(valueComputed, key, value)\n    },\n  }) as typeof valueComputed & { ref: T }\n}\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,UAAM,QAAQ;AAKd,UAAM,OAAO;AAEb,UAAM,EAAE,cAAc,IAAI,YAAY,OAAO,MAAM,YAAY;AAE/D,UAAM,QAAQ,MAAM;AAClB,oBAAc,QAAS,MAAM;AAAA,IAAA;AAG/B,UAAM,QAAQ,MAAM;AAAA,IAAA;AAId,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,IACE,cAAc,OAAO,MAAM;AAAA,MAC7B;AAAA,MACA;AAAA,MACA,OAAO;AAAA,IAAA,CACR;AAEK,UAAA,mBAAmB,SAAS,MAAM,cAAc,QAAQ,sBAAsB,QAAQ,MAAM,QAAQ;AACpG,UAAA,gBAAgB,SAAS,MAAM;AAC/B,UAAA,CAAC,QAAQ,OAAO;AAAS,eAAA;AAAA,MAAS;AACtC,UAAI,MAAM,SAAS;AAAS,eAAA;AAAA,MAAU;AAE/B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,aAAa,IAAI,cAAc,KAAK;AAE1C,gBAAY,MAAM;AAChB,iBAAW,QAAQ,cAAc;AAAA,IAAA,CAClC;AAED,UAAM,cAAc,MAAM;AACjB,aAAA,IAAI,MAAM,YAAY;AAAA,QAC3B,IAAK,GAAG,KAAK;AACX,cAAI,QAAQ,OAAO;AACjB,mBAAO,WAAW;AAAA,UACpB;AAEO,iBAAA,QAAQ,IAAI,GAAG,GAAG;AAAA,QAC3B;AAAA,QACA,IAAK,GAAG,KAAK,OAAO;AAClB,cAAI,QAAQ,OAAO;AACjB,uBAAW,QAAQ;AACnB,0BAAc,QAAQ;AACf,mBAAA;AAAA,UACT;AAEA,iBAAO,QAAQ,IAAI,eAAe,KAAK,KAAK;AAAA,QAC9C;AAAA,MAAA,CACD;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}