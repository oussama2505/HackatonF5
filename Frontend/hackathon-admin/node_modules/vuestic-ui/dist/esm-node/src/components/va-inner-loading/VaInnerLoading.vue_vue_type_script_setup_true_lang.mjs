import { defineComponent, computed, openBlock, createElementBlock, mergeProps, renderSlot, createVNode, unref, createCommentVNode } from "vue";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.mjs";
import { V as VaIcon } from "../va-icon/index.mjs";
import { u as useLoadingProps } from "../../composables/useLoading.mjs";
import { u as useColors } from "../../composables/useColors.mjs";
const _hoisted_1 = {
  key: 0,
  class: "va-inner-loading__overlay",
  "aria-hidden": "true"
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaInnerLoading"
  },
  __name: "VaInnerLoading",
  props: {
    ...useLoadingProps,
    ...useComponentPresetProp,
    color: { type: String },
    icon: { type: String, default: "va-loading" },
    size: { type: [Number, String], default: 30 }
  },
  setup(__props) {
    const props = __props;
    const { getColor } = useColors();
    const colorComputed = computed(() => getColor(props.color));
    const computedClass = computed(() => ({
      "va-inner-loading--active": props.loading
    }));
    const ariaAttributesComputed = computed(() => ({
      "aria-busy": props.loading
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", mergeProps({
        class: ["va-inner-loading", computedClass.value],
        "aria-live": "polite"
      }, ariaAttributesComputed.value), [
        renderSlot(_ctx.$slots, "default"),
        _ctx.$props.loading ? (openBlock(), createElementBlock("div", _hoisted_1, [
          renderSlot(_ctx.$slots, "loading", {}, () => [
            createVNode(unref(VaIcon), {
              class: "va-inner-loading__spinner",
              spin: "counter-clockwise",
              color: colorComputed.value,
              size: _ctx.$props.size,
              name: _ctx.$props.icon
            }, null, 8, ["color", "size", "name"])
          ])
        ])) : createCommentVNode("", true)
      ], 16);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaInnerLoading.vue_vue_type_script_setup_true_lang.mjs.map
