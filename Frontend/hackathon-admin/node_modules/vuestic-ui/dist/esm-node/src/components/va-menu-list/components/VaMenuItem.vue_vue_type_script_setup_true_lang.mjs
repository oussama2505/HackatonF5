import { defineComponent, openBlock, createElementBlock, mergeProps, unref, toHandlers, withKeys, createElementVNode, renderSlot, createBlock, createCommentVNode, toDisplayString } from "vue";
import { V as VaIcon } from "../../va-icon/index.mjs";
import { a as makeMenuItemAttributes } from "../composables/useMenuKeyboardNavigation.mjs";
import { a as useKeyboardOnlyFocusGlobal } from "../../../composables/useKeyboardOnlyFocus.mjs";
const _hoisted_1 = { class: "va-menu-item__cell va-menu-item__cell--left" };
const _hoisted_2 = { class: "va-menu-item__cell va-menu-item__cell--center" };
const _hoisted_3 = { class: "va-menu-item__content" };
const _hoisted_4 = { class: "va-menu-item__cell va-menu-item__cell--right" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaMenuItem"
  },
  __name: "VaMenuItem",
  props: {
    name: { type: String, default: "" },
    icon: { type: String, defatult: "" },
    rightIcon: { type: String, defatult: "" },
    disabled: { type: Boolean, default: false }
  },
  emits: ["selected"],
  setup(__props, { emit: __emit }) {
    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocusGlobal();
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("tr", mergeProps({ class: "va-menu-item" }, unref(makeMenuItemAttributes)({ disabled: __props.disabled }), toHandlers(unref(keyboardFocusListeners), true), {
        class: {
          "va-menu-item--disabled": __props.disabled,
          "va-menu-item--keyboard-focus": unref(hasKeyboardFocus)
        },
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("selected")),
        onKeydown: _cache[1] || (_cache[1] = withKeys(($event) => _ctx.$emit("selected"), ["enter", "space"]))
      }), [
        createElementVNode("td", _hoisted_1, [
          renderSlot(_ctx.$slots, "left-icon", {}, () => [
            __props.icon ? (openBlock(), createBlock(unref(VaIcon), {
              key: 0,
              class: "va-menu-item__icon--left",
              name: __props.icon
            }, null, 8, ["name"])) : createCommentVNode("", true)
          ])
        ]),
        createElementVNode("td", _hoisted_2, [
          renderSlot(_ctx.$slots, "default", {}, () => [
            createElementVNode("a", _hoisted_3, toDisplayString(__props.name), 1)
          ])
        ]),
        createElementVNode("td", _hoisted_4, [
          renderSlot(_ctx.$slots, "right-icon", {}, () => [
            __props.rightIcon ? (openBlock(), createBlock(unref(VaIcon), {
              key: 0,
              class: "va-menu-item__icon--right",
              name: __props.rightIcon
            }, null, 8, ["name"])) : createCommentVNode("", true)
          ])
        ])
      ], 16);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaMenuItem.vue_vue_type_script_setup_true_lang.mjs.map
