{"version":3,"file":"VaMessageList.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../src/components/va-message-list/VaMessageList.vue"],"sourcesContent":["<template>\n  <slot v-bind=\"{ ariaAttributes: childAttributes, messages, attrs: $attrs }\" />\n  <slot name=\"messages\" v-bind=\"{ ariaAttributes: messageListAttributes, messages }\">\n    <div\n      v-if=\"messages.length > 0\"\n      class=\"va-message-list\"\n      :style=\"computedStyle\"\n      v-bind=\"messageListAttributes\"\n    >\n      <ul class=\"va-message-list__list\">\n        <li\n          v-for=\"(message, index) in messages\"\n          :key=\"index\"\n          class=\"va-message-list__message\"\n        >\n          <slot name=\"message\" v-bind=\"{ messages, message }\">\n            <va-icon\n              v-if=\"hasError\"\n              class=\"va-message-list__icon\"\n              name=\"va-warning\"\n              :size=\"16\"\n            />{{ message }}\n          </slot>\n        </li>\n      </ul>\n    </div>\n  </slot>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ComputedRef, PropType } from 'vue'\n\nimport { useColors, useNumericProp } from '../../composables'\n\nimport { VaIcon } from '../va-icon'\nimport { useMessageListAria } from './hooks/useMessageListAria'\n\ndefineOptions({\n  name: 'VaMessageList',\n  inheritAttrs: false,\n})\n\nconst props = defineProps({\n  modelValue: {\n    type: [String, Array] as PropType<string | string[]>,\n    default: '',\n  },\n  limit: { type: [Number, String], default: 1 },\n  color: { type: String },\n  hasError: { type: Boolean, default: false },\n})\n\nconst { getColor } = useColors()\n\nconst { childAttributes, messageListAttributes } = useMessageListAria(props)\n\nconst limitComputed = useNumericProp('limit') as ComputedRef<number>\nconst messages = computed<string[]>(() => {\n  if (!props.modelValue) { return [] }\n  if (!Array.isArray(props.modelValue)) { return [props.modelValue] }\n  return props.modelValue.slice(0, limitComputed.value)\n})\n\nconst computedStyle = computed(() => props.color ? { color: getColor(props.color) } : {})\n\ndefineExpose({\n  messages,\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-message-list {\n  color: var(--va-message-list-color);\n  list-style: none;\n\n  &__message {\n    display: flex;\n    align-items: center;\n    font-size: var(--va-message-list-font-size);\n    line-height: var(--va-message-list-line-height);\n  }\n\n  &__icon {\n    margin-right: var(--va-message-list-icon-margin-right);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA0CA,UAAM,QAAQ;AAUR,UAAA,EAAE,aAAa;AAErB,UAAM,EAAE,iBAAiB,sBAAsB,IAAI,mBAAmB,KAAK;AAErE,UAAA,gBAAgB,eAAe,OAAO;AACtC,UAAA,WAAW,SAAmB,MAAM;AACpC,UAAA,CAAC,MAAM,YAAY;AAAE,eAAO;MAAG;AACnC,UAAI,CAAC,MAAM,QAAQ,MAAM,UAAU,GAAG;AAAS,eAAA,CAAC,MAAM,UAAU;AAAA,MAAE;AAClE,aAAO,MAAM,WAAW,MAAM,GAAG,cAAc,KAAK;AAAA,IAAA,CACrD;AAED,UAAM,gBAAgB,SAAS,MAAM,MAAM,QAAQ,EAAE,OAAO,SAAS,MAAM,KAAK,EAAE,IAAI,CAAE,CAAA;AAE3E,aAAA;AAAA,MACX;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}