{"version":3,"file":"VaMessageListWrapper.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../src/components/va-message-list/VaMessageListWrapper.vue"],"sourcesContent":["<template>\n  <div class=\"va-message-list-wrapper\">\n    <va-message-list\n      :color=\"messagesColor\"\n      :limit=\"errorLimit\"\n      :has-error=\"hasError\"\n      :model-value=\"messagesComputed\"\n      :inherit-slots=\"['message']\"\n    >\n      <template #default=\"bind\">\n        <slot name=\"default\" v-bind=\"bind\" />\n      </template>\n    </va-message-list>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, toRef } from 'vue'\n\nimport { useValidationProps } from '../../composables'\n\nimport { VaMessageList } from './VaMessageList'\nimport { WithSlotInheritance } from '../../utils/with-slot-inheritance'\n\ndefineOptions({\n  name: 'VaMessageListWrapper',\n})\n\nconst props = defineProps({\n  ...useValidationProps,\n})\n\nconst messagesColor = computed(() => {\n  if (props.error) { return 'danger' }\n  if (props.success) { return 'success' }\n  return ''\n})\n\nconst hasError = toRef(props, 'error')\nconst messagesComputed = computed(() => props.error ? props.errorMessages : props.messages)\nconst errorLimit = computed(() => props.error ? Number(props.errorCount) : 99)\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-message-list-wrapper {\n  .va-message-list {\n    margin-top: var(--va-message-wrapper-margin-top);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;AA4BA,UAAM,QAAQ;AAIR,UAAA,gBAAgB,SAAS,MAAM;AACnC,UAAI,MAAM,OAAO;AAAS,eAAA;AAAA,MAAS;AACnC,UAAI,MAAM,SAAS;AAAS,eAAA;AAAA,MAAU;AAC/B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,WAAW,MAAM,OAAO,OAAO;AAC/B,UAAA,mBAAmB,SAAS,MAAM,MAAM,QAAQ,MAAM,gBAAgB,MAAM,QAAQ;AACpF,UAAA,aAAa,SAAS,MAAM,MAAM,QAAQ,OAAO,MAAM,UAAU,IAAI,EAAE;;;;;;;;;;;;;;;;;;;"}