{"version":3,"file":"VaOptionList.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../src/components/va-option-list/VaOptionList.vue"],"sourcesContent":["<template>\n  <VaMessageListWrapper\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <ul class=\"va-option-list__list\">\n      <li\n        v-for=\"option in $props.options\"\n        :key=\"getTrackBy(option)\"\n      >\n        <slot v-bind=\"{ option, selectedValue, isDisabled, getText, getValue }\">\n          <va-radio\n            v-if=\"$props.type === 'radio'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :option=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-checkbox\n            v-else-if=\"$props.type === 'checkbox'\"\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n          <va-switch\n            v-else\n            :ref=\"setItemRef\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :array-value=\"getValue(option)\"\n            v-bind=\"computedProps\"\n          />\n        </slot>\n      </li>\n    </ul>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, PropType, onMounted } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport {\n  useComponentPresetProp,\n  useSelectableList, useSelectableListProps, SelectableOption,\n  useValidation, useValidationProps,\n  useStateful, useStatefulProps, useStatefulEmits,\n  useArrayRefs,\n  useValidationEmits,\n} from '../../composables'\n\nimport { isDev } from '../../utils/env'\n\nimport { VaMessageListWrapper } from '../va-message-list'\nimport { VaCheckbox } from '../va-checkbox'\nimport { VaRadio } from '../va-radio'\nimport { VaSwitch } from '../va-switch'\n\ntype OptionListValue = SelectableOption | SelectableOption[] | null\n</script>\n\n<script lang=\"ts\" setup>\n\ndefineOptions({\n  name: 'VaOptionList',\n})\n\nconst props = defineProps({\n  ...useComponentPresetProp,\n  ...useSelectableListProps,\n  ...useValidationProps,\n  ...useStatefulProps,\n  type: {\n    type: String as PropType<'radio' | 'checkbox' | 'switch'>,\n    default: 'checkbox',\n    validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\n  },\n  disabled: ({ type: Boolean, default: false }),\n  readonly: ({ type: Boolean, default: false }),\n  defaultValue: ({ type: [String, Number, Boolean, Object, Array] as PropType<OptionListValue | null> }),\n  name: ({ type: String, default: '' }),\n  color: ({ type: String, default: 'primary' }),\n  leftLabel: ({ type: Boolean, default: false }),\n  modelValue: ({ type: [String, Number, Boolean, Object, Array] as PropType<OptionListValue | null> }),\n})\n\nconst emit = defineEmits([...useStatefulEmits, ...useValidationEmits, 'clear'])\n\nconst { valueComputed } = useStateful(props, emit, 'modelValue', { defaultValue: props.defaultValue })\n\nconst { getValue, getText, getTrackBy, getDisabled } = useSelectableList(props)\n\nconst { itemRefs, setItemRef } = useArrayRefs()\n\nconst isRadio = computed(() => props.type === 'radio')\n\nconst selectedValue = computed({\n  get () {\n    const value = isRadio.value ? null : []\n\n    return valueComputed.value || value as OptionListValue\n  },\n  set (value: OptionListValue) {\n    if (props.readonly) { return }\n\n    if (isRadio.value && !Array.isArray(value)) {\n      valueComputed.value = value ? getValue(value) : value\n    } else {\n      valueComputed.value = Array.isArray(value)\n        ? value.map(getValue)\n        : [value ? getValue(value) : value]\n    }\n  },\n})\n\nconst isDisabled = (option: SelectableOption) => props.disabled || getDisabled(option)\n\nconst reset = () => withoutValidation(() => {\n  valueComputed.value = null\n  emit('clear')\n  resetValidation()\n})\n\nconst focus = () => {\n  const firstActiveEl = Array.isArray(itemRefs.value) && itemRefs.value.find(el => !(el as HTMLInputElement).disabled)\n\n  if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\n    firstActiveEl.focus()\n  }\n}\n\nconst {\n  computedError,\n  computedErrorMessages,\n  withoutValidation,\n  resetValidation,\n} = useValidation(props, emit, { reset, focus, value: valueComputed })\n\nconst computedProps = computed(() => pick(props, ['name', 'color', 'readonly', 'leftLabel']))\n\nonMounted(() => {\n  if (isDev && props.type !== 'radio' && !Array.isArray(props.modelValue)) {\n    console.warn(`Prop 'modelValue = ${props.modelValue}' has not a proper type!\\n For component property 'type = ${props.type}' it must be of type 'array'.`)\n  }\n})\n\ndefineExpose({\n  focus,\n  reset,\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-option-list {\n  &__list {\n    line-height: var(--va-option-list-line-height);\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    vertical-align: baseline;\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA,UAAM,QAAQ;AAmBd,UAAM,OAAO;AAEP,UAAA,EAAE,cAAc,IAAI,YAAY,OAAO,MAAM,cAAc,EAAE,cAAc,MAAM,aAAc,CAAA;AAErG,UAAM,EAAE,UAAU,SAAS,YAAY,gBAAgB,kBAAkB,KAAK;AAE9E,UAAM,EAAE,UAAU,WAAW,IAAI,aAAa;AAE9C,UAAM,UAAU,SAAS,MAAM,MAAM,SAAS,OAAO;AAErD,UAAM,gBAAgB,SAAS;AAAA,MAC7B,MAAO;AACL,cAAM,QAAQ,QAAQ,QAAQ,OAAO,CAAA;AAErC,eAAO,cAAc,SAAS;AAAA,MAChC;AAAA,MACA,IAAK,OAAwB;AAC3B,YAAI,MAAM,UAAU;AAAE;AAAA,QAAO;AAE7B,YAAI,QAAQ,SAAS,CAAC,MAAM,QAAQ,KAAK,GAAG;AAC1C,wBAAc,QAAQ,QAAQ,SAAS,KAAK,IAAI;AAAA,QAAA,OAC3C;AACL,wBAAc,QAAQ,MAAM,QAAQ,KAAK,IACrC,MAAM,IAAI,QAAQ,IAClB,CAAC,QAAQ,SAAS,KAAK,IAAI,KAAK;AAAA,QACtC;AAAA,MACF;AAAA,IAAA,CACD;AAED,UAAM,aAAa,CAAC,WAA6B,MAAM,YAAY,YAAY,MAAM;AAE/E,UAAA,QAAQ,MAAM,kBAAkB,MAAM;AAC1C,oBAAc,QAAQ;AACtB,WAAK,OAAO;AACI;IAAA,CACjB;AAED,UAAM,QAAQ,MAAM;AAClB,YAAM,gBAAgB,MAAM,QAAQ,SAAS,KAAK,KAAK,SAAS,MAAM,KAAK,CAAA,OAAM,CAAE,GAAwB,QAAQ;AAEnH,UAAI,iBAAiB,OAAO,cAAc,UAAU,YAAY;AAC9D,sBAAc,MAAM;AAAA,MACtB;AAAA,IAAA;AAGI,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,IACE,cAAc,OAAO,MAAM,EAAE,OAAO,OAAO,OAAO,cAAA,CAAe;AAE/D,UAAA,gBAAgB,SAAS,MAAM,KAAK,OAAO,CAAC,QAAQ,SAAS,YAAY,WAAW,CAAC,CAAC;AAE5F,cAAU,MAAM;AACV,UAAA,SAAS,MAAM,SAAS,WAAW,CAAC,MAAM,QAAQ,MAAM,UAAU,GAAG;AAC/D,gBAAA,KAAK,sBAAsB,MAAM,UAAU;AAAA,kCAA6D,MAAM,IAAI,+BAA+B;AAAA,MAC3J;AAAA,IAAA,CACD;AAEY,aAAA;AAAA,MACX;AAAA,MACA;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}