{"version":3,"file":"VaProgressCircle.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../src/components/va-progress-circle/VaProgressCircle.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-progress-circle\"\n    :style=\"rootStyle\"\n    :class=\"rootClass\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <svg\n      class=\"va-progress-circle__wrapper\"\n      viewBox=\"0 0 40 40\"\n    >\n      <circle\n        class=\"va-progress-circle__overlay\"\n        cx=\"50%\"\n        cy=\"50%\"\n        :r=\"radius\"\n        fill=\"none\"\n        :stroke=\"colorComputed\"\n        :stroke-width=\"cappedThickness + '%'\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n    </svg>\n    <div\n      v-if=\"$slots.default\"\n      :style=\"infoStyle\"\n      class=\"va-progress-circle__info\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport clamp from 'lodash/clamp.js'\n\nimport { useComponentPresetProp, useColors, useSize, useSizeProps, useTranslation, useTranslationProp } from '../../composables'\n\ndefineOptions({\n  name: 'VaProgressCircle',\n})\n\nconst props = defineProps({\n  ...useSizeProps,\n  ...useComponentPresetProp,\n  modelValue: { type: [Number, String], default: 0 },\n  indeterminate: { type: Boolean, default: false },\n  thickness: { type: [Number, String], default: 0.06 },\n  color: { type: String, default: 'primary' },\n  ariaLabel: useTranslationProp('$t:progressState'),\n})\n\nconst { getColor } = useColors()\nconst { sizeComputed } = useSize(props)\n\nconst cappedThickness = computed(() => clamp(Number(props.thickness), 0, 1) / 2 * 100)\n\nconst radius = computed(() => 20 - (20 * cappedThickness.value / 100))\nconst dasharray = computed(() => 2 * Math.PI * radius.value)\nconst dashoffset = computed(() => dasharray.value * (1 - clamp(Number(props.modelValue), 0, 100) / 100))\nconst colorComputed = computed(() => getColor(props.color, undefined, true))\n\nconst { tp } = useTranslation()\n\nconst infoStyle = computed(() => ({ color: colorComputed.value }))\n\nconst rootStyle = computed(() => ({\n  width: sizeComputed.value,\n  height: sizeComputed.value,\n}))\n\nconst rootClass = computed(() => ({\n  'va-progress-circle--indeterminate': props.indeterminate,\n}))\n\nconst ariaAttributesComputed = computed(() => ({\n  role: 'progressbar',\n  'aria-label': tp(props.ariaLabel),\n  'aria-valuenow': !props.indeterminate ? props.modelValue : undefined,\n}))\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-progress-circle {\n  position: var(--va-progress-circle-position);\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    margin: auto;\n    transform: rotate(-90deg);\n    width: var(--va-progress-circle-width);\n    height: var(--va-progress-circle-height);\n\n    @include flex-center();\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\n      }\n    }\n  }\n\n  &__overlay {\n    transition: var(--va-progress-circle-overlay-transition);\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\n      }\n    }\n  }\n\n  &__info {\n    font-size: var(--va-progress-circle-font-size);\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n@keyframes va-progress-circle__wrapper--indeterminate {\n  100% {\n    transform: rotate(270deg);\n  }\n}\n\n@keyframes va-progress-circle__overlay--indeterminate {\n  0% {\n    stroke-dasharray: 1, 125;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -65px;\n  }\n\n  100% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -125px;\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,UAAM,QAAQ;AAUR,UAAA,EAAE,aAAa;AACrB,UAAM,EAAE,aAAA,IAAiB,QAAQ,KAAK;AAEtC,UAAM,kBAAkB,SAAS,MAAM,MAAM,OAAO,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG;AAErF,UAAM,SAAS,SAAS,MAAM,KAAM,KAAK,gBAAgB,QAAQ,GAAI;AACrE,UAAM,YAAY,SAAS,MAAM,IAAI,KAAK,KAAK,OAAO,KAAK;AAC3D,UAAM,aAAa,SAAS,MAAM,UAAU,SAAS,IAAI,MAAM,OAAO,MAAM,UAAU,GAAG,GAAG,GAAG,IAAI,IAAI;AACjG,UAAA,gBAAgB,SAAS,MAAM,SAAS,MAAM,OAAO,QAAW,IAAI,CAAC;AAErE,UAAA,EAAE,OAAO;AAEf,UAAM,YAAY,SAAS,OAAO,EAAE,OAAO,cAAc,MAAQ,EAAA;AAE3D,UAAA,YAAY,SAAS,OAAO;AAAA,MAChC,OAAO,aAAa;AAAA,MACpB,QAAQ,aAAa;AAAA,IACrB,EAAA;AAEI,UAAA,YAAY,SAAS,OAAO;AAAA,MAChC,qCAAqC,MAAM;AAAA,IAC3C,EAAA;AAEI,UAAA,yBAAyB,SAAS,OAAO;AAAA,MAC7C,MAAM;AAAA,MACN,cAAc,GAAG,MAAM,SAAS;AAAA,MAChC,iBAAiB,CAAC,MAAM,gBAAgB,MAAM,aAAa;AAAA,IAC3D,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}