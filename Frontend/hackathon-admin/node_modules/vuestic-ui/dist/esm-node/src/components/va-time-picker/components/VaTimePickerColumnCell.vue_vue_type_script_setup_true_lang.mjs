import { defineComponent, computed, openBlock, createElementBlock, unref, normalizeStyle, renderSlot } from "vue";
import { u as useHover } from "../../../composables/useHover.mjs";
import { u as useColors } from "../../../composables/useColors.mjs";
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaTimePickerColumnCell"
  },
  __name: "VaTimePickerColumnCell",
  setup(__props) {
    const { isHovered, onMouseEnter, onMouseLeave } = useHover();
    const { getTextColor, getColor } = useColors();
    const styleComputed = computed(() => isHovered.value ? {
      color: getColor(getTextColor(getColor("background-secondary"))),
      background: getColor("background-secondary")
    } : void 0);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        onMouseenter: _cache[0] || (_cache[0] = //@ts-ignore
        (...args) => unref(onMouseEnter) && unref(onMouseEnter)(...args)),
        onMouseleave: _cache[1] || (_cache[1] = //@ts-ignore
        (...args) => unref(onMouseLeave) && unref(onMouseLeave)(...args)),
        style: normalizeStyle(styleComputed.value)
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 36);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaTimePickerColumnCell.vue_vue_type_script_setup_true_lang.mjs.map
