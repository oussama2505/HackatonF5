export declare const VaCollapse: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        modelValue: {
            type: BooleanConstructor;
            default: boolean;
        };
        disabled: {
            type: BooleanConstructor;
            default: boolean;
        };
        header: {
            type: StringConstructor;
            default: string;
        };
        icon: {
            type: StringConstructor;
            default: string;
        };
        color: {
            type: StringConstructor;
            default: undefined;
        };
        bodyColor: {
            type: StringConstructor;
            default: undefined;
        };
        textColor: {
            type: StringConstructor;
            default: string;
        };
        bodyTextColor: {
            type: StringConstructor;
            default: string;
        };
        iconColor: {
            type: StringConstructor;
            default: string;
        };
        colorAll: {
            type: BooleanConstructor;
            default: boolean;
        };
        stateful: {
            type: BooleanConstructor;
            default: boolean;
        };
        preset: {
            type: StringConstructor;
            default: undefined;
        };
    }>>, {
        toggle: () => void;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
        [x: string]: (...args: any[]) => void;
    }, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        modelValue: {
            type: BooleanConstructor;
            default: boolean;
        };
        disabled: {
            type: BooleanConstructor;
            default: boolean;
        };
        header: {
            type: StringConstructor;
            default: string;
        };
        icon: {
            type: StringConstructor;
            default: string;
        };
        color: {
            type: StringConstructor;
            default: undefined;
        };
        bodyColor: {
            type: StringConstructor;
            default: undefined;
        };
        textColor: {
            type: StringConstructor;
            default: string;
        };
        bodyTextColor: {
            type: StringConstructor;
            default: string;
        };
        iconColor: {
            type: StringConstructor;
            default: string;
        };
        colorAll: {
            type: BooleanConstructor;
            default: boolean;
        };
        stateful: {
            type: BooleanConstructor;
            default: boolean;
        };
        preset: {
            type: StringConstructor;
            default: undefined;
        };
    }>>, {
        header: string;
        preset: string;
        disabled: boolean;
        modelValue: boolean;
        stateful: boolean;
        color: string;
        textColor: string;
        icon: string;
        iconColor: string;
        bodyColor: string;
        bodyTextColor: string;
        colorAll: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        modelValue: {
            type: BooleanConstructor;
            default: boolean;
        };
        disabled: {
            type: BooleanConstructor;
            default: boolean;
        };
        header: {
            type: StringConstructor;
            default: string;
        };
        icon: {
            type: StringConstructor;
            default: string;
        };
        color: {
            type: StringConstructor;
            default: undefined;
        };
        bodyColor: {
            type: StringConstructor;
            default: undefined;
        };
        textColor: {
            type: StringConstructor;
            default: string;
        };
        bodyTextColor: {
            type: StringConstructor;
            default: string;
        };
        iconColor: {
            type: StringConstructor;
            default: string;
        };
        colorAll: {
            type: BooleanConstructor;
            default: boolean;
        };
        stateful: {
            type: BooleanConstructor;
            default: boolean;
        };
        preset: {
            type: StringConstructor;
            default: undefined;
        };
    }>>, {
        toggle: () => void;
    }, {}, {}, {}, {
        header: string;
        preset: string;
        disabled: boolean;
        modelValue: boolean;
        stateful: boolean;
        color: string;
        textColor: string;
        icon: string;
        iconColor: string;
        bodyColor: string;
        bodyTextColor: string;
        colorAll: boolean;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    header: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: StringConstructor;
        default: string;
    };
    color: {
        type: StringConstructor;
        default: undefined;
    };
    bodyColor: {
        type: StringConstructor;
        default: undefined;
    };
    textColor: {
        type: StringConstructor;
        default: string;
    };
    bodyTextColor: {
        type: StringConstructor;
        default: string;
    };
    iconColor: {
        type: StringConstructor;
        default: string;
    };
    colorAll: {
        type: BooleanConstructor;
        default: boolean;
    };
    stateful: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
}>>, {
    toggle: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    [x: string]: (...args: any[]) => void;
}, string, {
    header: string;
    preset: string;
    disabled: boolean;
    modelValue: boolean;
    stateful: boolean;
    color: string;
    textColor: string;
    icon: string;
    iconColor: string;
    bodyColor: string;
    bodyTextColor: string;
    colorAll: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: {
        header?(_: {
            value: boolean;
            bind: {
                id: string;
                tabindex: number;
                'aria-controls': string;
                'aria-expanded': boolean;
                'aria-disabled': boolean;
                role: string;
            };
            attributes: {
                id: string;
                tabindex: number;
                'aria-controls': string;
                'aria-expanded': boolean;
                'aria-disabled': boolean;
                role: string;
            };
            attrs: {
                id: string;
                tabindex: number;
                'aria-controls': string;
                'aria-expanded': boolean;
                'aria-disabled': boolean;
                role: string;
            };
            iconAttrs: {
                class: string[];
            };
            text: string;
        }): any;
        "header-content"?(_: {
            header: string;
        }): any;
        "expand-icon"?(_: {}): any;
        body?(_: {}): any;
        default?(_: {}): any;
        content?(_: {}): any;
    };
});
