import { Ref, PropType, ExtractPropTypes } from 'vue';
import type { DataTableItem, DataTableRow } from '../types';
export declare const usePaginatedRowsProps: {
    perPage: {
        type: PropType<number | undefined>;
    };
    currentPage: {
        type: PropType<number | undefined>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
        validator: (value: number) => boolean;
    };
};
type PaginatedProps<Item extends DataTableItem> = Omit<ExtractPropTypes<typeof usePaginatedRowsProps>, 'items'> & {
    items: Item[];
};
export declare const usePaginatedRows: <Item extends Record<string, any>>(sortedRows: Ref<DataTableRow<Item>[]>, props: PaginatedProps<Item>) => {
    paginatedRows: Ref<DataTableRow<Item>[]>;
};
export {};
