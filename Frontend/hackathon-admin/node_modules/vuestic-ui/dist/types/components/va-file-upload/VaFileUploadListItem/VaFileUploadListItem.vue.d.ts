import { PropType } from 'vue';
import { ConvertedFile } from '../types';
declare const _default: import("vue").DefineComponent<{
    file: {
        type: PropType<ConvertedFile | null>;
        default: null;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    ariaRemoveFileLabel: {
        type: PropType<import("../../../composables").TranslationProp>;
        default: import("../../../composables").TranslationProp;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    remove: (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    file: {
        type: PropType<ConvertedFile | null>;
        default: null;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    ariaRemoveFileLabel: {
        type: PropType<import("../../../composables").TranslationProp>;
        default: import("../../../composables").TranslationProp;
    };
}>> & {
    onRemove?: ((...args: any[]) => any) | undefined;
}, {
    color: string;
    file: ConvertedFile | null;
    ariaRemoveFileLabel: import("../../../composables").TranslationProp;
}, {}>;
export default _default;
