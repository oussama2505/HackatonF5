import { PropType } from 'vue';
import { VaMenuOption } from './types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    options: {
        type: PropType<VaMenuOption[]>;
        default: () => never[];
    };
    textBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
    valueBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
    trackBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
    disabledBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
    groupBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    selected: (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    options: {
        type: PropType<VaMenuOption[]>;
        default: () => never[];
    };
    textBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
    valueBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
    trackBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
    disabledBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
    groupBy: {
        type: PropType<import("../../composables").StringOrFunction>;
        default: string;
    };
}>> & {
    onSelected?: ((...args: any[]) => any) | undefined;
}, {
    options: VaMenuOption[];
    textBy: import("../../composables").StringOrFunction;
    valueBy: import("../../composables").StringOrFunction;
    trackBy: import("../../composables").StringOrFunction;
    disabledBy: import("../../composables").StringOrFunction;
    groupBy: import("../../composables").StringOrFunction;
}, {}>, {
    default?(_: {}): any;
    group?(_: {}): any;
    "left-icon"?(_: {}): any;
    "right-icon"?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
