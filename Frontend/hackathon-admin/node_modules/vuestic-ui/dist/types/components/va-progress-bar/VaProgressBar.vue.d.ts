import { PropType } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    indeterminate: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: PropType<string | number>;
        default: string;
    };
    buffer: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    rounded: {
        type: BooleanConstructor;
        default: boolean;
    };
    reverse: {
        type: BooleanConstructor;
        default: boolean;
    };
    contentInside: {
        type: BooleanConstructor;
        default: boolean;
    };
    showPercent: {
        type: BooleanConstructor;
        default: boolean;
    };
    max: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    ariaLabel: {
        type: PropType<import("../../composables").TranslationProp>;
        default: import("../../composables").TranslationProp;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    indeterminate: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: PropType<string | number>;
        default: string;
    };
    buffer: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    rounded: {
        type: BooleanConstructor;
        default: boolean;
    };
    reverse: {
        type: BooleanConstructor;
        default: boolean;
    };
    contentInside: {
        type: BooleanConstructor;
        default: boolean;
    };
    showPercent: {
        type: BooleanConstructor;
        default: boolean;
    };
    max: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    ariaLabel: {
        type: PropType<import("../../composables").TranslationProp>;
        default: import("../../composables").TranslationProp;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
}>>, {
    size: string | number;
    reverse: boolean;
    preset: string;
    ariaLabel: import("../../composables").TranslationProp;
    modelValue: string | number;
    color: string;
    indeterminate: boolean;
    max: string | number;
    rounded: boolean;
    buffer: string | number;
    contentInside: boolean;
    showPercent: boolean;
}, {}>, {
    default?(_: {
        value: string | number | undefined;
    }): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
