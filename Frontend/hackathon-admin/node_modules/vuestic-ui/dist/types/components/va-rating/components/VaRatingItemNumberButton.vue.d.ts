declare const _default: import("vue").DefineComponent<{
    itemNumber: {
        type: NumberConstructor;
        required: true;
    };
    modelValue: {
        type: NumberConstructor;
        required: true;
    };
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
        validator: (size: string | number) => boolean;
    };
    sizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        default: () => import("../../../services/global-config").SizeConfig;
    };
    fontSizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        default: () => import("../../../services/global-config").SizeConfig;
    };
    unselectedColor: {
        type: StringConstructor;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    itemNumber: {
        type: NumberConstructor;
        required: true;
    };
    modelValue: {
        type: NumberConstructor;
        required: true;
    };
    size: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
        validator: (size: string | number) => boolean;
    };
    sizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        default: () => import("../../../services/global-config").SizeConfig;
    };
    fontSizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        default: () => import("../../../services/global-config").SizeConfig;
    };
    unselectedColor: {
        type: StringConstructor;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    size: string | number;
    color: string;
    sizesConfig: Record<string, any>;
    fontSizesConfig: Record<string, any>;
}, {}>;
export default _default;
