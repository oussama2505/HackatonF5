import { PropType } from 'vue';
import type { Step, StepControls } from './types';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: NumberConstructor;
        required: true;
    };
    step: {
        type: PropType<Step>;
        required: true;
    };
    color: {
        type: StringConstructor;
        required: true;
    };
    stepIndex: {
        type: (StringConstructor | NumberConstructor)[];
        required: true;
    };
    navigationDisabled: {
        type: BooleanConstructor;
        required: true;
    };
    nextDisabled: {
        type: BooleanConstructor;
        required: true;
    };
    focus: {
        type: ObjectConstructor;
        required: true;
    };
    stepControls: {
        type: PropType<StepControls>;
        required: true;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: NumberConstructor;
        required: true;
    };
    step: {
        type: PropType<Step>;
        required: true;
    };
    color: {
        type: StringConstructor;
        required: true;
    };
    stepIndex: {
        type: (StringConstructor | NumberConstructor)[];
        required: true;
    };
    navigationDisabled: {
        type: BooleanConstructor;
        required: true;
    };
    nextDisabled: {
        type: BooleanConstructor;
        required: true;
    };
    focus: {
        type: ObjectConstructor;
        required: true;
    };
    stepControls: {
        type: PropType<StepControls>;
        required: true;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {}, {}>;
export default _default;
