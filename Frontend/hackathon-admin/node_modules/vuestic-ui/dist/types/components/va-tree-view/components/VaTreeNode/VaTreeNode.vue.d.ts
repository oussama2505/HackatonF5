import { PropType } from 'vue';
import { TreeNode } from '../../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    node: {
        type: PropType<TreeNode>;
        required: true;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    node: {
        type: PropType<TreeNode>;
        required: true;
    };
}>>, {}, {}>, Partial<Record<NonNullable<string | number>, (_: any) => any>> & {
    "icon-toggle"?(_: {
        [x: string]: any;
        id: string | number;
        level?: number | undefined;
        checked?: boolean | null | undefined;
        disabled?: boolean | undefined;
        expanded?: boolean | undefined;
        hasChildren?: boolean | undefined;
        matchesFilter?: boolean | undefined;
        indeterminate?: boolean | undefined;
    }): any;
    checkbox?(_: {
        [x: string]: any;
        id: string | number;
        level?: number | undefined;
        checked?: boolean | null | undefined;
        disabled?: boolean | undefined;
        expanded?: boolean | undefined;
        hasChildren?: boolean | undefined;
        matchesFilter?: boolean | undefined;
        indeterminate?: boolean | undefined;
    }): any;
    icon?(_: {
        [x: string]: any;
        id: string | number;
        level?: number | undefined;
        checked?: boolean | null | undefined;
        disabled?: boolean | undefined;
        expanded?: boolean | undefined;
        hasChildren?: boolean | undefined;
        matchesFilter?: boolean | undefined;
        indeterminate?: boolean | undefined;
    }): any;
    content?(_: {
        [x: string]: any;
        id: string | number;
        level?: number | undefined;
        checked?: boolean | null | undefined;
        disabled?: boolean | undefined;
        expanded?: boolean | undefined;
        hasChildren?: boolean | undefined;
        matchesFilter?: boolean | undefined;
        indeterminate?: boolean | undefined;
    }): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
