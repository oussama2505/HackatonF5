import type { DefineComponentOptions } from './types';
/** Extract all component props, from mixins and VueClassComponent */
export declare const getComponentProps: <T extends DefineComponentOptions>(component: T) => Omit<import("./types").ComponentProps<T>, "style" | "class" | keyof import("vue").VNodeProps> extends infer T_1 extends Record<string, any> ? { [K in keyof T_1]-?: {
    type: import("vue").PropType<NonNullable<Omit<import("./types").ComponentProps<T>, "style" | "class" | keyof import("vue").VNodeProps>[K]>>;
    required: true;
    default: Omit<import("./types").ComponentProps<T>, "style" | "class" | keyof import("vue").VNodeProps>[K];
}; } : never;
