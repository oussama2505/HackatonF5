{"version":3,"file":"VaAvatar.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-avatar/VaAvatar.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-avatar\"\n    :class=\"classesComputed\"\n    :style=\"computedStyle\"\n  >\n    <va-progress-circle\n      v-if=\"$props.loading\"\n      :size=\"sizeComputed\"\n      :color=\"colorComputed\"\n      indeterminate\n    />\n    <slot v-bind=\"avatarOptions\" v-else>\n      <img\n        v-if=\"$props.src && !hasLoadError\"\n        :src=\"$props.src\"\n        :alt=\"$props.alt\"\n        @error=\"onLoadError\"\n      >\n      <slot v-else-if=\"hasLoadError && $props.src\" name=\"fallback\">\n        <va-fallback v-bind=\"VaFallbackProps\" @fallback=\"$emit('fallback')\" />\n      </slot>\n      <va-icon\n        v-else-if=\"$props.icon\"\n        :name=\"$props.icon\"\n      />\n      <slot v-else name=\"fallback\">\n        <va-fallback v-bind=\"VaFallbackProps\" @fallback=\"$emit('fallback')\" />\n      </slot>\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, watch, computed } from 'vue'\nimport pick from 'lodash/pick'\n\nimport {\n  useBem,\n  useSize,\n  useColors,\n  useTextColor,\n  useSizeProps,\n  useLoadingProps,\n  useComponentPresetProp,\n} from '../../composables'\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nimport { VaIcon, VaProgressCircle, VaFallback } from '../index'\n\nconst VaFallbackPropsDeclaration = extractComponentProps(VaFallback)\n</script>\n\n<script lang=\"ts\" setup>\n\ndefineOptions({\n  name: 'VaAvatar',\n})\n\nconst props = defineProps({\n  ...useLoadingProps,\n  ...useSizeProps,\n  ...useComponentPresetProp,\n  ...VaFallbackPropsDeclaration,\n\n  color: { type: String, default: 'primary' },\n  textColor: { type: String },\n  square: { type: Boolean, default: false },\n  fontSize: { type: String, default: '' },\n  src: { type: String, default: null },\n  icon: { type: String, default: '' },\n  alt: { type: String, default: '' },\n})\n\nconst emit = defineEmits(['error', 'fallback'])\n\nconst { getColor } = useColors()\nconst colorComputed = computed(() => getColor(props.color))\nconst backgroundColorComputed = computed(() => {\n  if (props.loading || (props.src && !hasLoadError.value)) {\n    return undefined\n  }\n\n  return colorComputed.value\n})\nconst { sizeComputed, fontSizeComputed } = useSize(props, 'VaAvatar')\nconst { textColorComputed } = useTextColor(backgroundColorComputed)\n\nconst computedStyle = computed(() => ({\n  fontSize: props.fontSize || fontSizeComputed.value,\n}))\n\nconst classesComputed = useBem('va-avatar', () => ({\n  ...pick(props, ['square']),\n}))\n\nconst hasLoadError = ref(false)\n\nconst onLoadError = (event: Event) => {\n  hasLoadError.value = true\n  emit('error', event)\n}\n\nwatch(() => props.src, () => {\n  hasLoadError.value = false\n})\n\nconst avatarOptions = computed(() => ({\n  hasError: hasLoadError.value,\n  onError: onLoadError,\n}))\n\nconst VaFallbackProps = filterComponentProps(VaFallbackPropsDeclaration)\n\ndefineExpose({\n  hasLoadError,\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-avatar {\n  align-items: var(--va-avatar-align-items);\n  display: var(--va-avatar-display);\n  justify-content: var(--va-avatar-justify-content);\n  line-height: var(--va-avatar-line-height);\n  position: var(--va-avatar-position);\n  text-align: var(--va-avatar-text-align);\n  vertical-align: var(--va-avatar-vertical-align);\n  border-radius: var(--va-avatar-border-radius);\n  font-family: var(--va-font-family);\n  background-color: v-bind(backgroundColorComputed);\n  color: v-bind(textColorComputed);\n  width: v-bind(sizeComputed);\n  min-width: v-bind(sizeComputed);  // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\n  height: v-bind(sizeComputed);\n\n  &--square {\n    --va-avatar-border-radius: 0;\n  }\n\n  img,\n  svg {\n    object-fit: var(--va-avatar-object-fit);\n    border-radius: inherit;\n    display: inline-flex;\n    height: inherit;\n    width: inherit;\n    margin: auto;\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAkDA,MAAM,6BAA6B,sBAAsB,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AASnE,UAAM,QAAQ;AAed,UAAM,OAAO;AAEP,UAAA,EAAE,aAAa;AACrB,UAAM,gBAAgB,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC;AACpD,UAAA,0BAA0B,SAAS,MAAM;AAC7C,UAAI,MAAM,WAAY,MAAM,OAAO,CAAC,aAAa,OAAQ;AAChD,eAAA;AAAA,MACT;AAEA,aAAO,cAAc;AAAA,IAAA,CACtB;AACD,UAAM,EAAE,cAAc,iBAAA,IAAqB,QAAQ,OAAO,UAAU;AACpE,UAAM,EAAE,kBAAA,IAAsB,aAAa,uBAAuB;AAE5D,UAAA,gBAAgB,SAAS,OAAO;AAAA,MACpC,UAAU,MAAM,YAAY,iBAAiB;AAAA,IAC7C,EAAA;AAEI,UAAA,kBAAkB,OAAO,aAAa,OAAO;AAAA,MACjD,GAAG,KAAK,OAAO,CAAC,QAAQ,CAAC;AAAA,IACzB,EAAA;AAEI,UAAA,eAAe,IAAI,KAAK;AAExB,UAAA,cAAc,CAAC,UAAiB;AACpC,mBAAa,QAAQ;AACrB,WAAK,SAAS,KAAK;AAAA,IAAA;AAGf,UAAA,MAAM,MAAM,KAAK,MAAM;AAC3B,mBAAa,QAAQ;AAAA,IAAA,CACtB;AAEK,UAAA,gBAAgB,SAAS,OAAO;AAAA,MACpC,UAAU,aAAa;AAAA,MACvB,SAAS;AAAA,IACT,EAAA;AAEI,UAAA,kBAAkB,qBAAqB,0BAA0B;AAE1D,aAAA;AAAA,MACX;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}