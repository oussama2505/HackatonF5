{"version":3,"file":"VaChip.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-chip/VaChip.vue"],"sourcesContent":["<template>\n  <component\n    v-if=\"valueComputed\"\n    class=\"va-chip\"\n    :is=\"tagComputed\"\n    :href=\"hrefComputed\"\n    :target=\"target\"\n    :to=\"to\"\n    :replace=\"replace\"\n    :exact=\"exact\"\n    :active-class=\"activeClass\"\n    :exact-active-class=\"exactActiveClass\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <span\n      class=\"va-chip__inner\"\n      @focus=\"$emit('focus')\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <va-icon\n        v-if=\"icon\"\n        class=\"va-chip__icon\"\n        :name=\"icon\"\n        :size=\"iconSize\"\n      />\n      <span class=\"va-chip__content\">\n        <slot></slot>\n      </span>\n      <va-icon\n        v-if=\"closeable\"\n        role=\"button\"\n        name=\"va-close\"\n        class=\"va-chip__close-icon\"\n        :aria-label=\"tp($props.ariaCloseLabel)\"\n        :tabindex=\"tabIndexComputed\"\n        :size=\"iconSize\"\n        @click.stop=\"close\"\n        @keydown.enter.stop=\"close\"\n        @keydown.space.stop=\"close\"\n      />\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { PropType, computed, toRef } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { getBoxShadowColor, getHoverColor, getFocusColor } from '../../services/color'\nimport {\n  useComponentPresetProp,\n  useKeyboardOnlyFocus,\n  useRouterLink, useRouterLinkProps,\n  useColors, useColorProps,\n  useStateful, useStatefulEmits, useStatefulProps,\n  useHover,\n  useTextColor,\n  useBem,\n  useTranslation, useTranslationProp,\n} from '../../composables'\n\nimport { VaIcon } from '../va-icon'\n\ndefineOptions({\n  name: 'VaChip',\n})\n\nconst props = defineProps({\n  ...useRouterLinkProps,\n  ...useColorProps,\n  ...useStatefulProps,\n  ...useComponentPresetProp,\n  modelValue: { type: Boolean, default: true },\n  closeable: { type: Boolean, default: false },\n  outline: { type: Boolean, default: false },\n  disabled: { type: Boolean, default: false },\n  readonly: { type: Boolean, default: false },\n  square: { type: Boolean, default: false },\n  shadow: { type: Boolean, default: false },\n  flat: { type: Boolean, default: false },\n  icon: { type: String, default: '' },\n  tag: { type: String, default: 'span' },\n  size: {\n    type: String as PropType<'small' | 'medium' | 'large'>,\n    default: 'medium',\n    validator: (value: string) => ['small', 'medium', 'large'].includes(value),\n  },\n\n  ariaCloseLabel: useTranslationProp('$t:close'),\n})\n\nconst emit = defineEmits([...useStatefulEmits, 'focus'])\n\nconst { getColor } = useColors()\nconst colorComputed = computed(() => getColor(props.color))\nconst borderColor = computed(() => props.outline ? colorComputed.value : '')\nconst isTransparentBackground = computed(() => Boolean(props.outline || props.flat))\nconst { textColorComputed } = useTextColor(colorComputed, isTransparentBackground)\n\nconst { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\nconst shadowStyle = computed(() => {\n  if (!props.shadow || props.flat || props.outline || props.disabled || hasKeyboardFocus.value) {\n    return\n  }\n  return `0 0.125rem 0.19rem 0 ${getBoxShadowColor(colorComputed.value)}`\n})\n\nconst { valueComputed } = useStateful(props, emit)\nconst { tagComputed, hrefComputed } = useRouterLink(props)\nconst { isHovered, onMouseEnter, onMouseLeave } = useHover()\n\nconst close = () => {\n  if (!props.disabled) {\n    valueComputed.value = false\n  }\n}\n\nconst iconSize = computed(() => props.size)\nconst tabIndexComputed = computed(() => props.disabled ? -1 : 0)\n\nconst computedClass = useBem('va-chip', () => ({\n  ...pick(props, ['disabled', 'readonly', 'square']),\n  small: props.size === 'small',\n  large: props.size === 'large',\n}))\n\nconst computedStyle = computed(() => {\n  const result = {\n    color: textColorComputed.value,\n    borderColor: borderColor.value,\n    background: '',\n    boxShadow: shadowStyle.value,\n  }\n\n  if (props.outline || props.flat) {\n    if (hasKeyboardFocus.value) {\n      result.background = getFocusColor(colorComputed.value)\n    } else if (!props.readonly && isHovered.value) {\n      result.background = getHoverColor(colorComputed.value)\n    }\n  } else {\n    result.background = colorComputed.value\n  }\n\n  return result\n})\n\nconst { tp } = useTranslation()\n\ndefineExpose({\n  close,\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-chip {\n  display: var(--va-chip-display);\n  border: var(--va-chip-border, var(--va-control-border));\n  position: var(--va-chip-position);\n  border-radius: var(--va-chip-border-radius);\n  width: var(--va-chip-width);\n  height: var(--va-chip-height);\n  min-width: var(--va-chip-min-width);\n  min-height: var(--va-chip-min-height);\n  padding: var(--va-chip-padding);\n  color: var(--va-chip-color);\n  cursor: var(--va-chip-cursor);\n  font-size: var(--va-chip-font-size);\n  font-family: var(--va-font-family);\n  vertical-align: var(--va-chip-vertical-align);\n\n  &__inner {\n    display: var(--va-chip-inner-display);\n    align-items: var(--va-chip-inner-align-items);\n    width: var(--va-chip-inner-width);\n    vertical-align: inherit;\n  }\n\n  &:hover:not(&--readonly) {\n    opacity: var(--va-chip-hover-opacity);\n  }\n\n  &__content {\n    display: var(--va-chip-content-display);\n    justify-content: var(--va-chip-content-justify-content);\n    align-items: var(--va-chip-content-align-items);\n    padding: var(--va-chip-content-padding);\n    line-height: var(--va-chip-content-line-height);\n    width: var(--va-chip-content-width);\n  }\n\n  &__close-icon {\n    cursor: pointer;\n\n    @at-root {\n      .va-chip--disabled {\n        .va-chip__close-icon {\n          cursor: default !important;\n        }\n      }\n    }\n  }\n\n  &--square {\n    border-radius: var(--va-chip-square-border-radius, var(--va-square-border-radius));\n  }\n\n  &--small {\n    height: var(--va-chip-sm-height);\n    font-size: var(--va-chip-sm-font-size);\n\n    .va-chip__content {\n      padding: var(--va-chip-sm-content-padding);\n    }\n  }\n\n  &--large {\n    height: var(--va-chip-lg-height);\n    font-size: var(--va-chip-lg-font-size);\n\n    .va-chip__content {\n      padding: var(--va-chip-lg-content-padding);\n    }\n  }\n\n  &.va-chip--disabled {\n    @include va-disabled;\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,UAAM,QAAQ;AAwBd,UAAM,OAAO;AAEP,UAAA,EAAE,aAAa;AACrB,UAAM,gBAAgB,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC;AAC1D,UAAM,cAAc,SAAS,MAAM,MAAM,UAAU,cAAc,QAAQ,EAAE;AACrE,UAAA,0BAA0B,SAAS,MAAM,QAAQ,MAAM,WAAW,MAAM,IAAI,CAAC;AACnF,UAAM,EAAE,kBAAsB,IAAA,aAAa,eAAe,uBAAuB;AAEjF,UAAM,EAAE,kBAAkB,uBAAuB,IAAI,qBAAqB;AACpE,UAAA,cAAc,SAAS,MAAM;AAC7B,UAAA,CAAC,MAAM,UAAU,MAAM,QAAQ,MAAM,WAAW,MAAM,YAAY,iBAAiB,OAAO;AAC5F;AAAA,MACF;AACA,aAAO,wBAAwB,kBAAkB,cAAc,KAAK,CAAC;AAAA,IAAA,CACtE;AAED,UAAM,EAAE,cAAkB,IAAA,YAAY,OAAO,IAAI;AACjD,UAAM,EAAE,aAAa,aAAa,IAAI,cAAc,KAAK;AACzD,UAAM,EAAE,WAAW,cAAc,iBAAiB,SAAS;AAE3D,UAAM,QAAQ,MAAM;AACd,UAAA,CAAC,MAAM,UAAU;AACnB,sBAAc,QAAQ;AAAA,MACxB;AAAA,IAAA;AAGF,UAAM,WAAW,SAAS,MAAM,MAAM,IAAI;AAC1C,UAAM,mBAAmB,SAAS,MAAM,MAAM,WAAW,KAAK,CAAC;AAEzD,UAAA,gBAAgB,OAAO,WAAW,OAAO;AAAA,MAC7C,GAAG,KAAK,OAAO,CAAC,YAAY,YAAY,QAAQ,CAAC;AAAA,MACjD,OAAO,MAAM,SAAS;AAAA,MACtB,OAAO,MAAM,SAAS;AAAA,IACtB,EAAA;AAEI,UAAA,gBAAgB,SAAS,MAAM;AACnC,YAAM,SAAS;AAAA,QACb,OAAO,kBAAkB;AAAA,QACzB,aAAa,YAAY;AAAA,QACzB,YAAY;AAAA,QACZ,WAAW,YAAY;AAAA,MAAA;AAGrB,UAAA,MAAM,WAAW,MAAM,MAAM;AAC/B,YAAI,iBAAiB,OAAO;AACnB,iBAAA,aAAa,cAAc,cAAc,KAAK;AAAA,QAC5C,WAAA,CAAC,MAAM,YAAY,UAAU,OAAO;AACtC,iBAAA,aAAa,cAAc,cAAc,KAAK;AAAA,QACvD;AAAA,MAAA,OACK;AACL,eAAO,aAAa,cAAc;AAAA,MACpC;AAEO,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,EAAE,OAAO;AAEF,aAAA;AAAA,MACX;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}