{"version":3,"file":"VaYearPicker.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"rootNode\"\n    class=\"va-year-picker\"\n    v-bind=\"containerAttributes\"\n    @keydown.space.prevent\n  >\n    <va-date-picker-cell\n      v-for=\"(year, index) in years\"\n      :key=\"year.toString()\"\n      :in-range=\"isInRange(year)\"\n      :selected=\"isSelected(year)\"\n      :disabled=\"isYearDisabled(year)\"\n      :today=\"isToday(year)\"\n      :focused=\"focusedCellIndex === index\"\n      :highlight-today=\"highlightToday\"\n      :readonly=\"$props.readonly\"\n      :color=\"color\"\n      @click=\"onClick(year); focusedCellIndex = index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      {{ year.getFullYear() }}\n    </va-date-picker-cell>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { PropType, toRefs, onMounted, computed, watch, shallowRef } from 'vue'\n\nimport { createYearDate } from '../../utils/date-utils'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport { useNumericProp } from '../../../../composables'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\ndefineOptions({\n  name: 'VaYearPicker',\n})\n\nconst props = defineProps({\n  modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n  allowedYears: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n  highlightToday: { type: Boolean, default: true },\n  startYear: { type: [Number, String], default: 1970 },\n  mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n  view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'year' }) },\n  endYear: { type: [Number, String], default: () => new Date().getFullYear() + 50 },\n  readonly: { type: Boolean, default: false },\n  color: { type: String, default: 'primary' },\n})\n\nconst emit = defineEmits(['update:modelValue', 'hover:year', 'click:year'])\n\nconst rootNode = shallowRef<HTMLElement>()\n\nconst { view } = toRefs(props)\n\nconst generateYearsArray = (start: number, end: number) => {\n  const yearsCount = end - start + 1\n  return Array.from(Array(yearsCount).keys())\n    .map((i) => createYearDate(start + i))\n}\n\n// startYear useNumericProp\n// endYear useNumericProp\nconst startYearComputed = useNumericProp('startYear')\nconst endYearComputed = useNumericProp('endYear')\n\nconst years = computed(() => generateYearsArray(startYearComputed.value!, endYearComputed.value!))\n\nconst scrollIntoYearIndex = (index: number) => {\n  if (!rootNode.value) { return }\n\n  const scrollHeight = rootNode.value.scrollHeight\n  const rootNodeHeight = rootNode.value.offsetHeight\n  const currentYearOffset = scrollHeight / years.value.length * index\n  const cellSize = scrollHeight / years.value.length\n  const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop\n\n  if (relativeScrollPosition < 0) {\n    // First element in view\n    rootNode.value.scrollTo({ top: currentYearOffset })\n  } else if (relativeScrollPosition > rootNodeHeight) {\n    // Last element in view\n    rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize })\n  }\n}\n\nconst scrollIntoYearIndexCenter = (index: number) => {\n  if (!rootNode.value) { return }\n\n  const scrollHeight = rootNode.value.scrollHeight\n  const rootNodeHeight = rootNode.value.offsetHeight\n  const currentYearOffset = scrollHeight / years.value.length * index\n\n  rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 })\n}\n\nonMounted(() => {\n  const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year)\n\n  scrollIntoYearIndexCenter(currentYearIndex)\n})\n\nconst {\n  hoveredIndex,\n  onClick,\n  isToday,\n  isSelected,\n  isInRange,\n} = useDatePicker('year', years, props, emit)\n\nconst isYearDisabled = (year: Date) => props.allowedYears === undefined ? false : !props.allowedYears(year)\n\nconst {\n  focusedCellIndex, containerAttributes,\n} = useGridKeyboardNavigation({\n  rowSize: 1,\n  start: 0,\n  end: years.value.length,\n  onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n  onSelected: (selectedIndex) => onClick(years.value[selectedIndex]),\n})\n\nwatch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index))\nwatch(focusedCellIndex, (index) => { hoveredIndex.value = index })\nwatch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n</script>\n\n<style lang=\"scss\">\n@import '../../../../styles/resources';\n\n.va-year-picker {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  grid-gap: var(--va-date-picker-cell-gap);\n  max-height: 100%;\n  position: relative;\n\n  @include va-scroll();\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA0CA,UAAM,QAAQ;AAYd,UAAM,OAAO;AAEb,UAAM,WAAW;AAEjB,UAAM,EAAE,KAAA,IAAS,OAAO,KAAK;AAEvB,UAAA,qBAAqB,CAAC,OAAe,QAAgB;AACnD,YAAA,aAAa,MAAM,QAAQ;AACjC,aAAO,MAAM,KAAK,MAAM,UAAU,EAAE,KAAM,CAAA,EACvC,IAAI,CAAC,MAAM,eAAe,QAAQ,CAAC,CAAC;AAAA,IAAA;AAKnC,UAAA,oBAAoB,eAAe,WAAW;AAC9C,UAAA,kBAAkB,eAAe,SAAS;AAE1C,UAAA,QAAQ,SAAS,MAAM,mBAAmB,kBAAkB,OAAQ,gBAAgB,KAAM,CAAC;AAE3F,UAAA,sBAAsB,CAAC,UAAkB;AACzC,UAAA,CAAC,SAAS,OAAO;AAAE;AAAA,MAAO;AAExB,YAAA,eAAe,SAAS,MAAM;AAC9B,YAAA,iBAAiB,SAAS,MAAM;AACtC,YAAM,oBAAoB,eAAe,MAAM,MAAM,SAAS;AACxD,YAAA,WAAW,eAAe,MAAM,MAAM;AACtC,YAAA,yBAAyB,oBAAoB,SAAS,MAAM;AAElE,UAAI,yBAAyB,GAAG;AAE9B,iBAAS,MAAM,SAAS,EAAE,KAAK,kBAAmB,CAAA;AAAA,MAAA,WACzC,yBAAyB,gBAAgB;AAElD,iBAAS,MAAM,SAAS,EAAE,KAAK,oBAAoB,iBAAiB,UAAU;AAAA,MAChF;AAAA,IAAA;AAGI,UAAA,4BAA4B,CAAC,UAAkB;AAC/C,UAAA,CAAC,SAAS,OAAO;AAAE;AAAA,MAAO;AAExB,YAAA,eAAe,SAAS,MAAM;AAC9B,YAAA,iBAAiB,SAAS,MAAM;AACtC,YAAM,oBAAoB,eAAe,MAAM,MAAM,SAAS;AAE9D,eAAS,MAAM,SAAS,EAAE,KAAK,oBAAoB,iBAAiB,GAAG;AAAA,IAAA;AAGzE,cAAU,MAAM;AACR,YAAA,mBAAmB,MAAM,MAAM,UAAU,CAAC,SAAS,KAAK,YAAY,MAAM,KAAK,MAAM,IAAI;AAE/F,gCAA0B,gBAAgB;AAAA,IAAA,CAC3C;AAEK,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACE,IAAA,cAAc,QAAQ,OAAO,OAAO,IAAI;AAEtC,UAAA,iBAAiB,CAAC,SAAe,MAAM,iBAAiB,SAAY,QAAQ,CAAC,MAAM,aAAa,IAAI;AAEpG,UAAA;AAAA,MACJ;AAAA,MAAkB;AAAA,QAChB,0BAA0B;AAAA,MAC5B,SAAS;AAAA,MACT,OAAO;AAAA,MACP,KAAK,MAAM,MAAM;AAAA,MACjB,cAAc,SAAS,MAAM,MAAM,MAAM,UAAU,CAAC,SAAS,KAAK,YAAY,MAAM,KAAK,MAAM,IAAI,CAAC;AAAA,MACpG,YAAY,CAAC,kBAAkB,QAAQ,MAAM,MAAM,aAAa,CAAC;AAAA,IAAA,CAClE;AAED,UAAM,kBAAkB,CAAC,UAAU,UAAU,MAAM,oBAAoB,KAAK,CAAC;AACvE,UAAA,kBAAkB,CAAC,UAAU;AAAE,mBAAa,QAAQ;AAAA,IAAA,CAAO;AAC3D,UAAA,cAAc,CAAC,UAAU;AAAE,uBAAiB,QAAQ;AAAA,IAAA,CAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}