import { defineComponent, toRef, computed, openBlock, createElementBlock, normalizeStyle, renderSlot } from "vue";
import { u as useColors } from "../../../../composables/useColors.js";
import { u as useTextColor } from "../../../../composables/useTextColor.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaDropdownContent"
  },
  __name: "VaDropdownContent",
  props: {
    noPadding: { type: Boolean, default: false },
    background: { type: String, default: "background-secondary" },
    textColor: { type: String }
  },
  setup(__props) {
    const props = __props;
    const { getColor } = useColors();
    const { textColorComputed } = useTextColor(toRef(props, "background"));
    const computedStyle = computed(() => ({
      background: getColor(props.background, void 0, true),
      color: textColorComputed.value,
      padding: props.noPadding ? 0 : void 0
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: "va-dropdown__content",
        style: normalizeStyle(computedStyle.value),
        role: "listbox"
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 4);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaDropdownContent.vue_vue_type_script_setup_true_lang.js.map
