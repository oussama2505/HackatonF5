import { defineComponent, useCssVars, ref, computed, onMounted, openBlock, createElementBlock, Fragment, createVNode, unref, createElementVNode, normalizeClass, toDisplayString, withCtx, createTextVNode } from "vue";
import { V as VaFileUploadKey } from "../types.js";
import { V as VaButton } from "../../va-button/index.js";
import { V as VaProgressBar } from "../../va-progress-bar/index.js";
import { u as useStrictInject } from "../../../composables/useStrictInject.js";
import { u as useBem } from "../../../composables/useBem.js";
const _hoisted_1 = { class: "va-file-upload-undo__text" };
const INJECTION_ERROR_MESSAGE = "The VaFileUploadUndo component should be used in the context of VaFileUpload component";
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaFileUploadUndo"
  },
  __name: "VaFileUploadUndo",
  props: {
    vertical: { type: Boolean, default: false }
  },
  emits: ["recover"],
  setup(__props, { emit: __emit }) {
    useCssVars((_ctx) => ({
      "52296ed2": undoDurationStyle.value
    }));
    const props = __props;
    const progress = ref(100);
    const {
      undoDuration,
      undoButtonText,
      deletedFileMessage
    } = useStrictInject(VaFileUploadKey, INJECTION_ERROR_MESSAGE);
    const computedClasses = useBem("va-file-upload-undo", () => ({
      vertical: props.vertical
    }));
    const undoDurationStyle = computed(() => `${undoDuration.value ?? 0}ms`);
    onMounted(() => {
      const timer = setTimeout(() => {
        progress.value = 0;
        clearTimeout(timer);
      }, 0);
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(Fragment, null, [
        createVNode(unref(VaProgressBar), {
          "model-value": progress.value,
          rounded: false,
          class: "va-file-upload-undo-progress-bar"
        }, null, 8, ["model-value"]),
        createElementVNode("div", {
          class: normalizeClass(["va-file-upload-undo", unref(computedClasses)])
        }, [
          createElementVNode("span", _hoisted_1, toDisplayString(unref(deletedFileMessage)), 1),
          createVNode(unref(VaButton), {
            class: "va-file-upload-undo__button",
            "aria-label": unref(undoButtonText),
            size: "small",
            outline: "",
            onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("recover"))
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(unref(undoButtonText)), 1)
            ]),
            _: 1
          }, 8, ["aria-label"])
        ], 2)
      ], 64);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaFileUploadUndo.vue_vue_type_script_setup_true_lang.js.map
