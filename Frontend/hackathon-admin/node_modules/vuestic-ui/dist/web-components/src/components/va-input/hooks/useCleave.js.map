{"version":3,"file":"useCleave.js","sources":["../../../../../../src/components/va-input/hooks/useCleave.ts"],"sourcesContent":["import { computed, onBeforeUnmount, PropType, ref, Ref, watchEffect, type ExtractPropTypes, type WritableComputedRef } from 'vue'\nimport Cleave from 'cleave.js'\nimport { type CleaveOptions } from 'cleave.js/options'\n\nconst DEFAULT_MASK_TOKENS: Record<string, Record<string, unknown>> = {\n  creditCard: {\n    creditCard: true,\n  },\n  date: {\n    date: true,\n    datePattern: ['d', 'm', 'Y'],\n  },\n  time: {\n    time: true,\n    timePattern: ['h', 'm'],\n    timeFormat: '24',\n  },\n  numeral: {\n    numeral: true,\n    numeralThousandsGroupStyle: 'thousand',\n  },\n}\n\nexport const useCleaveProps = {\n  mask: { type: [String, Object] as PropType<string | Record<string, number[]> | CleaveOptions>, default: '' },\n  returnRaw: { type: Boolean, default: true },\n}\n\nexport const useCleave = (\n  element: Ref<HTMLInputElement | undefined>,\n  props: ExtractPropTypes<typeof useCleaveProps>,\n  syncValue: WritableComputedRef<string | number | null>,\n) => {\n  const cleave = ref<Cleave>()\n\n  const getMask = (mask: CleaveOptions | string) => {\n    if (typeof mask === 'string') {\n      return DEFAULT_MASK_TOKENS[mask] ? { ...DEFAULT_MASK_TOKENS[mask] } : null\n    }\n    return { ...mask }\n  }\n\n  const destroyCleave = () => {\n    if (cleave.value) { cleave.value.destroy() }\n  }\n\n  const mask = computed(() => getMask(props.mask))\n\n  const cleaveEnabled = computed(() => {\n    return mask.value && Object.keys(mask.value).length\n  })\n\n  watchEffect(() => {\n    destroyCleave()\n\n    if (!element.value) { return }\n\n    // Do not create cleave instance if mask is not defined\n    if (!cleaveEnabled.value || !mask.value) { return }\n\n    cleave.value = new Cleave(element.value, mask.value)\n\n    cleave.value!.properties.onValueChanged = ({ target: { rawValue, value } }) => {\n      if (props.returnRaw) {\n        syncValue.value = rawValue\n      } else {\n        syncValue.value = value\n      }\n    }\n  })\n\n  onBeforeUnmount(() => { destroyCleave() })\n\n  const computedValue = computed<string | number>(() => {\n    if (cleave.value) {\n      if (props.returnRaw && syncValue.value === cleave.value.getRawValue()) {\n        return cleave.value.getFormattedValue()\n      }\n    }\n\n    return syncValue.value ?? ''\n  })\n\n  const onInput = (event: Event) => {\n    const value = (event.target as HTMLInputElement).value\n\n    if (!cleaveEnabled.value) {\n      syncValue.value = value\n    }\n  }\n\n  return {\n    cleave,\n    cleaveEnabled,\n    computedValue,\n    onInput,\n  }\n}\n"],"names":["mask"],"mappings":";;AAIA,MAAM,sBAA+D;AAAA,EACnE,YAAY;AAAA,IACV,YAAY;AAAA,EACd;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,aAAa,CAAC,KAAK,KAAK,GAAG;AAAA,EAC7B;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,aAAa,CAAC,KAAK,GAAG;AAAA,IACtB,YAAY;AAAA,EACd;AAAA,EACA,SAAS;AAAA,IACP,SAAS;AAAA,IACT,4BAA4B;AAAA,EAC9B;AACF;AAEO,MAAM,iBAAiB;AAAA,EAC5B,MAAM,EAAE,MAAM,CAAC,QAAQ,MAAM,GAAkE,SAAS,GAAG;AAAA,EAC3G,WAAW,EAAE,MAAM,SAAS,SAAS,KAAK;AAC5C;AAEO,MAAM,YAAY,CACvB,SACA,OACA,cACG;AACH,QAAM,SAAS;AAET,QAAA,UAAU,CAACA,UAAiC;AAC5C,QAAA,OAAOA,UAAS,UAAU;AACrB,aAAA,oBAAoBA,KAAI,IAAI,EAAE,GAAG,oBAAoBA,KAAI,EAAM,IAAA;AAAA,IACxE;AACO,WAAA,EAAE,GAAGA;EAAK;AAGnB,QAAM,gBAAgB,MAAM;AAC1B,QAAI,OAAO,OAAO;AAAE,aAAO,MAAM;IAAU;AAAA,EAAA;AAG7C,QAAM,OAAO,SAAS,MAAM,QAAQ,MAAM,IAAI,CAAC;AAEzC,QAAA,gBAAgB,SAAS,MAAM;AACnC,WAAO,KAAK,SAAS,OAAO,KAAK,KAAK,KAAK,EAAE;AAAA,EAAA,CAC9C;AAED,cAAY,MAAM;AACF;AAEV,QAAA,CAAC,QAAQ,OAAO;AAAE;AAAA,IAAO;AAG7B,QAAI,CAAC,cAAc,SAAS,CAAC,KAAK,OAAO;AAAE;AAAA,IAAO;AAElD,WAAO,QAAQ,IAAI,OAAO,QAAQ,OAAO,KAAK,KAAK;AAE5C,WAAA,MAAO,WAAW,iBAAiB,CAAC,EAAE,QAAQ,EAAE,UAAU,MAAM,QAAQ;AAC7E,UAAI,MAAM,WAAW;AACnB,kBAAU,QAAQ;AAAA,MAAA,OACb;AACL,kBAAU,QAAQ;AAAA,MACpB;AAAA,IAAA;AAAA,EACF,CACD;AAED,kBAAgB,MAAM;AAAgB;EAAA,CAAG;AAEnC,QAAA,gBAAgB,SAA0B,MAAM;AACpD,QAAI,OAAO,OAAO;AAChB,UAAI,MAAM,aAAa,UAAU,UAAU,OAAO,MAAM,eAAe;AAC9D,eAAA,OAAO,MAAM;MACtB;AAAA,IACF;AAEA,WAAO,UAAU,SAAS;AAAA,EAAA,CAC3B;AAEK,QAAA,UAAU,CAAC,UAAiB;AAC1B,UAAA,QAAS,MAAM,OAA4B;AAE7C,QAAA,CAAC,cAAc,OAAO;AACxB,gBAAU,QAAQ;AAAA,IACpB;AAAA,EAAA;AAGK,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;"}