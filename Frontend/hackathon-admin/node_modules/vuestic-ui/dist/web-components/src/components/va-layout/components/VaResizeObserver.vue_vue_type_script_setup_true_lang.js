import { defineComponent, ref, watch, openBlock, createElementBlock, renderSlot } from "vue";
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...{
    name: "VaLayoutSizeKeeper"
  },
  __name: "VaResizeObserver",
  emits: {
    resize: (size) => true
  },
  setup(__props, { emit: __emit }) {
    const emit = __emit;
    const el = ref();
    let observer = null;
    watch(el, (newEl) => {
      if (observer) {
        observer.disconnect();
      }
      observer = new ResizeObserver(([el2]) => {
        emit("resize", el2.contentRect);
      });
      observer.observe(newEl);
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: "va-resize-observer",
        ref_key: "el",
        ref: el
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 512);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaResizeObserver.vue_vue_type_script_setup_true_lang.js.map
