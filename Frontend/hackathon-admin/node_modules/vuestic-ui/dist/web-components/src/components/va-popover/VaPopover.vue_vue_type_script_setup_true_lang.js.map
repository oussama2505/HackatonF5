{"version":3,"file":"VaPopover.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-popover/VaPopover.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    v-bind=\"VaDropdownPropValues\"\n    :model-value=\"modelValue\"\n    :close-on-click-outside=\"autoHide\"\n    :offset=\"$props.offset\"\n    :content-class=\"$props.contentClass\"\n    class=\"va-popover\"\n  >\n    <template #default>\n      <div\n        :style=\"computedPopoverStyle\"\n        class=\"va-popover__content\"\n        role=\"tooltip\"\n      >\n        <div\n          v-if=\"showIconComputed\"\n          aria-hidden=\"true\"\n          class=\"va-popover__icon\"\n        >\n          <slot name=\"icon\">\n            <va-icon :name=\"$props.icon\" :color=\"textColorComputed\" />\n          </slot>\n        </div>\n        <div v-if=\"showPopoverContentComputed\">\n          <div v-if=\"showTitleComputed\" class=\"va-popover__title\">\n            <slot name=\"title\">{{ $props.title }}</slot>\n          </div>\n          <div v-if=\"showBodyComputed\" class=\"va-popover__body\">\n            <slot name=\"body\">{{ $props.message }}</slot>\n          </div>\n        </div>\n      </div>\n    </template>\n    <template #anchor>\n      <slot />\n    </template>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { computed, PropType, useSlots } from 'vue'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\nimport { useComponentPresetProp, useColors, useTextColor } from '../../composables'\n\nimport { VaDropdown, VaIcon } from '../'\n\nconst VaDropdownProps = extractComponentProps(VaDropdown, ['closeOnClickOutside'])\n</script>\n\n<script lang=\"ts\" setup>\n\ndefineOptions({\n  name: 'VaPopover',\n})\n\nconst props = defineProps({\n  ...VaDropdownProps,\n  ...useComponentPresetProp,\n  trigger: { ...VaDropdownProps.trigger, default: ['hover', 'enter', 'space', 'arrow-down', 'arrow-up'] },\n  color: { type: String, default: '#1b1a1f' }, // TODO: Make sure add this color to pallete\n  textColor: { type: String },\n  icon: { type: String, default: '' },\n  title: { type: String, default: '' },\n  message: { type: String, default: '' },\n  autoHide: { type: Boolean, default: true },\n  offset: { type: [Array, Number] as PropType<number | [number, number]>, default: 4 },\n  contentClass: { type: String, default: '' },\n})\n\nconst VaDropdownPropValues = filterComponentProps(VaDropdownProps)\n\nconst { getColor, getBoxShadowColor } = useColors()\n\nconst slots = useSlots()\nconst { textColorComputed } = useTextColor(computed(() => getColor(props.color)))\nconst showIconComputed = computed(() => props.icon || slots.icon)\nconst showTitleComputed = computed(() => props.title || slots.title)\nconst showBodyComputed = computed(() => props.message || slots.body)\nconst showPopoverContentComputed = computed(\n  () => showTitleComputed.value || showBodyComputed.value,\n)\n\nconst computedPopoverStyle = computed(() => ({\n  boxShadow: `var(--va-popover-content-box-shadow) ${getBoxShadowColor(getColor(props.color))}`,\n  backgroundColor: getColor(props.color),\n  color: textColorComputed.value,\n}))\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-popover {\n  display: var(--va-popover-display);\n\n  &__content {\n    background-color: var(--va-popover-content-background-color);\n    opacity: var(--va-popover-content-opacity);\n    display: var(--va-popover-content-display);\n    align-items: var(--va-popover-content-align-items);\n    padding: var(--va-popover-content-padding);\n    border-radius: var(--va-popover-content-border-radius, var(--va-block-border-radius));\n    font-size: var(--va-popover-content-font-size);\n  }\n\n  &__icon + div {\n    padding-left: 0.75rem;\n    overflow: hidden;\n    width: 100%;\n  }\n\n  &__title {\n    font-weight: var(--va-popover-title-font-weight);\n    margin-bottom: var(--va-popover-title-margin-bottom);\n  }\n\n  &__body {\n    line-height: var(--va-popover-body-line-height);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgDA,MAAM,kBAAkB,sBAAsB,YAAY,CAAC,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;AASjF,UAAM,QAAQ;AAcR,UAAA,uBAAuB,qBAAqB,eAAe;AAEjE,UAAM,EAAE,UAAU,kBAAkB,IAAI,UAAU;AAElD,UAAM,QAAQ;AACR,UAAA,EAAE,sBAAsB,aAAa,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC,CAAC;AAChF,UAAM,mBAAmB,SAAS,MAAM,MAAM,QAAQ,MAAM,IAAI;AAChE,UAAM,oBAAoB,SAAS,MAAM,MAAM,SAAS,MAAM,KAAK;AACnE,UAAM,mBAAmB,SAAS,MAAM,MAAM,WAAW,MAAM,IAAI;AACnE,UAAM,6BAA6B;AAAA,MACjC,MAAM,kBAAkB,SAAS,iBAAiB;AAAA,IAAA;AAG9C,UAAA,uBAAuB,SAAS,OAAO;AAAA,MAC3C,WAAW,wCAAwC,kBAAkB,SAAS,MAAM,KAAK,CAAC,CAAC;AAAA,MAC3F,iBAAiB,SAAS,MAAM,KAAK;AAAA,MACrC,OAAO,kBAAkB;AAAA,IACzB,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}