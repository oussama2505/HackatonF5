{"version":3,"file":"VaStepper.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/va-stepper/VaStepper.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-stepper\"\n    :class=\"{ 'va-stepper--vertical': $props.vertical }\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <ol\n      class=\"va-stepper__navigation\"\n      ref=\"stepperNavigation\"\n      :class=\"{ 'va-stepper__navigation--vertical': $props.vertical }\"\n      @click=\"onValueChange\"\n      @keyup.enter=\"onValueChange\"\n      @keyup.space=\"onValueChange\"\n      @keyup.left=\"setFocus('prev')\"\n      @keyup.right=\"setFocus('next')\"\n      @focusout=\"resetFocus\"\n    >\n      <template\n        v-for=\"(step, i) in stepsComputed\"\n        :key=\"i + step.label\"\n      >\n        <template v-if=\"!isFinishStep(i)\">\n          <slot\n            v-if=\"i > 0\"\n            name=\"divider\"\n            v-bind=\"getIterableSlotData(step, i)\"\n          >\n            <span\n              class=\"va-stepper__divider\"\n              :class=\"{ 'va-stepper__divider--vertical': $props.vertical }\"\n              aria-hidden=\"true\"\n            />\n          </slot>\n\n          <slot\n            :name=\"`step-button-${i}`\"\n            v-bind=\"getIterableSlotData(step, i)\"\n          >\n            <va-stepper-step-button\n              :stepIndex=\"i\"\n              :color=\"getStepperButtonColor(i)\"\n              :modelValue=\"modelValue\"\n              :nextDisabled=\"nextDisabled\"\n              :step=\"step\"\n              :stepControls=\"stepControls\"\n              :navigationDisabled=\"navigationDisabled\"\n              :focus=\"focusedStep\"\n            />\n          </slot>\n        </template>\n      </template>\n    </ol>\n    <div\n      class=\"va-stepper__step-content-wrapper\"\n      :class=\"{ 'va-stepper__step-content-wrapper--vertical': $props.vertical }\"\n    >\n      <div class=\"va-stepper__step-content\">\n        <slot\n          :name=\"`step-content-${isFinishStep(modelValue) ? 'finish' : modelValue}`\"\n          v-bind=\"getIterableSlotData(stepsComputed[modelValue], modelValue)\"\n        />\n      </div>\n      <div class=\"va-stepper__controls\">\n        <slot\n          name=\"controls\"\n          v-bind=\"getIterableSlotData(stepsComputed[modelValue], modelValue)\"\n        >\n          <va-stepper-controls\n            v-if=\"!controlsHidden\"\n            :modelValue=\"modelValue\"\n            :nextDisabled=\"isNextStepDisabled(modelValue)\"\n            :steps=\"stepsComputed\"\n            :stepControls=\"stepControls\"\n            :finishButtonHidden=\"finishButtonHidden\"\n          />\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport VaStepperControls from './VaStepperControls.vue'\nimport VaStepperStepButton from './VaStepperStepButton.vue'\nimport { computed, PropType, ref, Ref, shallowRef, watch } from 'vue'\nimport { useColors, useStateful, useStatefulProps, useTranslation, useTranslationProp } from '../../composables'\nimport type { Step, StepControls } from './types'\nimport { isStepHasError } from './step'\n\ndefineOptions({\n  name: 'VaStepper',\n})\n\nconst props = defineProps({\n  ...useStatefulProps,\n  modelValue: { type: Number, default: 0 },\n  steps: {\n    type: Array as PropType<Step[]>,\n    default: () => [],\n    required: true,\n  },\n  color: { type: String, default: 'primary' },\n  vertical: { type: Boolean, default: false },\n  navigationDisabled: { type: Boolean, default: false },\n  controlsHidden: { type: Boolean, default: false },\n  nextDisabled: { type: Boolean, default: false },\n  nextDisabledOnError: { type: Boolean, default: false },\n  finishButtonHidden: { type: Boolean, default: false },\n  ariaLabel: useTranslationProp('$t:progress'),\n  linear: { type: Boolean, default: false },\n  /** Hidden step shown when all steps complete */\n  finishStep: { type: Object as PropType<Step> },\n})\n\nconst emit = defineEmits(['update:modelValue', 'finish', 'update:steps'])\n\nconst stepperNavigation = shallowRef<HTMLElement>()\nconst { valueComputed: modelValue }: { valueComputed: Ref<number> } = useStateful(props, emit, 'modelValue')\n\nconst stepsComputed = computed(() => {\n  if (!props.finishStep) {\n    return props.steps\n  }\n\n  return [...props.steps, props.finishStep]\n})\n\nconst isFinishStep = (index: number) => {\n  if (!props.finishStep) { return false }\n\n  return index === stepsComputed.value.length - 1\n}\n\nconst focusedStep = ref({ trigger: false, stepIndex: props.navigationDisabled ? -1 : props.modelValue })\n\nconst { getColor } = useColors()\n\nconst isNextStepDisabled = (index: number) => {\n  if (props.nextDisabledOnError && isStepHasError(stepsComputed.value[index])) { return true }\n\n  return props.nextDisabled\n}\n\nconst findFirstNonDisabled = (from: number, direction: number) => {\n  while (from >= 0 && from < stepsComputed.value.length) {\n    from += direction\n    const step = stepsComputed.value[from]\n    if (!step) {\n      return\n    }\n    if (!step.disabled) {\n      return step\n    }\n  }\n}\n\nconst findFirstWithErrorIndex = (from: number, direction: number) => {\n  while (from >= 0 && from < stepsComputed.value.length) {\n    from += direction\n    const step = stepsComputed.value[from]\n    if (!step) {\n      return\n    }\n    if (isStepHasError(step) === true) {\n      return from\n    }\n  }\n}\n\nconst validateMovingToStep = async (stepIndex: number): Promise<boolean> => {\n  const newStep = stepsComputed.value[stepIndex]\n  const currentStep = stepsComputed.value[modelValue.value]\n  const beforeNewStep = findFirstNonDisabled(stepIndex, -1)\n\n  if (newStep.disabled) { return false }\n\n  if (props.linear && stepIndex < modelValue.value) {\n    return true\n  }\n\n  const nextNonError = findFirstWithErrorIndex(modelValue.value, 1)\n\n  if (props.linear && nextNonError !== undefined && nextNonError < stepIndex) {\n    return false\n  }\n\n  let currentStepBeforeLeaveResult\n  try {\n    currentStepBeforeLeaveResult = await currentStep.beforeLeave?.(currentStep, newStep)\n  } catch (e) {\n    throw new Error(`Error in beforeLeave function: ${e}`)\n  }\n\n  //  Checks if a save function was passed, if so it will be called and return boolean\n  if (currentStepBeforeLeaveResult === false) {\n    // Do not update the modelValue if the beforeLeave function returns false\n    return false\n  }\n\n  // Mark current step as completed, if it is not marked manually by user\n  if (currentStep.completed === undefined) {\n    currentStep.completed = true\n  }\n\n  //  Do not do anything if user trying to just over few steps and last is not completed\n  if (props.linear && beforeNewStep && !beforeNewStep.completed) {\n    return false\n  }\n\n  // Check if currentStep has error after beforeLeave function\n  if (props.linear && isStepHasError(currentStep)) { return false }\n\n  return true\n}\n\nconst setStep = async (index: number) => {\n  if (!await validateMovingToStep(index)) { return }\n\n  modelValue.value = index\n}\n\nconst setFocus = (direction: 'prev' | 'next') => {\n  if (props.navigationDisabled) { return }\n  if (direction === 'next') {\n    setFocusNextStep(1)\n  } else {\n    setFocusPrevStep(1)\n  }\n}\n\nconst setFocusNextStep = (idx: number = 1) => {\n  const newValue = focusedStep.value.stepIndex + idx\n\n  if (isNextStepDisabled(newValue)) { return }\n\n  if (newValue < stepsComputed.value.length) {\n    if (stepsComputed.value[newValue].disabled) {\n      setFocusNextStep(idx + 1)\n      return\n    }\n    focusedStep.value.stepIndex = newValue\n    focusedStep.value.trigger = true\n  } else {\n    for (let availableIdx = 0; availableIdx < stepsComputed.value.length; availableIdx++) {\n      if (!stepsComputed.value[availableIdx].disabled) {\n        focusedStep.value.stepIndex = availableIdx\n        focusedStep.value.trigger = true\n        break\n      }\n    }\n  }\n}\nconst setFocusPrevStep = (idx: number = 1) => {\n  const newValue = focusedStep.value.stepIndex - idx\n  if (newValue >= 0) {\n    if (stepsComputed.value[newValue].disabled) {\n      setFocusPrevStep(idx + 1)\n      return\n    }\n    focusedStep.value.stepIndex = newValue\n    focusedStep.value.trigger = true\n  } else {\n    for (let availableIdx = stepsComputed.value.length - 1; availableIdx >= 0; availableIdx--) {\n      if (!stepsComputed.value[availableIdx].disabled && !(isNextStepDisabled(availableIdx))) {\n        focusedStep.value.stepIndex = availableIdx\n        focusedStep.value.trigger = true\n        break\n      }\n    }\n  }\n}\n\nconst resetFocus = () => {\n  requestAnimationFrame(() => {\n    if (!stepperNavigation.value?.contains(document.activeElement)) {\n      focusedStep.value.stepIndex = props.modelValue\n      focusedStep.value.trigger = false\n    }\n  })\n}\nwatch(() => props.modelValue, () => {\n  focusedStep.value.stepIndex = props.modelValue\n  focusedStep.value.trigger = false\n})\n\nconst nextStep = (stepsToSkip = 0) => {\n  const targetIndex = modelValue.value + 1 + stepsToSkip\n\n  if (!stepsComputed.value[targetIndex]) { return }\n  if (stepsComputed.value[targetIndex].disabled) {\n    nextStep(stepsToSkip + 1)\n  }\n\n  setStep(targetIndex)\n}\n\nconst prevStep = (stepsToSkip = 0) => {\n  const targetIndex = modelValue.value - 1 - stepsToSkip\n\n  if (!stepsComputed.value[targetIndex]) { return }\n  if (stepsComputed.value[targetIndex].disabled) {\n    prevStep(stepsToSkip + 1)\n  }\n\n  setStep(targetIndex)\n}\n\nconst finish = async () => {\n  if (await validateMovingToStep(props.steps.length - 1)) {\n    emit('finish')\n  }\n}\n\nconst stepControls: StepControls = { setStep, nextStep, prevStep, finish }\nconst getIterableSlotData = (step: Step, index: number) => ({\n  ...stepControls,\n  focus: focusedStep,\n  isActive: props.modelValue === index,\n  isCompleted: props.modelValue > index,\n  isLastStep: stepsComputed.value.length - 1 === index,\n  isNextStepDisabled: isNextStepDisabled(index),\n  isPrevStepDisabled: index === 0,\n  index,\n  step,\n  hasError: isStepHasError(step),\n})\n\nconst { tp } = useTranslation()\n\nconst onValueChange = () => {\n  focusedStep.value.stepIndex = props.modelValue\n  focusedStep.value.trigger = true\n}\n\nconst ariaAttributesComputed = computed(() => ({\n  role: 'group',\n  'aria-label': tp(props.ariaLabel),\n  'aria-orientation': props.vertical ? 'vertical' as const : 'horizontal' as const,\n}))\n\nfunction getStepperButtonColor (index: number) {\n  return isStepHasError(stepsComputed.value[index]) ? 'danger' : getColor(props.color)\n}\n\nconst completeStep = (shouldCompleteStep?: boolean) => {\n  const steps = { ...stepsComputed.value }\n  if (shouldCompleteStep === true) {\n    steps[props.modelValue].hasError = false\n  }\n\n  steps[props.modelValue].completed = shouldCompleteStep ?? true\n\n  emit('update:steps', steps)\n}\n\nconst setError = (shouldSetError?: boolean) => {\n  const steps = { ...stepsComputed.value }\n  steps[props.modelValue].hasError = shouldSetError ?? true\n  steps[props.modelValue].completed = !shouldSetError\n\n  emit('update:steps', steps)\n}\n\ndefineExpose({\n  modelValue,\n  focusedStep,\n  getIterableSlotData,\n  stepControls,\n  nextStep,\n  prevStep,\n  setStep,\n  setFocus,\n  completeStep,\n  setError,\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-stepper {\n  display: flex;\n  flex-direction: column;\n\n  &--vertical {\n    flex-direction: row;\n  }\n\n  &__navigation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n\n    &--vertical {\n      flex-direction: column;\n      align-items: flex-start;\n      flex-wrap: nowrap;\n    }\n  }\n\n  &__divider {\n    flex-grow: 1;\n    height: var(--va-stepper-divider-thickness);\n    width: var(--va-stepper-divider-length);\n    min-width: var(--va-stepper-divider-min-length);\n    margin: 0 var(--va-stepper-divider-spacing);\n    background: var(--va-stepper-divider-color);\n\n    &--vertical {\n      min-height: var(--va-stepper-divider-min-length);\n      height: var(--va-stepper-divider-length);\n      width: var(--va-stepper-divider-thickness);\n      min-width: var(--va-stepper-divider-thickness);\n      margin: var(--va-stepper-divider-spacing) 0;\n      margin-left: var(--va-stepper-divider-vertical-margin-left);\n    }\n  }\n\n  &__step-content-wrapper {\n    padding: var(--va-stepper-step-content-wrapper-padding);\n  }\n\n  &__step-content {\n    margin: var(--va-stepper-step-content-margin);\n  }\n\n  &__controls {\n    display: flex;\n    gap: var(--va-stepper-controls-gap);\n  }\n}\n</style>\n"],"names":[],"mappings":"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"}